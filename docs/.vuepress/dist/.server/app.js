"use strict";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports[Symbol.toStringTag] = "Module";
var vueRouter = require("vue-router");
var vue = require("vue");
var core = require("@vueuse/core");
var icons = require("@wovosoft/wovoui-icons");
var nprogress$1 = require("nprogress");
var serverRenderer = require("vue/server-renderer");
var kebabCase = require("lodash/kebabCase");
var lodash = require("lodash");
var string_js = require("lodash/string.js");
var core$1 = require("@popperjs/core");
var hljs = require("highlight.js/lib/core");
var utils = require("@highlightjs/vue-plugin/src/lib/utils");
var dayjs = require("dayjs");
var isToday = require("dayjs/plugin/isToday");
var localData = require("dayjs/plugin/localeData");
function _interopDefaultLegacy(e) {
  return e && typeof e === "object" && "default" in e ? e : { "default": e };
}
function _interopNamespace(e) {
  if (e && e.__esModule)
    return e;
  var n = { __proto__: null, [Symbol.toStringTag]: "Module" };
  if (e) {
    Object.keys(e).forEach(function(k) {
      if (k !== "default") {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function() {
            return e[k];
          }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}
var icons__namespace = /* @__PURE__ */ _interopNamespace(icons);
var nprogress__namespace = /* @__PURE__ */ _interopNamespace(nprogress$1);
var kebabCase__default = /* @__PURE__ */ _interopDefaultLegacy(kebabCase);
var hljs__default = /* @__PURE__ */ _interopDefaultLegacy(hljs);
var dayjs__default = /* @__PURE__ */ _interopDefaultLegacy(dayjs);
var isToday__default = /* @__PURE__ */ _interopDefaultLegacy(isToday);
var localData__default = /* @__PURE__ */ _interopDefaultLegacy(localData);
const ClientOnly = vue.defineComponent({
  setup(_, ctx) {
    const isMounted = vue.ref(false);
    vue.onMounted(() => {
      isMounted.value = true;
    });
    return () => {
      var _a, _b;
      return isMounted.value ? (_b = (_a = ctx.slots).default) === null || _b === void 0 ? void 0 : _b.call(_a) : null;
    };
  }
});
const pagesComponents = {
  "v-8daa1a0e": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$H;
  })),
  "v-caf798c0": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$F;
  })),
  "v-3352235f": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$D;
  })),
  "v-555fbfe6": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$C;
  })),
  "v-76a6e250": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$A;
  })),
  "v-62839e5e": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return groups_html$2;
  })),
  "v-d6c3ca72": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$y;
  })),
  "v-96167c50": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$w;
  })),
  "v-78191965": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$u;
  })),
  "v-03d41ff6": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$t;
  })),
  "v-6e85a749": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$r;
  })),
  "v-2394e1a6": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$p;
  })),
  "v-d02a7d16": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return input_html$4;
  })),
  "v-2643f7a4": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return checkbox_html$1;
  })),
  "v-9d060068": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return group_html$2;
  })),
  "v-14948c92": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$n;
  })),
  "v-909a953e": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return input_html$2;
  })),
  "v-64ecefd0": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return radio_html$1;
  })),
  "v-b3c164ec": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return rating_html$2;
  })),
  "v-ca67e4ea": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return select_html$2;
  })),
  "v-0087f093": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return spinbutton_html$2;
  })),
  "v-2ecfa7e4": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return tags_html$2;
  })),
  "v-ccdc4da0": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$m;
  })),
  "v-fb1db6e4": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$k;
  })),
  "v-366a25f4": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$j;
  })),
  "v-01e68820": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return index_html$h;
  })),
  "v-3706649a": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return _404_html$2;
  }))
};
const pagesData$1 = {
  "v-8daa1a0e": () => Promise.resolve().then(function() {
    return index_html$f;
  }).then(({ data: data2 }) => data2),
  "v-caf798c0": () => Promise.resolve().then(function() {
    return index_html$e;
  }).then(({ data: data2 }) => data2),
  "v-3352235f": () => Promise.resolve().then(function() {
    return index_html$d;
  }).then(({ data: data2 }) => data2),
  "v-555fbfe6": () => Promise.resolve().then(function() {
    return index_html$c;
  }).then(({ data: data2 }) => data2),
  "v-76a6e250": () => Promise.resolve().then(function() {
    return index_html$b;
  }).then(({ data: data2 }) => data2),
  "v-62839e5e": () => Promise.resolve().then(function() {
    return groups_html;
  }).then(({ data: data2 }) => data2),
  "v-d6c3ca72": () => Promise.resolve().then(function() {
    return index_html$a;
  }).then(({ data: data2 }) => data2),
  "v-96167c50": () => Promise.resolve().then(function() {
    return index_html$9;
  }).then(({ data: data2 }) => data2),
  "v-78191965": () => Promise.resolve().then(function() {
    return index_html$8;
  }).then(({ data: data2 }) => data2),
  "v-03d41ff6": () => Promise.resolve().then(function() {
    return index_html$7;
  }).then(({ data: data2 }) => data2),
  "v-6e85a749": () => Promise.resolve().then(function() {
    return index_html$6;
  }).then(({ data: data2 }) => data2),
  "v-2394e1a6": () => Promise.resolve().then(function() {
    return index_html$5;
  }).then(({ data: data2 }) => data2),
  "v-d02a7d16": () => Promise.resolve().then(function() {
    return input_html$1;
  }).then(({ data: data2 }) => data2),
  "v-2643f7a4": () => Promise.resolve().then(function() {
    return checkbox_html;
  }).then(({ data: data2 }) => data2),
  "v-9d060068": () => Promise.resolve().then(function() {
    return group_html;
  }).then(({ data: data2 }) => data2),
  "v-14948c92": () => Promise.resolve().then(function() {
    return index_html$4;
  }).then(({ data: data2 }) => data2),
  "v-909a953e": () => Promise.resolve().then(function() {
    return input_html;
  }).then(({ data: data2 }) => data2),
  "v-64ecefd0": () => Promise.resolve().then(function() {
    return radio_html;
  }).then(({ data: data2 }) => data2),
  "v-b3c164ec": () => Promise.resolve().then(function() {
    return rating_html;
  }).then(({ data: data2 }) => data2),
  "v-ca67e4ea": () => Promise.resolve().then(function() {
    return select_html;
  }).then(({ data: data2 }) => data2),
  "v-0087f093": () => Promise.resolve().then(function() {
    return spinbutton_html;
  }).then(({ data: data2 }) => data2),
  "v-2ecfa7e4": () => Promise.resolve().then(function() {
    return tags_html;
  }).then(({ data: data2 }) => data2),
  "v-ccdc4da0": () => Promise.resolve().then(function() {
    return index_html$3;
  }).then(({ data: data2 }) => data2),
  "v-fb1db6e4": () => Promise.resolve().then(function() {
    return index_html$2;
  }).then(({ data: data2 }) => data2),
  "v-366a25f4": () => Promise.resolve().then(function() {
    return index_html$1;
  }).then(({ data: data2 }) => data2),
  "v-01e68820": () => Promise.resolve().then(function() {
    return index_html;
  }).then(({ data: data2 }) => data2),
  "v-3706649a": () => Promise.resolve().then(function() {
    return _404_html;
  }).then(({ data: data2 }) => data2)
};
const pagesData = vue.ref(pagesData$1);
const pageDataEmpty = vue.readonly({
  key: "",
  path: "",
  title: "",
  lang: "",
  frontmatter: {},
  excerpt: "",
  headers: []
});
const pageData = vue.ref(pageDataEmpty);
const usePageData = () => pageData;
const resolvePageData = async (pageKey) => {
  const pageDataResolver = pagesData.value[pageKey];
  if (!pageDataResolver) {
    return pageDataEmpty;
  }
  const pageData2 = await pageDataResolver();
  return pageData2 !== null && pageData2 !== void 0 ? pageData2 : pageDataEmpty;
};
if (false) {
  __VUE_HMR_RUNTIME__.updatePageData = (data2) => {
    pagesData.value[data2.key] = () => Promise.resolve(data2);
    if (data2.key === pageData.value.key) {
      pageData.value = data2;
    }
  };
}
const pageFrontmatterSymbol = Symbol("");
const usePageFrontmatter = () => {
  const pageFrontmatter = vue.inject(pageFrontmatterSymbol);
  if (!pageFrontmatter) {
    throw new Error("usePageFrontmatter() is called without provider.");
  }
  return pageFrontmatter;
};
const resolvePageFrontmatter = (pageData2) => pageData2.frontmatter;
const isArray = Array.isArray;
const isFunction = (val) => typeof val === "function";
const isString = (val) => typeof val === "string";
const resolveHeadIdentifier = ([tag, attrs, content]) => {
  if (tag === "meta" && attrs.name) {
    return `${tag}.${attrs.name}`;
  }
  if (["title", "base"].includes(tag)) {
    return tag;
  }
  if (tag === "template" && attrs.id) {
    return `${tag}.${attrs.id}`;
  }
  return JSON.stringify([tag, attrs, content]);
};
const dedupeHead = (head) => {
  const identifierSet = new Set();
  const result = [];
  head.forEach((item) => {
    const identifier = resolveHeadIdentifier(item);
    if (!identifierSet.has(identifier)) {
      identifierSet.add(identifier);
      result.push(item);
    }
  });
  return result;
};
const isLinkHttp = (link) => /^(https?:)?\/\//.test(link);
const isLinkMailto = (link) => /^mailto:/.test(link);
const isLinkTel = (link) => /^tel:/.test(link);
const isPlainObject = (val) => Object.prototype.toString.call(val) === "[object Object]";
const removeEndingSlash = (str) => str.replace(/\/$/, "");
const removeLeadingSlash = (str) => str.replace(/^\//, "");
const resolveLocalePath = (locales, routePath) => {
  const localePaths = Object.keys(locales).sort((a, b) => {
    const levelDelta = b.split("/").length - a.split("/").length;
    if (levelDelta !== 0) {
      return levelDelta;
    }
    return b.length - a.length;
  });
  for (const localePath of localePaths) {
    if (routePath.startsWith(localePath)) {
      return localePath;
    }
  }
  return "/";
};
const pageHeadSymbol = Symbol("");
const usePageHead = () => {
  const pageHead = vue.inject(pageHeadSymbol);
  if (!pageHead) {
    throw new Error("usePageHead() is called without provider.");
  }
  return pageHead;
};
const resolvePageHead = (headTitle, frontmatter, siteLocale) => {
  const description = isString(frontmatter.description) ? frontmatter.description : siteLocale.description;
  const head = [
    ...isArray(frontmatter.head) ? frontmatter.head : [],
    ...siteLocale.head,
    ["title", {}, headTitle],
    ["meta", { name: "description", content: description }]
  ];
  return dedupeHead(head);
};
const pageHeadTitleSymbol = Symbol("");
const resolvePageHeadTitle = (page, siteLocale) => `${page.title ? `${page.title} | ` : ``}${siteLocale.title}`;
const pageLangSymbol = Symbol("");
const usePageLang = () => {
  const pageLang = vue.inject(pageLangSymbol);
  if (!pageLang) {
    throw new Error("usePageLang() is called without provider.");
  }
  return pageLang;
};
const resolvePageLang = (pageData2) => pageData2.lang || "en";
const routeLocaleSymbol = Symbol("");
const useRouteLocale = () => {
  const routeLocale = vue.inject(routeLocaleSymbol);
  if (!routeLocale) {
    throw new Error("useRouteLocale() is called without provider.");
  }
  return routeLocale;
};
const resolveRouteLocale = (locales, routePath) => resolveLocalePath(locales, routePath);
const siteData$1 = {
  "base": "/",
  "lang": "en-US",
  "title": "wovoui",
  "description": "Bootstrap 5 & Vue 3 UI Components",
  "head": [],
  "locales": {}
};
const siteData = vue.ref(siteData$1);
const useSiteData = () => siteData;
if (false) {
  __VUE_HMR_RUNTIME__.updateSiteData = (data2) => {
    siteData.value = data2;
  };
}
const siteLocaleDataSymbol = Symbol("");
const useSiteLocaleData = () => {
  const siteLocaleData = vue.inject(siteLocaleDataSymbol);
  if (!siteLocaleData) {
    throw new Error("useSiteLocaleData() is called without provider.");
  }
  return siteLocaleData;
};
const resolveSiteLocaleData = (site, routeLocale) => __spreadValues(__spreadValues({}, site), site.locales[routeLocale]);
const setupUpdateHead = () => {
  vueRouter.useRoute();
  const head = usePageHead();
  const lang = usePageLang();
  {
    const ssrContext = vue.useSSRContext();
    if (ssrContext) {
      ssrContext.head = head.value;
      ssrContext.lang = lang.value;
    }
    return;
  }
};
const Content = (props) => {
  let key;
  if (props.pageKey) {
    key = props.pageKey;
  } else {
    const page = usePageData();
    key = page.value.key;
  }
  const component = pagesComponents[key];
  if (component) {
    return vue.h(component);
  }
  return vue.h("div", "404 Not Found");
};
Content.displayName = "Content";
Content.props = {
  pageKey: {
    type: String,
    required: false
  }
};
const layoutComponents = {
  "404": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return _404;
  })),
  "Layout": vue.defineAsyncComponent(() => Promise.resolve().then(function() {
    return Layout;
  }))
};
const Vuepress = vue.defineComponent({
  name: "Vuepress",
  setup() {
    const page = usePageData();
    const layoutComponent = vue.computed(() => {
      let layoutName;
      if (page.value.path) {
        const frontmatterLayout = page.value.frontmatter.layout;
        if (isString(frontmatterLayout)) {
          layoutName = frontmatterLayout;
        } else {
          layoutName = "Layout";
        }
      } else {
        layoutName = "404";
      }
      return layoutComponents[layoutName] || vue.resolveComponent(layoutName, false);
    });
    return () => vue.h(layoutComponent.value);
  }
});
const defineClientAppEnhance = (clientAppEnhance) => clientAppEnhance;
const defineClientAppSetup = (clientAppSetup) => clientAppSetup;
const withBase = (url) => {
  if (isLinkHttp(url))
    return url;
  const base = useSiteData().value.base;
  return `${base}${removeLeadingSlash(url)}`;
};
var vars$3 = "";
var externalLinkIcon = "";
const svg = vue.h("svg", {
  "class": "external-link-icon",
  "xmlns": "http://www.w3.org/2000/svg",
  "aria-hidden": "true",
  "focusable": "false",
  "x": "0px",
  "y": "0px",
  "viewBox": "0 0 100 100",
  "width": "15",
  "height": "15"
}, [
  vue.h("path", {
    fill: "currentColor",
    d: "M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"
  }),
  vue.h("polygon", {
    fill: "currentColor",
    points: "45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"
  })
]);
const ExternalLinkIcon = (_, { slots }) => {
  var _a;
  return vue.h("span", [svg, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
};
ExternalLinkIcon.displayName = "ExternalLinkIcon";
var clientAppEnhance0 = defineClientAppEnhance(({ app }) => {
  app.component("ExternalLinkIcon", ExternalLinkIcon);
});
var vars$2 = "";
var mediumZoom = "";
var clientAppEnhance1 = defineClientAppEnhance(({ app, router }) => {
  return;
});
const themeData$1 = {
  "logo": "/wovoui.png",
  "repo": "https://github.com/wovosoft/wovouidocs",
  "docsDir": "docs",
  "docsBranch": "master",
  "editLink": true,
  "mainRepoBranch": "master",
  "sidebar": [
    "/getting-started/",
    "/accordion/",
    "/alerts/",
    "/badges/",
    "/breadcrumbs/",
    "/buttons/",
    "/buttons/groups/",
    "/buttons/toolbars/",
    "/carousel/",
    "/collapse/",
    "/calendar/",
    "/cards/",
    "/dropdowns/",
    {
      "text": "Form",
      "link": "/form/",
      "collapsible": true,
      "children": [
        "/form/checkbox",
        "/form/group/",
        "/form/input",
        "/form/radio/",
        "/form/rating/",
        "/form/select/",
        "/form/spinbutton/",
        "/form/tags/"
      ]
    },
    "/list-group/",
    "/icons/"
  ],
  "navbar": [
    {
      "text": "Icons",
      "link": "/icons"
    },
    {
      "text": "WovoSoft",
      "link": "https://wovosoft.com"
    }
  ],
  "locales": {
    "/": {
      "selectLanguageName": "English"
    }
  },
  "darkMode": true,
  "selectLanguageText": "Languages",
  "selectLanguageAriaLabel": "Select language",
  "sidebarDepth": 2,
  "editLinkText": "Edit this page",
  "lastUpdated": true,
  "lastUpdatedText": "Last Updated",
  "contributors": true,
  "contributorsText": "Contributors",
  "notFound": [
    "There's nothing here.",
    "How did we get here?",
    "That's a Four-Oh-Four.",
    "Looks like we've got some broken links."
  ],
  "backToHome": "Take me home",
  "openInNewWindow": "open in new window",
  "toggleDarkMode": "toggle dark mode",
  "toggleSidebar": "toggle sidebar"
};
const themeData = vue.ref(themeData$1);
const useThemeData = () => themeData;
if (false) {
  __VUE_HMR_RUNTIME__.updateThemeData = (data2) => {
    themeData.value = data2;
  };
}
const themeLocaleDataSymbol = Symbol("");
const useThemeLocaleData$1 = () => {
  const themeLocaleData = vue.inject(themeLocaleDataSymbol);
  if (!themeLocaleData) {
    throw new Error("useThemeLocaleData() is called without provider.");
  }
  return themeLocaleData;
};
const resolveThemeLocaleData = (theme, routeLocale) => {
  var _a;
  return __spreadValues(__spreadValues({}, theme), (_a = theme.locales) === null || _a === void 0 ? void 0 : _a[routeLocale]);
};
var clientAppEnhance2 = defineClientAppEnhance(({ app }) => {
  const themeData2 = useThemeData();
  const routeLocale = app._context.provides[routeLocaleSymbol];
  const themeLocaleData = vue.computed(() => resolveThemeLocaleData(themeData2.value, routeLocale.value));
  app.provide(themeLocaleDataSymbol, themeLocaleData);
  Object.defineProperties(app.config.globalProperties, {
    $theme: {
      get() {
        return themeData2.value;
      }
    },
    $themeLocale: {
      get() {
        return themeLocaleData.value;
      }
    }
  });
});
const _sfc_main$2a = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  props: {
    type: {
      type: String,
      required: false,
      default: "tip"
    },
    text: {
      type: String,
      required: false,
      default: ""
    },
    vertical: {
      type: String,
      required: false,
      default: void 0
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<span${serverRenderer.ssrRenderAttrs(vue.mergeProps({
        class: ["badge", __props.type],
        style: {
          verticalAlign: __props.vertical
        }
      }, _attrs))}>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, () => {
        _push(`${serverRenderer.ssrInterpolate(__props.text)}`);
      }, _push, _parent);
      _push(`</span>`);
    };
  }
});
const _sfc_setup$2a = _sfc_main$2a.setup;
_sfc_main$2a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/global/Badge.vue");
  return _sfc_setup$2a ? _sfc_setup$2a(props, ctx) : void 0;
};
var CodeGroup = vue.defineComponent({
  name: "CodeGroup",
  setup(_, { slots }) {
    const activeIndex = vue.ref(-1);
    const tabRefs = vue.ref([]);
    const activateNext = (i = activeIndex.value) => {
      if (i < tabRefs.value.length - 1) {
        activeIndex.value = i + 1;
      } else {
        activeIndex.value = 0;
      }
      tabRefs.value[activeIndex.value].focus();
    };
    const activatePrev = (i = activeIndex.value) => {
      if (i > 0) {
        activeIndex.value = i - 1;
      } else {
        activeIndex.value = tabRefs.value.length - 1;
      }
      tabRefs.value[activeIndex.value].focus();
    };
    const keyboardHandler = (event, i) => {
      if (event.key === " " || event.key === "Enter") {
        event.preventDefault();
        activeIndex.value = i;
      } else if (event.key === "ArrowRight") {
        event.preventDefault();
        activateNext(i);
      } else if (event.key === "ArrowLeft") {
        event.preventDefault();
        activatePrev(i);
      }
    };
    return () => {
      var _a;
      const items = (((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)) || []).filter((vnode) => vnode.type.name === "CodeGroupItem").map((vnode) => {
        if (vnode.props === null) {
          vnode.props = {};
        }
        return vnode;
      });
      if (items.length === 0) {
        return null;
      }
      if (activeIndex.value < 0 || activeIndex.value > items.length - 1) {
        activeIndex.value = items.findIndex((vnode) => vnode.props.active === "" || vnode.props.active === true);
        if (activeIndex.value === -1) {
          activeIndex.value = 0;
        }
      } else {
        items.forEach((vnode, i) => {
          vnode.props.active = i === activeIndex.value;
        });
      }
      return vue.h("div", { class: "code-group" }, [
        vue.h("div", { class: "code-group__nav" }, vue.h("ul", { class: "code-group__ul" }, items.map((vnode, i) => {
          const isActive = i === activeIndex.value;
          return vue.h("li", { class: "code-group__li" }, vue.h("button", {
            ref: (element) => {
              if (element) {
                tabRefs.value[i] = element;
              }
            },
            class: {
              "code-group__nav-tab": true,
              "code-group__nav-tab-active": isActive
            },
            ariaPressed: isActive,
            ariaExpanded: isActive,
            onClick: () => activeIndex.value = i,
            onKeydown: (e) => keyboardHandler(e, i)
          }, vnode.props.title));
        }))),
        items
      ]);
    };
  }
});
const __default__$1 = vue.defineComponent({
  name: "CodeGroupItem"
});
const _sfc_main$29 = /* @__PURE__ */ vue.defineComponent(__spreadProps(__spreadValues({}, __default__$1), {
  __ssrInlineRender: true,
  props: {
    title: {
      type: String,
      required: true
    },
    active: {
      type: Boolean,
      required: false,
      default: false
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
        class: ["code-group-item", { "code-group-item__active": __props.active }],
        "aria-selected": __props.active
      }, _attrs))}>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
}));
const _sfc_setup$29 = _sfc_main$29.setup;
_sfc_main$29.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/global/CodeGroupItem.vue");
  return _sfc_setup$29 ? _sfc_setup$29(props, ctx) : void 0;
};
const darkModeSymbol = Symbol("");
const useDarkMode = () => {
  const isDarkMode = vue.inject(darkModeSymbol);
  if (!isDarkMode) {
    throw new Error("useDarkMode() is called without provider.");
  }
  return isDarkMode;
};
const setupDarkMode = () => {
  const themeLocale = useThemeLocaleData();
  const isDarkPreferred = core.usePreferredDark();
  const darkStorage = core.useStorage("vuepress-color-scheme", "auto");
  const isDarkMode = vue.computed({
    get() {
      if (!themeLocale.value.darkMode) {
        return false;
      }
      if (darkStorage.value === "auto") {
        return isDarkPreferred.value;
      }
      return darkStorage.value === "dark";
    },
    set(val) {
      if (val === isDarkPreferred.value) {
        darkStorage.value = "auto";
      } else {
        darkStorage.value = val ? "dark" : "light";
      }
    }
  });
  vue.provide(darkModeSymbol, isDarkMode);
  updateHtmlDarkClass(isDarkMode);
};
const updateHtmlDarkClass = (isDarkMode) => {
  const update = (value = isDarkMode.value) => {
    const htmlEl = window === null || window === void 0 ? void 0 : window.document.querySelector("html");
    htmlEl === null || htmlEl === void 0 ? void 0 : htmlEl.classList.toggle("dark", value);
  };
  vue.onMounted(() => {
    vue.watch(isDarkMode, update, { immediate: true });
  });
  vue.onUnmounted(() => update());
};
const useResolveRouteWithRedirect = (...args) => {
  const router = vueRouter.useRouter();
  const route = router.resolve(...args);
  const lastMatched = route.matched[route.matched.length - 1];
  if (!(lastMatched === null || lastMatched === void 0 ? void 0 : lastMatched.redirect)) {
    return route;
  }
  const { redirect } = lastMatched;
  const resolvedRedirect = isFunction(redirect) ? redirect(route) : redirect;
  const resolvedRedirectObj = isString(resolvedRedirect) ? { path: resolvedRedirect } : resolvedRedirect;
  return useResolveRouteWithRedirect(__spreadValues({
    hash: route.hash,
    query: route.query,
    params: route.params
  }, resolvedRedirectObj));
};
const useNavLink = (item) => {
  const resolved = useResolveRouteWithRedirect(item);
  return {
    text: resolved.meta.title || item,
    link: resolved.name === "404" ? item : resolved.fullPath
  };
};
let promise = null;
let promiseResolve = null;
const scrollPromise = {
  wait: () => promise,
  pending: () => {
    promise = new Promise((resolve) => promiseResolve = resolve);
  },
  resolve: () => {
    promiseResolve === null || promiseResolve === void 0 ? void 0 : promiseResolve();
    promise = null;
    promiseResolve = null;
  }
};
const useScrollPromise = () => scrollPromise;
const sidebarItemsSymbol = Symbol("sidebarItems");
const useSidebarItems = () => {
  const sidebarItems = vue.inject(sidebarItemsSymbol);
  if (!sidebarItems) {
    throw new Error("useSidebarItems() is called without provider.");
  }
  return sidebarItems;
};
const setupSidebarItems = () => {
  const themeLocale = useThemeLocaleData();
  const frontmatter = usePageFrontmatter();
  const sidebarItems = vue.computed(() => resolveSidebarItems(frontmatter.value, themeLocale.value));
  vue.provide(sidebarItemsSymbol, sidebarItems);
};
const resolveSidebarItems = (frontmatter, themeLocale) => {
  var _a, _b, _c, _d;
  const sidebarConfig = (_b = (_a = frontmatter.sidebar) !== null && _a !== void 0 ? _a : themeLocale.sidebar) !== null && _b !== void 0 ? _b : "auto";
  const sidebarDepth = (_d = (_c = frontmatter.sidebarDepth) !== null && _c !== void 0 ? _c : themeLocale.sidebarDepth) !== null && _d !== void 0 ? _d : 2;
  if (frontmatter.home || sidebarConfig === false) {
    return [];
  }
  if (sidebarConfig === "auto") {
    return resolveAutoSidebarItems(sidebarDepth);
  }
  if (isArray(sidebarConfig)) {
    return resolveArraySidebarItems(sidebarConfig, sidebarDepth);
  }
  if (isPlainObject(sidebarConfig)) {
    return resolveMultiSidebarItems(sidebarConfig, sidebarDepth);
  }
  return [];
};
const headerToSidebarItem = (header, sidebarDepth) => ({
  text: header.title,
  link: `#${header.slug}`,
  children: headersToSidebarItemChildren(header.children, sidebarDepth)
});
const headersToSidebarItemChildren = (headers, sidebarDepth) => sidebarDepth > 0 ? headers.map((header) => headerToSidebarItem(header, sidebarDepth - 1)) : [];
const resolveAutoSidebarItems = (sidebarDepth) => {
  const page = usePageData();
  return [
    {
      text: page.value.title,
      children: headersToSidebarItemChildren(page.value.headers, sidebarDepth)
    }
  ];
};
const resolveArraySidebarItems = (sidebarConfig, sidebarDepth) => {
  const route = vueRouter.useRoute();
  const page = usePageData();
  const handleChildItem = (item) => {
    var _a;
    let childItem;
    if (isString(item)) {
      childItem = useNavLink(item);
    } else {
      childItem = item;
    }
    if (childItem.children) {
      return __spreadProps(__spreadValues({}, childItem), {
        children: childItem.children.map((item2) => handleChildItem(item2))
      });
    }
    if (childItem.link === route.path) {
      const headers = ((_a = page.value.headers[0]) === null || _a === void 0 ? void 0 : _a.level) === 1 ? page.value.headers[0].children : page.value.headers;
      return __spreadProps(__spreadValues({}, childItem), {
        children: headersToSidebarItemChildren(headers, sidebarDepth)
      });
    }
    return childItem;
  };
  return sidebarConfig.map((item) => handleChildItem(item));
};
const resolveMultiSidebarItems = (sidebarConfig, sidebarDepth) => {
  var _a;
  const route = vueRouter.useRoute();
  const sidebarPath = resolveLocalePath(sidebarConfig, route.path);
  const matchedSidebarConfig = (_a = sidebarConfig[sidebarPath]) !== null && _a !== void 0 ? _a : [];
  return resolveArraySidebarItems(matchedSidebarConfig, sidebarDepth);
};
const useThemeLocaleData = () => useThemeLocaleData$1();
const _sfc_main$28 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const themeLocale = useThemeLocaleData();
    return (_ctx, _push, _parent, _attrs) => {
      _push(serverRenderer.ssrRenderComponent(vue.unref(ExternalLinkIcon), _attrs, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="sr-only"${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(themeLocale).openInNewWindow)}</span>`);
          } else {
            return [
              vue.createVNode("span", { class: "sr-only" }, vue.toDisplayString(vue.unref(themeLocale).openInNewWindow), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$28 = _sfc_main$28.setup;
_sfc_main$28.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/global/ExternalLinkIcon.vue");
  return _sfc_setup$28 ? _sfc_setup$28(props, ctx) : void 0;
};
var index = "";
var clientAppEnhance3 = defineClientAppEnhance(({ app, router }) => {
  app.component("Badge", _sfc_main$2a);
  app.component("CodeGroup", CodeGroup);
  app.component("CodeGroupItem", _sfc_main$29);
  delete app._context.components.ExternalLinkIcon;
  app.component("ExternalLinkIcon", _sfc_main$28);
  app.component("NavbarSearch", () => {
    const SearchComponent = app.component("Docsearch") || app.component("SearchBox");
    if (SearchComponent) {
      return vue.h(SearchComponent);
    }
    return null;
  });
  const scrollBehavior = router.options.scrollBehavior;
  router.options.scrollBehavior = async (...args) => {
    await useScrollPromise().wait();
    return scrollBehavior(...args);
  };
});
const makeString = (initial = null) => ({
  type: String,
  default: initial
});
const makeBoolean = (initial = true) => ({
  type: Boolean,
  default: initial
});
const makeNumber = (initial = 0) => ({
  type: Number,
  default: initial
});
const make = (type, initial) => ({
  type,
  default: () => initial
});
const isBoolean = (val) => typeof val === "boolean";
var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$27 = vue.defineComponent({
  name: "Accordion",
  emits: ["update:modelValue"],
  props: {
    modelValue: makeNumber(null),
    flush: { type: Boolean, default: false },
    alwaysOpen: { type: Boolean, default: false }
  },
  provide() {
    return {
      registerItem: (item) => this.items.push(item),
      setActiveItem: (item) => {
        this.activeItem = item;
        this.$emit("update:modelValue", this.items.indexOf(item));
        if (!this.alwaysOpen) {
          this.items.filter((i) => i !== item).forEach((i) => i.value = false);
        }
      }
    };
  },
  setup(props, context) {
    const activeItem = vue.ref(null);
    const items = vue.reactive([]);
    context.expose({
      toggleAll: () => items.forEach((i) => i.value = !i.value),
      openAll: () => items.forEach((i) => i.value = true),
      collapseAll: () => items.forEach((i) => i.value = false)
    });
    return {
      items,
      activeItem
    };
  }
});
function _sfc_ssrRender$1I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: ["accordion", { "accordion-flush": _ctx.flush }]
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$27 = _sfc_main$27.setup;
_sfc_main$27.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Accordion.vue");
  return _sfc_setup$27 ? _sfc_setup$27(props, ctx) : void 0;
};
var Accordion = /* @__PURE__ */ _export_sfc(_sfc_main$27, [["ssrRender", _sfc_ssrRender$1I]]);
const _sfc_main$26 = vue.defineComponent({
  name: "AccordionBody"
});
function _sfc_ssrRender$1H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "accordion-body" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$26 = _sfc_main$26.setup;
_sfc_main$26.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/AccordionBody.vue");
  return _sfc_setup$26 ? _sfc_setup$26(props, ctx) : void 0;
};
var AccordionBody = /* @__PURE__ */ _export_sfc(_sfc_main$26, [["ssrRender", _sfc_ssrRender$1H]]);
const _sfc_main$25 = vue.defineComponent({
  name: "AccordionHeader",
  emits: ["update:modelValue"],
  props: {
    tag: makeString("h2"),
    toggleTag: makeString("button"),
    modelValue: makeBoolean(false)
  }
});
function _sfc_ssrRender$1G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent(_ctx.tag), vue.mergeProps({ class: "accordion-header" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderVNode(_push2, vue.createVNode(vue.resolveDynamicComponent(_ctx.toggleTag), {
          class: ["accordion-button", { "collapsed": !_ctx.modelValue }],
          type: _ctx.toggleTag === "button" ? "button" : null,
          "aria-expanded": _ctx.modelValue
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }), _parent2, _scopeId);
      } else {
        return [
          (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.toggleTag), {
            onClick: ($event) => _ctx.$emit("update:modelValue", !_ctx.modelValue),
            class: ["accordion-button", { "collapsed": !_ctx.modelValue }],
            type: _ctx.toggleTag === "button" ? "button" : null,
            "aria-expanded": _ctx.modelValue
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }, 8, ["onClick", "type", "class", "aria-expanded"]))
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$25 = _sfc_main$25.setup;
_sfc_main$25.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/AccordionHeader.vue");
  return _sfc_setup$25 ? _sfc_setup$25(props, ctx) : void 0;
};
var AccordionHeader = /* @__PURE__ */ _export_sfc(_sfc_main$25, [["ssrRender", _sfc_ssrRender$1G]]);
const collapseTransitionEnd = (e, showing, dim = "height") => {
  e.target.classList.remove("collapsing");
  e.target.classList.add("collapse");
  if (showing) {
    e.target.classList.add("show");
  } else {
    e.target.classList.remove("show");
  }
  e.target.style[dim] = "";
};
const toggleCollapse = (container, shown, dim = "height") => {
  container.style.height = "auto";
  let dimension = container[dim === "height" ? "clientHeight" : "clientWidth"] + "px";
  if (shown) {
    container.classList.add("collapsing");
    container.style[dim] = "0px";
    setTimeout(() => container.style[dim] = dimension, 0);
  } else {
    container.style[dim] = dimension;
    container.classList.add("collapsing");
    setTimeout(() => container.style[dim] = "0px", 0);
  }
};
const isObject = (obj) => typeof obj === "object" && !Array.isArray(obj);
const title = (str) => lodash.startCase(lodash.toLower(str));
const _sfc_main$24 = {
  name: "Collapse",
  props: {
    modelValue: makeBoolean(false),
    visible: makeBoolean(false),
    class: make([Array, String], null),
    id: makeString(),
    isNav: makeBoolean(false)
  },
  watch: {
    modelValue(value) {
      this.shown = value;
    },
    shown(value) {
      this.$refs.collapse.classList.remove("collapse", "show");
      this.toggleCollapse(this.$refs.collapse, value, "height");
    }
  },
  setup(props, context) {
    const shouldRender = vue.ref(true);
    const shown = vue.ref(props.modelValue);
    if (props.visible) {
      context.emit("update:modelValue", true);
    }
    const classes = vue.computed(() => {
      return [
        "collapse",
        props.class,
        {
          "navbar-collapse": props.isNav
        }
      ];
    });
    return {
      classes,
      shown,
      shouldRender,
      toggleCollapse,
      collapseTransitionEnd,
      updateState: (value) => {
        shown.value = value;
        context.emit("update:modelValue", value);
      }
    };
  },
  methods: {
    listener(e) {
      if (e.detail === this.id && this.id) {
        let value = !this.shown;
        this.shown = value;
        this.$emit("update:modelValue", value);
      }
    }
  },
  mounted() {
    document.addEventListener("toggleCollapse", this.listener);
  },
  unmounted() {
    document.removeEventListener("toggleCollapse", this.listener);
  }
};
function _sfc_ssrRender$1F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: $setup.classes,
    ref: "collapse",
    id: $props.id
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$24 = _sfc_main$24.setup;
_sfc_main$24.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Collapse.vue");
  return _sfc_setup$24 ? _sfc_setup$24(props, ctx) : void 0;
};
var Collapse = /* @__PURE__ */ _export_sfc(_sfc_main$24, [["ssrRender", _sfc_ssrRender$1F]]);
const _sfc_main$23 = vue.defineComponent({
  name: "AccordionItem",
  emits: ["update:modelValue"],
  components: { AccordionHeader, AccordionBody, Collapse },
  props: {
    header: makeString(null),
    modelValue: makeBoolean(false)
  },
  setup(props, {}) {
    const visible = vue.ref(props.modelValue);
    vue.inject("registerItem")(visible);
    const setActiveItem = vue.inject("setActiveItem");
    vue.watch(visible, (value) => {
      if (value) {
        setActiveItem(visible);
      }
    });
    return {
      visible
    };
  }
});
function _sfc_ssrRender$1E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_AccordionHeader = vue.resolveComponent("AccordionHeader");
  const _component_Collapse = vue.resolveComponent("Collapse");
  const _component_AccordionBody = vue.resolveComponent("AccordionBody");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "accordion-item" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_AccordionHeader, {
    modelValue: _ctx.visible,
    "onUpdate:modelValue": ($event) => _ctx.visible = $event
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "header", {}, () => {
          _push2(`${serverRenderer.ssrInterpolate(_ctx.header)}`);
        }, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "header", {}, () => [
            vue.createTextVNode(vue.toDisplayString(_ctx.header), 1)
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_Collapse, {
    class: "accordion-collapse",
    modelValue: _ctx.visible,
    "onUpdate:modelValue": ($event) => _ctx.visible = $event
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_AccordionBody, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_AccordionBody, null, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          })
        ];
      }
    }),
    _: 3
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$23 = _sfc_main$23.setup;
_sfc_main$23.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/AccordionItem.vue");
  return _sfc_setup$23 ? _sfc_setup$23(props, ctx) : void 0;
};
var AccordionItem = /* @__PURE__ */ _export_sfc(_sfc_main$23, [["ssrRender", _sfc_ssrRender$1E]]);
const _sfc_main$22 = {
  props: {
    white: { type: Boolean, default: () => false },
    ariaLabel: makeString("Close")
  }
};
function _sfc_ssrRender$1D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    type: "button",
    "aria-label": $props.ariaLabel,
    class: [{ "btn-close-white": $props.white }, "btn-close"]
  }, _attrs))}></button>`);
}
const _sfc_setup$22 = _sfc_main$22.setup;
_sfc_main$22.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/ButtonClose.vue");
  return _sfc_setup$22 ? _sfc_setup$22(props, ctx) : void 0;
};
var ButtonClose = /* @__PURE__ */ _export_sfc(_sfc_main$22, [["ssrRender", _sfc_ssrRender$1D]]);
const _sfc_main$21 = vue.defineComponent({
  emits: ["update:modelValue", "update:show", "dismissed", "countdown"],
  components: { ButtonClose },
  props: {
    tag: { type: String, default: () => "div" },
    dismissLabel: makeString("Alert"),
    variant: { type: String, default: () => "primary" },
    dismissible: { type: Boolean, default: () => false },
    fade: { type: Boolean, default: () => false },
    modelValue: { type: Boolean, default: () => null },
    show: { type: Boolean, default: () => false },
    countdown: makeNumber(null),
    countdownStep: { type: Number, default: () => 1 }
  },
  setup(props, context) {
    const visible = vue.ref(false);
    const dismissHandler = vue.ref(null);
    const countdownHandler = vue.ref(null);
    const timeoutNow = vue.ref(0);
    vue.watch(visible, (value) => {
      context.emit("update:modelValue", value);
      context.emit("update:show", value);
      if (!value) {
        context.emit("dismissed", true);
      }
      if (value && props.countdown !== null) {
        dismissHandler.value = setTimeout(() => visible.value = false, props.countdown * 1e3);
        context.emit("countdown", props.countdown);
        timeoutNow.value = props.countdown - 1;
        countdownHandler.value = setInterval(() => {
          context.emit("countdown", timeoutNow.value--);
        }, props.countdownStep * 1e3);
      } else if (dismissHandler.value && !value) {
        clearTimeout(dismissHandler.value);
        clearInterval(countdownHandler.value);
      }
    });
    vue.watch(() => props.modelValue, (value) => visible.value = !!value);
    vue.watch(() => props.show, (value) => visible.value = !!value);
    if (props.modelValue !== null) {
      visible.value = !!props.modelValue;
    }
    if (props.show !== null) {
      visible.value = !!props.show;
    } else {
      visible.value = !!props.modelValue;
    }
    const show = () => visible.value = true;
    const hide = () => visible.value = false;
    const toggle = () => visible.value = !visible.value;
    context.expose({
      show,
      hide,
      toggle
    });
    return {
      timeoutNow,
      classes: vue.computed(() => [
        "alert",
        {
          ["alert-" + props.variant]: !!props.variant,
          "alert-dismissible": props.dismissible
        }
      ]),
      visible,
      show,
      hide,
      toggle
    };
  }
});
function _sfc_ssrRender$1C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ButtonClose = vue.resolveComponent("ButtonClose");
  if (_ctx.visible) {
    serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent(_ctx.tag), vue.mergeProps({
      class: _ctx.classes,
      role: "alert"
    }, _attrs), {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {
            countdown: _ctx.countdown,
            timeoutNow: _ctx.timeoutNow,
            show: _ctx.show,
            hide: _ctx.hide,
            toggle: _ctx.toggle
          }, null, _push2, _parent2, _scopeId);
          if (_ctx.dismissible) {
            _push2(serverRenderer.ssrRenderComponent(_component_ButtonClose, { "aria-label": _ctx.dismissLabel }, null, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default", {
              countdown: _ctx.countdown,
              timeoutNow: _ctx.timeoutNow,
              show: _ctx.show,
              hide: _ctx.hide,
              toggle: _ctx.toggle
            }),
            _ctx.dismissible ? (vue.openBlock(), vue.createBlock(_component_ButtonClose, {
              key: 0,
              "aria-label": _ctx.dismissLabel,
              onClick: ($event) => _ctx.visible = false
            }, null, 8, ["aria-label", "onClick"])) : vue.createCommentVNode("", true)
          ];
        }
      }),
      _: 3
    }), _parent);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$21 = _sfc_main$21.setup;
_sfc_main$21.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Alert.vue");
  return _sfc_setup$21 ? _sfc_setup$21(props, ctx) : void 0;
};
var Alert = /* @__PURE__ */ _export_sfc(_sfc_main$21, [["ssrRender", _sfc_ssrRender$1C]]);
const _sfc_main$20 = {
  name: "AlertHeading",
  props: {
    tag: makeString("h4")
  },
  setup(props, context) {
    return {
      classes: vue.computed(() => [
        "alert-heading"
      ])
    };
  }
};
function _sfc_ssrRender$1B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$20 = _sfc_main$20.setup;
_sfc_main$20.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/AlertHeading.vue");
  return _sfc_setup$20 ? _sfc_setup$20(props, ctx) : void 0;
};
var AlertHeading = /* @__PURE__ */ _export_sfc(_sfc_main$20, [["ssrRender", _sfc_ssrRender$1B]]);
const _sfc_main$1$ = {
  name: "AlertLink",
  props: {
    href: makeString("#")
  }
};
function _sfc_ssrRender$1A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<a${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    href: $props.href,
    class: "alert-link"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</a>`);
}
const _sfc_setup$1$ = _sfc_main$1$.setup;
_sfc_main$1$.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/AlertLink.vue");
  return _sfc_setup$1$ ? _sfc_setup$1$(props, ctx) : void 0;
};
var AlertLink = /* @__PURE__ */ _export_sfc(_sfc_main$1$, [["ssrRender", _sfc_ssrRender$1A]]);
var ColorVariants$1 = (initial = "secondary") => ({
  type: String,
  default: typeof initial === "function" ? initial : () => initial
});
var BoolPill = (initial = false) => ({
  type: Boolean,
  default: typeof initial === "function" ? initial : () => initial
});
const _sfc_main$1_ = vue.defineComponent({
  props: {
    tag: makeString("span"),
    variant: ColorVariants$1("secondary"),
    pill: BoolPill(false),
    href: makeString(null),
    position: { type: String }
  },
  setup(props, context) {
    const attributes = vue.reactive({
      href: null,
      target: null
    });
    if (props.href) {
      attributes.href = props.href;
      attributes.target = "_self";
    }
    return {
      attributes,
      classes: vue.computed(() => [
        "badge",
        {
          ["bg-" + props.variant]: !!props.variant,
          "rounded-pill": props.pill,
          "text-decoration-none": props.href,
          "position-absolute translate-middle": props.position,
          "start-100 top-0": props.position === "top-right",
          "start-0 top-0": props.position === "top-left",
          "start-0 top-100": props.position === "bottom-left",
          "start-100 top-100": props.position === "bottom-right"
        }
      ])
    };
  }
});
function _sfc_ssrRender$1z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent(_ctx.href ? "a" : _ctx.tag), vue.mergeProps(_ctx.attributes, { class: _ctx.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1_ = _sfc_main$1_.setup;
_sfc_main$1_.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Badge.vue");
  return _sfc_setup$1_ ? _sfc_setup$1_(props, ctx) : void 0;
};
var Badge = /* @__PURE__ */ _export_sfc(_sfc_main$1_, [["ssrRender", _sfc_ssrRender$1z]]);
const _sfc_main$1Z = {
  name: "BreadcrumbItem",
  props: {
    tag: makeString("li"),
    active: makeBoolean(false),
    activeClass: makeString("active"),
    append: makeBoolean(false),
    ariaCurrent: makeString("location"),
    disabled: makeBoolean(false),
    exact: makeBoolean(false),
    rel: makeString(null),
    replace: makeBoolean(false),
    target: makeString("_self"),
    to: make([Object, String], null),
    href: makeString()
  },
  setup(props, context) {
    const classes = vue.computed(() => {
      return [
        "breadcrumb-item",
        {
          "active": props.active
        }
      ];
    });
    const attributes = vue.computed(() => {
      return {
        ariaCurrent: props.ariaCurrent
      };
    });
    return {
      classes,
      attributes,
      isRouterInstalled: vue.computed(() => !!context.$router)
    };
  }
};
function _sfc_ssrRender$1y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_router_link = vue.resolveComponent("router-link");
  _push(`<li${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, $setup.attributes, _attrs))}>`);
  if ($props.href) {
    _push(`<a${serverRenderer.ssrRenderAttr("href", $props.href)}>`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</a>`);
  } else if ($setup.isRouterInstalled && $props.to) {
    _push(serverRenderer.ssrRenderComponent(_component_router_link, { to: $props.to }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }, _parent));
  } else {
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  }
  _push(`</li>`);
}
const _sfc_setup$1Z = _sfc_main$1Z.setup;
_sfc_main$1Z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/BreadcrumbItem.vue");
  return _sfc_setup$1Z ? _sfc_setup$1Z(props, ctx) : void 0;
};
var BreadcrumbItem = /* @__PURE__ */ _export_sfc(_sfc_main$1Z, [["ssrRender", _sfc_ssrRender$1y]]);
const _sfc_main$1Y = vue.defineComponent({
  name: "Breadcrumb",
  components: { BreadcrumbItem },
  props: {
    tag: makeString("ol"),
    items: make(Array, []),
    divider: makeString("null")
  },
  setup(props) {
    return {
      classes: vue.computed(() => [
        "breadcrumb"
      ])
    };
  }
});
function _sfc_ssrRender$1x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_BreadcrumbItem = vue.resolveComponent("BreadcrumbItem");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent(_ctx.tag), vue.mergeProps({ class: _ctx.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.items && Array.isArray(_ctx.items) && _ctx.items.length) {
          _push2(`<!--[-->`);
          serverRenderer.ssrRenderList(_ctx.items, (item, item_key) => {
            _push2(serverRenderer.ssrRenderComponent(_component_BreadcrumbItem, {
              href: item.href,
              to: item.to,
              active: !!item.active,
              key: item_key
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${serverRenderer.ssrInterpolate(item.text ? item.text : item)}`);
                } else {
                  return [
                    vue.createTextVNode(vue.toDisplayString(item.text ? item.text : item), 1)
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
          });
          _push2(`<!--]-->`);
        } else {
          _push2(`<!---->`);
        }
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          _ctx.items && Array.isArray(_ctx.items) && _ctx.items.length ? (vue.openBlock(true), vue.createBlock(vue.Fragment, { key: 0 }, vue.renderList(_ctx.items, (item, item_key) => {
            return vue.openBlock(), vue.createBlock(_component_BreadcrumbItem, {
              href: item.href,
              to: item.to,
              active: !!item.active,
              key: item_key
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(vue.toDisplayString(item.text ? item.text : item), 1)
              ]),
              _: 2
            }, 1032, ["href", "to", "active"]);
          }), 128)) : vue.createCommentVNode("", true),
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1Y = _sfc_main$1Y.setup;
_sfc_main$1Y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Breadcrumb.vue");
  return _sfc_setup$1Y ? _sfc_setup$1Y(props, ctx) : void 0;
};
var Breadcrumb = /* @__PURE__ */ _export_sfc(_sfc_main$1Y, [["ssrRender", _sfc_ssrRender$1x]]);
var ColorVariants = (initial = "secondary") => ({
  type: String,
  default: typeof initial === "function" ? initial : () => initial
});
const _sfc_main$1X = vue.defineComponent({
  components: { Badge },
  props: {
    tag: makeString("button"),
    href: makeString(null),
    variant: ColorVariants("secondary"),
    size: {
      type: String,
      default: () => null
    },
    type: makeString("button"),
    outline: {
      type: Boolean
    },
    block: makeBoolean(false),
    pill: makeBoolean(false),
    squared: makeBoolean(false),
    disabled: makeBoolean(false),
    pressed: makeBoolean(false),
    badge: make([String, Number], null),
    badgeVariant: makeString("primary"),
    active: makeBoolean(false),
    activeClass: makeString("active")
  },
  setup(props, context) {
    let attributes = {
      disabled: props.disabled
    };
    if (props.pressed) {
      attributes["aria-pressed"] = true;
      attributes["autocomplete"] = "off";
    }
    return {
      attributes,
      classes: vue.computed(() => [
        "btn",
        {
          ["btn-" + (props.outline ? "outline-" : "") + props.variant]: !!props.variant,
          ["btn-" + props.size]: !!props.size,
          "w-100": props.block,
          "rounded-pill": props.pill,
          "rounded-0": props.squared,
          [props.activeClass]: props.pressed || props.active
        }
      ])
    };
  }
});
function _sfc_ssrRender$1w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Badge = vue.resolveComponent("Badge");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent(_ctx.href ? "a" : _ctx.tag), vue.mergeProps({
    type: _ctx.tag === "button" ? _ctx.tag : null,
    class: _ctx.classes
  }, _ctx.attributes, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        if (_ctx.badge) {
          _push2(serverRenderer.ssrRenderComponent(_component_Badge, { variant: _ctx.badgeVariant }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(_ctx.badge)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(_ctx.badge), 1)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default"),
          _ctx.badge ? (vue.openBlock(), vue.createBlock(_component_Badge, {
            key: 0,
            variant: _ctx.badgeVariant
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode(vue.toDisplayString(_ctx.badge), 1)
            ]),
            _: 1
          }, 8, ["variant"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1X = _sfc_main$1X.setup;
_sfc_main$1X.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Button.vue");
  return _sfc_setup$1X ? _sfc_setup$1X(props, ctx) : void 0;
};
var Button = /* @__PURE__ */ _export_sfc(_sfc_main$1X, [["ssrRender", _sfc_ssrRender$1w]]);
const _sfc_main$1W = {
  props: {
    ariaLabel: makeString("Button Group"),
    size: makeString(null),
    vertical: makeBoolean(false),
    role: makeString("group")
  },
  setup(props, context) {
    return {
      classes: vue.computed(() => [
        {
          "btn-group": !props.vertical,
          "btn-group-vertical": props.vertical,
          ["btn-group-" + props.size]: props.size
        }
      ])
    };
  }
};
function _sfc_ssrRender$1v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: $setup.classes,
    role: $props.role,
    "aria-label": $props.ariaLabel
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$1W = _sfc_main$1W.setup;
_sfc_main$1W.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/ButtonGroup.vue");
  return _sfc_setup$1W ? _sfc_setup$1W(props, ctx) : void 0;
};
var ButtonGroup = /* @__PURE__ */ _export_sfc(_sfc_main$1W, [["ssrRender", _sfc_ssrRender$1v]]);
const _sfc_main$1V = {
  name: "ButtonToolbar",
  props: {
    tag: makeString("div"),
    role: makeString("toolbar"),
    justified: makeBoolean(false)
  },
  setup(props) {
    return {
      classes: vue.computed(() => [
        "btn-toolbar",
        {
          "justify-content-between": props.justified
        }
      ])
    };
  }
};
function _sfc_ssrRender$1u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({
    class: $setup.classes,
    role: $props.role
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1V = _sfc_main$1V.setup;
_sfc_main$1V.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/ButtonToolbar.vue");
  return _sfc_setup$1V ? _sfc_setup$1V(props, ctx) : void 0;
};
var ButtonToolbar = /* @__PURE__ */ _export_sfc(_sfc_main$1V, [["ssrRender", _sfc_ssrRender$1u]]);
const _sfc_main$1U = {
  name: "CardHeader",
  props: {
    content: makeString(),
    variant: makeString(),
    borderVariant: makeString(),
    tag: makeString("div"),
    textVariant: makeString()
  },
  setup(props, context) {
    let classes = vue.ref([]);
    classes.value = [
      "card-header",
      {
        ["bg-" + props.variant]: !!props.variant,
        ["text-" + props.textVariant]: !!props.textVariant,
        ["border-" + props.borderVariant]: !!props.borderVariant
      }
    ];
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1U = _sfc_main$1U.setup;
_sfc_main$1U.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardHeader.vue");
  return _sfc_setup$1U ? _sfc_setup$1U(props, ctx) : void 0;
};
var CardHeader = /* @__PURE__ */ _export_sfc(_sfc_main$1U, [["ssrRender", _sfc_ssrRender$1t]]);
const _sfc_main$1T = {
  name: "CardTitle",
  props: {
    title: makeString(),
    tag: makeString("h4")
  },
  setup(props) {
    let classes = vue.ref([]);
    classes.value = [
      "card-title"
    ];
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1T = _sfc_main$1T.setup;
_sfc_main$1T.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardTitle.vue");
  return _sfc_setup$1T ? _sfc_setup$1T(props, ctx) : void 0;
};
var CardTitle = /* @__PURE__ */ _export_sfc(_sfc_main$1T, [["ssrRender", _sfc_ssrRender$1s]]);
const _sfc_main$1S = {
  name: "CardSubTitle",
  props: {
    title: makeString(),
    tag: makeString("h6"),
    textVariant: makeString("muted")
  },
  setup(props) {
    let classes = vue.ref([]);
    classes.value = [
      "card-subtitle",
      {
        ["text-" + props.textVariant]: !!props.textVariant
      }
    ];
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1S = _sfc_main$1S.setup;
_sfc_main$1S.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardSubTitle.vue");
  return _sfc_setup$1S ? _sfc_setup$1S(props, ctx) : void 0;
};
var CardSubTitle = /* @__PURE__ */ _export_sfc(_sfc_main$1S, [["ssrRender", _sfc_ssrRender$1r]]);
const _sfc_main$1R = {
  name: "CardBody",
  components: { CardSubTitle, CardTitle },
  props: {
    content: makeString(),
    variant: makeString(),
    borderVariant: makeString(),
    tag: makeString("div"),
    textVariant: makeString(),
    overlay: makeBoolean(false),
    subTitle: makeString(),
    subTitleTag: makeString("h6"),
    subTitleTextVariant: makeString("muted"),
    title: makeString(),
    titleTag: makeString("h4")
  },
  setup(props, context) {
    let classes = vue.ref([]);
    classes.value = [
      {
        "card-body": !props.overlay,
        "card-img-overlay": props.overlay,
        ["bg-" + props.variant]: !!props.variant,
        ["text-" + props.textVariant]: !!props.textVariant,
        ["border-" + props.borderVariant]: !!props.borderVariant
      }
    ];
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_CardTitle = vue.resolveComponent("CardTitle");
  const _component_CardSubTitle = vue.resolveComponent("CardSubTitle");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.title || _ctx.$slots.title) {
          _push2(serverRenderer.ssrRenderComponent(_component_CardTitle, { tag: $props.titleTag }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, () => {
                  _push3(`${serverRenderer.ssrInterpolate($props.title)}`);
                }, _push3, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "title", {}, () => [
                    vue.createTextVNode(vue.toDisplayString($props.title), 1)
                  ])
                ];
              }
            }),
            _: 3
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        if ($props.subTitle || _ctx.$slots.subTitle) {
          _push2(serverRenderer.ssrRenderComponent(_component_CardSubTitle, {
            tag: $props.subTitleTag,
            "text-variant": $props.subTitleTextVariant
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "subTitle", {}, () => {
                  _push3(`${serverRenderer.ssrInterpolate($props.subTitle)}`);
                }, _push3, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "subTitle", {}, () => [
                    vue.createTextVNode(vue.toDisplayString($props.subTitle), 1)
                  ])
                ];
              }
            }),
            _: 3
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          $props.title || _ctx.$slots.title ? (vue.openBlock(), vue.createBlock(_component_CardTitle, {
            key: 0,
            tag: $props.titleTag
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "title", {}, () => [
                vue.createTextVNode(vue.toDisplayString($props.title), 1)
              ])
            ]),
            _: 3
          }, 8, ["tag"])) : vue.createCommentVNode("", true),
          $props.subTitle || _ctx.$slots.subTitle ? (vue.openBlock(), vue.createBlock(_component_CardSubTitle, {
            key: 1,
            tag: $props.subTitleTag,
            "text-variant": $props.subTitleTextVariant
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "subTitle", {}, () => [
                vue.createTextVNode(vue.toDisplayString($props.subTitle), 1)
              ])
            ]),
            _: 3
          }, 8, ["tag", "text-variant"])) : vue.createCommentVNode("", true),
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1R = _sfc_main$1R.setup;
_sfc_main$1R.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardBody.vue");
  return _sfc_setup$1R ? _sfc_setup$1R(props, ctx) : void 0;
};
var CardBody = /* @__PURE__ */ _export_sfc(_sfc_main$1R, [["ssrRender", _sfc_ssrRender$1q]]);
const _sfc_main$1Q = {
  name: "CardFooter",
  props: {
    content: makeString(),
    variant: makeString(),
    borderVariant: makeString(),
    tag: makeString("div"),
    textVariant: makeString()
  },
  setup(props, context) {
    let classes = vue.ref([]);
    classes.value = [
      "card-footer",
      {
        ["bg-" + props.variant]: !!props.variant,
        ["text-" + props.textVariant]: !!props.textVariant,
        ["border-" + props.borderVariant]: !!props.borderVariant
      }
    ];
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1Q = _sfc_main$1Q.setup;
_sfc_main$1Q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardFooter.vue");
  return _sfc_setup$1Q ? _sfc_setup$1Q(props, ctx) : void 0;
};
var CardFooter = /* @__PURE__ */ _export_sfc(_sfc_main$1Q, [["ssrRender", _sfc_ssrRender$1p]]);
const _sfc_main$1P = {
  name: "CardImg",
  props: {
    src: makeString(),
    alt: makeString(),
    overlay: makeBoolean(false),
    bottom: makeBoolean(false),
    end: makeBoolean(false),
    left: makeBoolean(false),
    right: makeBoolean(false),
    start: makeBoolean(false),
    top: makeBoolean(false),
    height: make([Number, String], null),
    width: make([Number, String], null)
  },
  setup(props, context) {
    return {
      classes: vue.computed(() => [
        {
          "card-img": props.overlay,
          "card-img-top": props.top,
          "card-img-bottom": props.bottom,
          "card-img-left": props.left || props.start,
          "card-img-right": props.right || props.end
        }
      ])
    };
  }
};
function _sfc_ssrRender$1o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<img${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    src: $props.src,
    class: $setup.classes,
    alt: $props.alt
  }, _attrs))}>`);
}
const _sfc_setup$1P = _sfc_main$1P.setup;
_sfc_main$1P.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardImg.vue");
  return _sfc_setup$1P ? _sfc_setup$1P(props, ctx) : void 0;
};
var CardImg = /* @__PURE__ */ _export_sfc(_sfc_main$1P, [["ssrRender", _sfc_ssrRender$1o]]);
var Card_vue_vue_type_style_index_0_lang = "";
const _sfc_main$1O = {
  name: "Card",
  components: { CardImg, CardFooter, CardBody, CardHeader },
  props: {
    align: makeString(null),
    bgVariant: makeString(null),
    bodyBgVariant: makeString(null),
    bodyBorderVariant: makeString(null),
    bodyClass: make([String, Array], null),
    bodyTag: makeString("div"),
    bodyTextVariant: makeString(null),
    footer: makeString(null),
    footerBgVariant: makeString(null),
    footerTag: makeString("div"),
    footerTextVariant: makeString(null),
    footerClass: make([String, Array], null),
    footerBorderVariant: makeString(null),
    header: makeString(null),
    headerBgVariant: makeString(null),
    headerBorderVariant: makeString(null),
    headerClass: makeString(null),
    headerTag: makeString("div"),
    headerTextVariant: makeString(null),
    imgAlt: makeString(null),
    imgBottom: makeBoolean(false),
    imgEnd: makeBoolean(false),
    imgLeft: makeBoolean(false),
    imgRight: makeBoolean(false),
    imgStart: makeBoolean(false),
    imgTop: makeBoolean(false),
    imgSrc: makeString(null),
    imgWidth: makeString(null),
    imgHeight: makeString(null),
    noBody: makeBoolean(false),
    overlay: makeBoolean(false),
    subTitle: makeString(null),
    subTitleTag: makeString("h6"),
    subTitleTextVariant: makeString("muted"),
    tag: makeString("div"),
    textVariant: makeString(),
    borderVariant: makeString(),
    title: makeString(),
    titleTag: makeString("h4")
  },
  setup(props) {
    const classes = vue.computed(() => [
      "card",
      {
        "flex-row": props.imgLeft || props.imgStart,
        "flex-row-reverse": props.imgRight || props.imgEnd,
        ["bg-" + props.bgVariant]: props.bgVariant,
        ["text-" + props.textVariant]: props.textVariant,
        ["border-" + props.borderVariant]: props.borderVariant
      }
    ]);
    const cardImageBindings = vue.computed(() => ({
      alt: props.imgAlt,
      bottom: props.imgBottom,
      end: props.imgEnd,
      left: props.imgLeft,
      right: props.imgRight,
      start: props.imgStart,
      top: props.imgTop,
      src: props.imgSrc,
      width: props.imgWidth,
      height: props.imgHeight,
      class: {
        "card-img": props.overlay
      }
    }));
    const cardBodyBindings = vue.computed(() => ({
      tag: props.bodyTag,
      variant: props.bodyBgVariant,
      borderVariant: props.bodyBorderVariant,
      textVariant: props.bodyTextVariant,
      overlay: props.overlay,
      title: props.title,
      titleTag: props.titleTag,
      class: props.bodyClass,
      subTitle: props.subTitle,
      subTitleTag: props.subTitleTag,
      subTitleTextVariant: props.subTitleTextVariant
    }));
    return {
      classes,
      cardImageBindings,
      cardBodyBindings
    };
  }
};
function _sfc_ssrRender$1n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_CardHeader = vue.resolveComponent("CardHeader");
  const _component_CardImg = vue.resolveComponent("CardImg");
  const _component_CardBody = vue.resolveComponent("CardBody");
  const _component_CardFooter = vue.resolveComponent("CardFooter");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.$slots.header || $props.header) {
          _push2(serverRenderer.ssrRenderComponent(_component_CardHeader, {
            tag: $props.headerTag,
            class: $props.headerClass,
            "border-variant": $props.headerBorderVariant,
            "text-variant": $props.headerTextVariant,
            variant: $props.headerBgVariant
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "header", {}, () => {
                  _push3(`${serverRenderer.ssrInterpolate($props.header)}`);
                }, _push3, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "header", {}, () => [
                    vue.createTextVNode(vue.toDisplayString($props.header), 1)
                  ])
                ];
              }
            }),
            _: 3
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        if ($props.imgSrc && !$props.imgBottom) {
          _push2(serverRenderer.ssrRenderComponent(_component_CardImg, $setup.cardImageBindings, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        if (!$props.noBody) {
          _push2(serverRenderer.ssrRenderComponent(_component_CardBody, $setup.cardBodyBindings, vue.createSlots({
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "default")
                ];
              }
            }),
            _: 2
          }, [
            _ctx.$slots.title ? {
              name: "title",
              fn: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, null, _push3, _parent3, _scopeId2);
                } else {
                  return [
                    vue.renderSlot(_ctx.$slots, "title")
                  ];
                }
              })
            } : void 0
          ]), _parent2, _scopeId));
        } else {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        }
        if ($props.imgSrc && $props.imgBottom) {
          _push2(serverRenderer.ssrRenderComponent(_component_CardImg, $setup.cardImageBindings, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        if (_ctx.$slots.footer || $props.footer) {
          _push2(serverRenderer.ssrRenderComponent(_component_CardFooter, {
            tag: $props.footerTag,
            class: $props.footerClass,
            "border-variant": $props.footerBorderVariant,
            "text-variant": $props.footerTextVariant,
            variant: $props.footerBgVariant
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "footer", {}, () => {
                  _push3(`${serverRenderer.ssrInterpolate($props.footer)}`);
                }, _push3, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "footer", {}, () => [
                    vue.createTextVNode(vue.toDisplayString($props.footer), 1)
                  ])
                ];
              }
            }),
            _: 3
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          _ctx.$slots.header || $props.header ? (vue.openBlock(), vue.createBlock(_component_CardHeader, {
            key: 0,
            tag: $props.headerTag,
            class: $props.headerClass,
            "border-variant": $props.headerBorderVariant,
            "text-variant": $props.headerTextVariant,
            variant: $props.headerBgVariant
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "header", {}, () => [
                vue.createTextVNode(vue.toDisplayString($props.header), 1)
              ])
            ]),
            _: 3
          }, 8, ["tag", "class", "border-variant", "text-variant", "variant"])) : vue.createCommentVNode("", true),
          $props.imgSrc && !$props.imgBottom ? (vue.openBlock(), vue.createBlock(_component_CardImg, vue.mergeProps({ key: 1 }, $setup.cardImageBindings), null, 16)) : vue.createCommentVNode("", true),
          !$props.noBody ? (vue.openBlock(), vue.createBlock(_component_CardBody, vue.mergeProps({ key: 2 }, $setup.cardBodyBindings), vue.createSlots({
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "default")
            ]),
            _: 2
          }, [
            _ctx.$slots.title ? {
              name: "title",
              fn: vue.withCtx(() => [
                vue.renderSlot(_ctx.$slots, "title")
              ])
            } : void 0
          ]), 1040)) : vue.renderSlot(_ctx.$slots, "default", { key: 3 }),
          $props.imgSrc && $props.imgBottom ? (vue.openBlock(), vue.createBlock(_component_CardImg, vue.mergeProps({ key: 4 }, $setup.cardImageBindings), null, 16)) : vue.createCommentVNode("", true),
          _ctx.$slots.footer || $props.footer ? (vue.openBlock(), vue.createBlock(_component_CardFooter, {
            key: 5,
            tag: $props.footerTag,
            class: $props.footerClass,
            "border-variant": $props.footerBorderVariant,
            "text-variant": $props.footerTextVariant,
            variant: $props.footerBgVariant
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "footer", {}, () => [
                vue.createTextVNode(vue.toDisplayString($props.footer), 1)
              ])
            ]),
            _: 3
          }, 8, ["tag", "class", "border-variant", "text-variant", "variant"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1O = _sfc_main$1O.setup;
_sfc_main$1O.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Card.vue");
  return _sfc_setup$1O ? _sfc_setup$1O(props, ctx) : void 0;
};
var Card = /* @__PURE__ */ _export_sfc(_sfc_main$1O, [["ssrRender", _sfc_ssrRender$1n]]);
const _sfc_main$1N = {
  name: "CardGroup",
  props: {
    tag: makeString("div"),
    deck: makeBoolean(false),
    columns: makeBoolean(false)
  },
  setup(props) {
    return {
      classes: vue.computed(() => [
        {
          "card-group": !props.deck && !props.columns,
          "card-deck": props.deck,
          "card-columns": props.columns
        }
      ])
    };
  }
};
function _sfc_ssrRender$1m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1N = _sfc_main$1N.setup;
_sfc_main$1N.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardGroup.vue");
  return _sfc_setup$1N ? _sfc_setup$1N(props, ctx) : void 0;
};
var CardGroup = /* @__PURE__ */ _export_sfc(_sfc_main$1N, [["ssrRender", _sfc_ssrRender$1m]]);
const _sfc_main$1M = {
  name: "CardLink",
  props: {
    href: makeString("#")
  }
};
function _sfc_ssrRender$1l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<a${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    href: $props.href,
    class: "card-link"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</a>`);
}
const _sfc_setup$1M = _sfc_main$1M.setup;
_sfc_main$1M.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardLink.vue");
  return _sfc_setup$1M ? _sfc_setup$1M(props, ctx) : void 0;
};
var CardLink = /* @__PURE__ */ _export_sfc(_sfc_main$1M, [["ssrRender", _sfc_ssrRender$1l]]);
const _sfc_main$1L = {
  name: "CardText",
  props: {
    tag: makeString("p")
  },
  setup(props, context) {
    return {
      classes: vue.computed(() => [
        "card-text"
      ])
    };
  }
};
function _sfc_ssrRender$1k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1L = _sfc_main$1L.setup;
_sfc_main$1L.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CardText.vue");
  return _sfc_setup$1L ? _sfc_setup$1L(props, ctx) : void 0;
};
var CardText = /* @__PURE__ */ _export_sfc(_sfc_main$1L, [["ssrRender", _sfc_ssrRender$1k]]);
const _sfc_main$1K = {
  name: "Checkbox",
  emits: ["update:modelValue", "checked", "unchecked"],
  props: {
    name: makeString(null),
    id: makeString(null),
    required: makeBoolean(false),
    readonly: makeBoolean(false),
    disabled: makeBoolean(false),
    inline: makeBoolean(false),
    modelValue: {
      default: null
    },
    value: {
      default: true
    },
    uncheckedValue: {
      default: false
    },
    switch: makeBoolean(false),
    button: makeBoolean(false),
    variant: makeString("primary"),
    outline: makeBoolean(true),
    checked: makeBoolean(false)
  },
  setup(props, context) {
    const identifier = vue.ref(null);
    if (props.id) {
      identifier.value = props.id;
    } else {
      identifier.value = "checkbox_id" + Math.floor(Math.random() * Math.floor(Math.random() * Date.now()));
    }
    const model = vue.ref(props.modelValue);
    const classes = vue.computed(() => [
      "form-check",
      {
        "form-switch": props.switch,
        "form-check-inline": props.inline
      }
    ]);
    const inputAttrs = vue.ref({
      role: props.switch ? "switch" : null
    });
    const valueChanged = (e) => {
      if (e.target.checked) {
        context.emit("checked", { originalEvent: e, data: props.value, checked: true });
      } else {
        context.emit("unchecked", { originalEvent: e, data: props.uncheckedValue, checked: false });
      }
    };
    vue.watch(() => props.modelValue, (value) => model.value = value);
    vue.watch(model, (value) => context.emit("update:modelValue", value));
    const btnClass = vue.computed(() => [
      "btn",
      {
        ["btn-" + (props.outline ? "outline-" : "") + props.variant]: props.variant
      }
    ]);
    return {
      identifier,
      model,
      classes,
      btnClass,
      inputAttrs,
      valueChanged
    };
  },
  watch: {
    checked(value) {
      if (value) {
        this.$emit("update:modelValue", this.value);
        if (!this.$el.querySelector("input").checked) {
          this.$el.querySelector("input").checked = true;
        }
      } else {
        this.$emit("update:modelValue", this.uncheckedValue);
        if (this.$el.querySelector("input").checked) {
          this.$el.querySelector("input").checked = false;
        }
      }
    }
  }
};
function _sfc_ssrRender$1j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  let _temp0, _temp1;
  if ($props.button) {
    _push(`<!--[--><input${serverRenderer.ssrRenderAttrs((_temp0 = vue.mergeProps({
      class: "btn-check",
      required: $props.required,
      readonly: $props.readonly,
      disabled: $props.disabled,
      name: $props.name,
      type: "checkbox",
      checked: Array.isArray($setup.model) ? serverRenderer.ssrLooseContain($setup.model, $props.value) : $setup.model,
      value: $props.value
    }, $setup.inputAttrs, { id: $setup.identifier }), vue.mergeProps(_temp0, serverRenderer.ssrGetDynamicModelProps(_temp0, $setup.model))))}>`);
    if (_ctx.$slots.default) {
      _push(`<label class="${serverRenderer.ssrRenderClass($setup.btnClass)}"${serverRenderer.ssrRenderAttr("for", $setup.identifier)}>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</label>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<!--]-->`);
  } else {
    _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, _attrs))}><input${serverRenderer.ssrRenderAttrs((_temp1 = vue.mergeProps({
      class: "form-check-input",
      required: $props.required,
      readonly: $props.readonly,
      disabled: $props.disabled,
      name: $props.name,
      type: "checkbox",
      checked: Array.isArray($setup.model) ? serverRenderer.ssrLooseContain($setup.model, $props.value) : $setup.model,
      value: $props.value
    }, $setup.inputAttrs, { id: $setup.identifier }), vue.mergeProps(_temp1, serverRenderer.ssrGetDynamicModelProps(_temp1, $setup.model))))}>`);
    if (_ctx.$slots.default) {
      _push(`<label class="form-check-label"${serverRenderer.ssrRenderAttr("for", $setup.identifier)}>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</label>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  }
}
const _sfc_setup$1K = _sfc_main$1K.setup;
_sfc_main$1K.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Checkbox.vue");
  return _sfc_setup$1K ? _sfc_setup$1K(props, ctx) : void 0;
};
var Checkbox = /* @__PURE__ */ _export_sfc(_sfc_main$1K, [["ssrRender", _sfc_ssrRender$1j]]);
const _sfc_main$1J = {
  name: "CheckboxGroup",
  components: { Checkbox },
  emits: ["update:modelValue"],
  props: {
    modelValue: {
      default: null
    },
    options: make(Array, []),
    textField: makeString(),
    valueField: makeString(),
    inline: makeBoolean(false),
    switch: makeBoolean(false)
  },
  setup(props, context) {
    const model = vue.ref(props.modelValue);
    return {
      model
    };
  },
  watch: {
    modelValue(value) {
      this.model = value;
    },
    model(value) {
      this.$emit("update:modelValue", value);
    }
  }
};
function _sfc_ssrRender$1i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Checkbox = vue.resolveComponent("Checkbox");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ role: "group" }, _attrs))}><!--[-->`);
  serverRenderer.ssrRenderList($props.options, (option, option_key) => {
    _push(serverRenderer.ssrRenderComponent(_component_Checkbox, {
      key: option_key,
      inline: $props.inline,
      switch: _ctx.$props.switch,
      modelValue: $setup.model,
      "onUpdate:modelValue": ($event) => $setup.model = $event,
      value: $props.valueField ? option[$props.valueField] : option
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${serverRenderer.ssrInterpolate($props.textField ? option[$props.textField] : option)}`);
        } else {
          return [
            vue.createTextVNode(vue.toDisplayString($props.textField ? option[$props.textField] : option), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
  });
  _push(`<!--]--></div>`);
}
const _sfc_setup$1J = _sfc_main$1J.setup;
_sfc_main$1J.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CheckboxGroup.vue");
  return _sfc_setup$1J ? _sfc_setup$1J(props, ctx) : void 0;
};
var CheckboxGroup = /* @__PURE__ */ _export_sfc(_sfc_main$1J, [["ssrRender", _sfc_ssrRender$1i]]);
const _sfc_main$1I = {
  name: "Col",
  props: {
    tag: makeString("div"),
    col: make([Number, String], null),
    sm: make([Number, Boolean, String], null),
    md: make([Number, Boolean, String], null),
    lg: make([Number, Boolean, String], null),
    xl: make([Number, Boolean, String], null),
    alignSelf: makeString(),
    order: make([Number, String], null),
    offsetSm: make([Number, String], null),
    offsetMd: make([Number, String], null),
    offsetLg: make([Number, String], null),
    offsetXl: make([Number, String], null),
    gx: make([Number, String], null),
    gy: make([Number, String], null)
  },
  setup(props) {
    return {
      classes: vue.computed(() => ({
        "col": !(props.sm || props.md || props.lg || props.xl || props.col),
        ["col-" + props.col]: props.col,
        ["col-sm-" + props.sm]: props.sm && !isBoolean(props.sm),
        ["col-md-" + props.md]: props.md && !isBoolean(props.md),
        ["col-lg-" + props.lg]: props.lg && !isBoolean(props.lg),
        ["col-xl-" + props.xl]: props.xl && !isBoolean(props.xl),
        "col-sm": props.sm && isBoolean(props.sm),
        "col-md": props.md && isBoolean(props.md),
        "col-lg": props.lg && isBoolean(props.lg),
        "col-xl": props.xl && isBoolean(props.xl),
        ["align-self-" + props.alignSelf]: props.alignSelf,
        ["order-" + props.order]: props.order,
        ["offset-sm-" + props.offsetSm]: props.offsetSm,
        ["offset-md-" + props.offsetMd]: props.offsetMd,
        ["offset-lg-" + props.offsetLg]: props.offsetLg,
        ["offset-xl-" + props.offsetXl]: props.offsetXl,
        ["gx-" + props.gx]: props.gx,
        ["gy-" + props.gy]: props.gy
      }))
    };
  }
};
function _sfc_ssrRender$1h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1I = _sfc_main$1I.setup;
_sfc_main$1I.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Col.vue");
  return _sfc_setup$1I ? _sfc_setup$1I(props, ctx) : void 0;
};
var Col = /* @__PURE__ */ _export_sfc(_sfc_main$1I, [["ssrRender", _sfc_ssrRender$1h]]);
const _sfc_main$1H = {
  name: "Container",
  props: {
    tag: makeString("div"),
    fluid: makeBoolean(false)
  },
  setup(props) {
    const classes = vue.reactive({
      "container": !props.fluid,
      "container-fluid": props.fluid
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1H = _sfc_main$1H.setup;
_sfc_main$1H.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Container.vue");
  return _sfc_setup$1H ? _sfc_setup$1H(props, ctx) : void 0;
};
var Container = /* @__PURE__ */ _export_sfc(_sfc_main$1H, [["ssrRender", _sfc_ssrRender$1g]]);
var tableProps = {
  responsive: make([String, Boolean], false),
  variant: makeString(null),
  striped: makeBoolean(false),
  hover: makeBoolean(false),
  active: makeBoolean(false),
  bordered: makeBoolean(false),
  borderVariant: makeString(null),
  borderless: makeBoolean(false),
  small: makeBoolean(false),
  align: makeString(null),
  caption: makeString(null),
  captionTop: makeBoolean(false)
};
const _sfc_main$1G = vue.defineComponent({
  name: "Table",
  props: tableProps,
  setup(props) {
    props = vue.reactive(props);
    const classes = vue.computed(() => {
      return [
        "table",
        {
          ["table-" + props.variant]: props.variant,
          "table-striped": props.striped,
          "table-hover": props.hover,
          "table-active": props.active,
          "table-bordered": props.bordered,
          ["border-" + props.borderVariant]: !!props.borderVariant,
          "table-borderless": props.borderless,
          "table-sm": props.small,
          ["align-" + props.align]: !!props.align,
          "caption-top": props.captionTop
        }
      ];
    });
    const wrapperClass = vue.computed(() => {
      return {
        "table-responsive": typeof props.responsive === "boolean" && props.responsive,
        ["table-responsive-" + props.responsive]: typeof props.responsive === "string" && props.responsive
      };
    });
    return {
      classes,
      wrapperClass
    };
  }
});
function _sfc_ssrRender$1f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  if (_ctx.responsive) {
    _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: _ctx.wrapperClass }, _attrs))}><table class="${serverRenderer.ssrRenderClass(_ctx.classes)}">`);
    if (_ctx.$slots.caption || _ctx.caption) {
      _push(`<caption>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "caption", {}, () => {
        _push(`${serverRenderer.ssrInterpolate(_ctx.caption)}`);
      }, _push, _parent);
      _push(`</caption>`);
    } else {
      _push(`<!---->`);
    }
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</table></div>`);
  } else {
    _push(`<table${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: _ctx.classes }, _attrs))}>`);
    if (_ctx.$slots.caption || _ctx.caption) {
      _push(`<caption>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "caption", {}, () => {
        _push(`${serverRenderer.ssrInterpolate(_ctx.caption)}`);
      }, _push, _parent);
      _push(`</caption>`);
    } else {
      _push(`<!---->`);
    }
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</table>`);
  }
}
const _sfc_setup$1G = _sfc_main$1G.setup;
_sfc_main$1G.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Table.vue");
  return _sfc_setup$1G ? _sfc_setup$1G(props, ctx) : void 0;
};
var Table = /* @__PURE__ */ _export_sfc(_sfc_main$1G, [["ssrRender", _sfc_ssrRender$1f]]);
const _sfc_main$1F = {
  name: "THead",
  props: {
    variant: makeString(null),
    active: makeBoolean(false),
    align: makeString(null)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        {
          ["table-" + props.variant]: props.variant,
          "table-active": props.active,
          ["align-" + props.align]: !!props.align
        }
      ];
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<thead${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</thead>`);
}
const _sfc_setup$1F = _sfc_main$1F.setup;
_sfc_main$1F.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/THead.vue");
  return _sfc_setup$1F ? _sfc_setup$1F(props, ctx) : void 0;
};
var THead = /* @__PURE__ */ _export_sfc(_sfc_main$1F, [["ssrRender", _sfc_ssrRender$1e]]);
const _sfc_main$1E = {
  name: "Th",
  props: {
    variant: makeString(null),
    active: makeBoolean(false),
    align: makeString(null)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        {
          ["table-" + props.variant]: props.variant,
          "table-active": props.active,
          ["align-" + props.align]: !!props.align
        }
      ];
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<th${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: $setup.classes,
    scope: "col"
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</th>`);
}
const _sfc_setup$1E = _sfc_main$1E.setup;
_sfc_main$1E.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Th.vue");
  return _sfc_setup$1E ? _sfc_setup$1E(props, ctx) : void 0;
};
var Th = /* @__PURE__ */ _export_sfc(_sfc_main$1E, [["ssrRender", _sfc_ssrRender$1d]]);
const _sfc_main$1D = {
  name: "TBody",
  props: {
    variant: makeString(null),
    active: makeBoolean(false),
    align: makeString(null)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        {
          ["table-" + props.variant]: props.variant,
          "table-active": props.active,
          ["align-" + props.align]: !!props.align
        }
      ];
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<tbody${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</tbody>`);
}
const _sfc_setup$1D = _sfc_main$1D.setup;
_sfc_main$1D.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/TBody.vue");
  return _sfc_setup$1D ? _sfc_setup$1D(props, ctx) : void 0;
};
var TBody = /* @__PURE__ */ _export_sfc(_sfc_main$1D, [["ssrRender", _sfc_ssrRender$1c]]);
const _sfc_main$1C = {
  name: "Tr",
  props: {
    variant: makeString(null),
    active: makeBoolean(false),
    align: makeString(null)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        {
          ["table-" + props.variant]: props.variant,
          "table-active": props.active,
          ["align-" + props.align]: !!props.align
        }
      ];
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<tr${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</tr>`);
}
const _sfc_setup$1C = _sfc_main$1C.setup;
_sfc_main$1C.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Tr.vue");
  return _sfc_setup$1C ? _sfc_setup$1C(props, ctx) : void 0;
};
var Tr = /* @__PURE__ */ _export_sfc(_sfc_main$1C, [["ssrRender", _sfc_ssrRender$1b]]);
const _sfc_main$1B = {
  name: "Td",
  props: {
    variant: makeString(null),
    active: makeBoolean(false),
    align: makeString(null)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        {
          ["table-" + props.variant]: props.variant,
          "table-active": props.active,
          ["align-" + props.align]: !!props.align
        }
      ];
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$1a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<td${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</td>`);
}
const _sfc_setup$1B = _sfc_main$1B.setup;
_sfc_main$1B.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Td.vue");
  return _sfc_setup$1B ? _sfc_setup$1B(props, ctx) : void 0;
};
var Td = /* @__PURE__ */ _export_sfc(_sfc_main$1B, [["ssrRender", _sfc_ssrRender$1a]]);
const _sfc_main$1A = {
  name: "Icon",
  props: {
    icon: makeString(null),
    variant: makeString(null)
  },
  setup(props, { slots }) {
    return {
      theIcon: vue.computed(() => props.icon || slots.default.toString().trim())
    };
  }
};
function _sfc_ssrRender$19(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<i${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: ["bi", { ["bi-" + $setup.theIcon]: $setup.theIcon, ["text-" + $props.variant]: $props.variant }]
  }, _attrs))}></i>`);
}
const _sfc_setup$1A = _sfc_main$1A.setup;
_sfc_main$1A.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Icon.vue");
  return _sfc_setup$1A ? _sfc_setup$1A(props, ctx) : void 0;
};
var Icon = /* @__PURE__ */ _export_sfc(_sfc_main$1A, [["ssrRender", _sfc_ssrRender$19]]);
const _sfc_main$1z = vue.defineComponent({
  name: "DataTable",
  emits: ["update:selectedRows"],
  components: { Icon, Tr, TBody, Th, Td, THead, Table },
  props: __spreadProps(__spreadValues({}, tableProps), {
    selectedRows: make(Array, []),
    filter: makeString(null),
    fields: make(Array, []),
    items: make([Array, Promise, Function], [])
  }),
  setup(props, context) {
    props = vue.reactive(props);
    const sorting = vue.ref({
      sortBy: null,
      sort: null
    });
    const applySorting = (th) => {
      if (typeof th === "object" && th.sortable === true) {
        if (sorting.value.sortBy === th.key) {
          sorting.value.sort = sorting.value.sort === "asc" ? "desc" : "asc";
        } else {
          sorting.value.sortBy = th.key;
          sorting.value.sort = sorting.value.sort === "asc" ? "desc" : "asc";
        }
      }
    };
    const classes = vue.computed(() => []);
    const _a = props, { items, fields } = _a, otherProps = __objRest(_a, ["items", "fields"]);
    const getLabel = (th) => {
      if (isObject(th)) {
        if (th.hasOwnProperty("label")) {
          return th.label;
        } else if (th.hasOwnProperty("key")) {
          return title(th.key);
        }
      } else if (typeof th === "string") {
        return title(th);
      }
      return th;
    };
    const filterableColumns = vue.computed(() => {
      let cols = [];
      props.fields.forEach((i) => {
        if (typeof i === "string") {
          cols.push(i);
        } else if (isObject(i) && i.sortable !== false) {
          cols.push(getKey(i));
        }
      });
      return cols;
    });
    const getValue = (row, th, th_index) => {
      let key = getKey(th);
      if (isObject(th)) {
        if (th.hasOwnProperty("formatter")) {
          return th.formatter(row, key);
        }
        return row[key];
      } else if (typeof th === "string") {
        return row[key];
      }
      return row[th_index];
    };
    const getKey = (th) => {
      if (isObject(th)) {
        return th.key;
      } else if (typeof th === "string") {
        return string_js.lowerCase(th);
      }
      return th;
    };
    const itemsSorted = vue.computed(() => {
      if (sorting.value.sortBy) {
        return lodash.orderBy(props.items, sorting.value.sortBy, sorting.value.sort);
      }
      if (Array.isArray(props.items)) {
        if (filterableColumns.value.length && props.filter) {
          return props.items.filter((row) => {
            if (Array.isArray(row)) {
              console.log(row);
            } else if (isObject(row)) {
              return filterableColumns.value.reduce((cond, col) => cond || row[col].toString().search(props.filter) > -1, false);
            }
            return true;
          });
        }
        return props.items;
      }
      return props.items;
    });
    const clearSorting = () => {
      sorting.value.sortBy = null;
      sorting.value.sort = null;
    };
    const selectRow = (row) => {
    };
    const unselectAllRows = () => context.emit("update:selectedRows", []);
    const selectAllRows = () => context.emit("update:selectedRows", itemsSorted.value);
    const selectedAllRows = vue.computed(() => itemsSorted.value.length === props.selectedRows.length);
    return {
      classes,
      otherProps,
      getLabel,
      getValue,
      getKey,
      sorting,
      applySorting,
      itemsSorted,
      clearSorting,
      filterableColumns,
      selectRow,
      selectAllRows,
      unselectAllRows,
      selectedAllRows
    };
  }
});
function _sfc_ssrRender$18(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Table = vue.resolveComponent("Table");
  const _component_THead = vue.resolveComponent("THead");
  const _component_Th = vue.resolveComponent("Th");
  const _component_Icon = vue.resolveComponent("Icon");
  const _component_TBody = vue.resolveComponent("TBody");
  const _component_Tr = vue.resolveComponent("Tr");
  const _component_Td = vue.resolveComponent("Td");
  _push(serverRenderer.ssrRenderComponent(_component_Table, vue.mergeProps(_ctx.otherProps, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_THead, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<!--[-->`);
              serverRenderer.ssrRenderList(_ctx.fields, (th, th_index) => {
                _push3(serverRenderer.ssrRenderComponent(_component_Th, {
                  style: { "cursor": th.sortable === true ? "pointer" : null },
                  key: th_index
                }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      serverRenderer.ssrRenderSlot(_ctx.$slots, "head(" + th.key + ")", {
                        column: th.key,
                        field: th,
                        index: th_index,
                        label: _ctx.getLabel(th),
                        sortBy: _ctx.sorting.sortBy,
                        sort: _ctx.sorting.sort,
                        unselectAllRows: _ctx.unselectAllRows,
                        selectAllRows: _ctx.selectAllRows,
                        selectedAllRows: _ctx.selectedAllRows
                      }, () => {
                        _push4(`${serverRenderer.ssrInterpolate(_ctx.getLabel(th))}`);
                      }, _push4, _parent4, _scopeId3);
                      if (typeof th === "object" && th.sortable === true) {
                        _push4(serverRenderer.ssrRenderComponent(_component_Icon, {
                          icon: _ctx.sorting.sortBy === th.key && _ctx.sorting.sort === "asc" ? "sort-down" : "sort-up"
                        }, null, _parent4, _scopeId3));
                      } else {
                        _push4(`<!---->`);
                      }
                    } else {
                      return [
                        vue.renderSlot(_ctx.$slots, "head(" + th.key + ")", {
                          column: th.key,
                          field: th,
                          index: th_index,
                          label: _ctx.getLabel(th),
                          sortBy: _ctx.sorting.sortBy,
                          sort: _ctx.sorting.sort,
                          unselectAllRows: _ctx.unselectAllRows,
                          selectAllRows: _ctx.selectAllRows,
                          selectedAllRows: _ctx.selectedAllRows
                        }, () => [
                          vue.createTextVNode(vue.toDisplayString(_ctx.getLabel(th)), 1)
                        ]),
                        typeof th === "object" && th.sortable === true ? (vue.openBlock(), vue.createBlock(_component_Icon, {
                          key: 0,
                          icon: _ctx.sorting.sortBy === th.key && _ctx.sorting.sort === "asc" ? "sort-down" : "sort-up"
                        }, null, 8, ["icon"])) : vue.createCommentVNode("", true)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
              });
              _push3(`<!--]-->`);
            } else {
              return [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.fields, (th, th_index) => {
                  return vue.openBlock(), vue.createBlock(_component_Th, {
                    onClick: ($event) => _ctx.applySorting(th),
                    style: { "cursor": th.sortable === true ? "pointer" : null },
                    key: th_index
                  }, {
                    default: vue.withCtx(() => [
                      vue.renderSlot(_ctx.$slots, "head(" + th.key + ")", {
                        column: th.key,
                        field: th,
                        index: th_index,
                        label: _ctx.getLabel(th),
                        sortBy: _ctx.sorting.sortBy,
                        sort: _ctx.sorting.sort,
                        unselectAllRows: _ctx.unselectAllRows,
                        selectAllRows: _ctx.selectAllRows,
                        selectedAllRows: _ctx.selectedAllRows
                      }, () => [
                        vue.createTextVNode(vue.toDisplayString(_ctx.getLabel(th)), 1)
                      ]),
                      typeof th === "object" && th.sortable === true ? (vue.openBlock(), vue.createBlock(_component_Icon, {
                        key: 0,
                        icon: _ctx.sorting.sortBy === th.key && _ctx.sorting.sort === "asc" ? "sort-down" : "sort-up"
                      }, null, 8, ["icon"])) : vue.createCommentVNode("", true)
                    ]),
                    _: 2
                  }, 1032, ["onClick", "style"]);
                }), 128))
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_TBody, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<!--[-->`);
              serverRenderer.ssrRenderList(_ctx.itemsSorted, (row, row_index) => {
                _push3(serverRenderer.ssrRenderComponent(_component_Tr, { key: row_index }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<!--[-->`);
                      serverRenderer.ssrRenderList(_ctx.fields, (th, th_index) => {
                        _push4(serverRenderer.ssrRenderComponent(_component_Td, { key: th_index }, {
                          default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              serverRenderer.ssrRenderSlot(_ctx.$slots, "cell(" + _ctx.getKey(th) + ")", {
                                item: row,
                                index: row_index,
                                field: th,
                                rowSelected: false,
                                detailsShowing: false,
                                sortBy: _ctx.sorting.sortBy,
                                sort: _ctx.sorting.sort,
                                selectRow: _ctx.selectRow,
                                selectedRows: _ctx.selectedRows,
                                value: _ctx.getValue(row, th, th_index)
                              }, () => {
                                _push5(`${serverRenderer.ssrInterpolate(_ctx.getValue(row, th, th_index))}`);
                              }, _push5, _parent5, _scopeId4);
                            } else {
                              return [
                                vue.renderSlot(_ctx.$slots, "cell(" + _ctx.getKey(th) + ")", {
                                  item: row,
                                  index: row_index,
                                  field: th,
                                  rowSelected: false,
                                  detailsShowing: false,
                                  sortBy: _ctx.sorting.sortBy,
                                  sort: _ctx.sorting.sort,
                                  selectRow: _ctx.selectRow,
                                  selectedRows: _ctx.selectedRows,
                                  value: _ctx.getValue(row, th, th_index)
                                }, () => [
                                  vue.createTextVNode(vue.toDisplayString(_ctx.getValue(row, th, th_index)), 1)
                                ])
                              ];
                            }
                          }),
                          _: 2
                        }, _parent4, _scopeId3));
                      });
                      _push4(`<!--]-->`);
                    } else {
                      return [
                        (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.fields, (th, th_index) => {
                          return vue.openBlock(), vue.createBlock(_component_Td, { key: th_index }, {
                            default: vue.withCtx(() => [
                              vue.renderSlot(_ctx.$slots, "cell(" + _ctx.getKey(th) + ")", {
                                item: row,
                                index: row_index,
                                field: th,
                                rowSelected: false,
                                detailsShowing: false,
                                sortBy: _ctx.sorting.sortBy,
                                sort: _ctx.sorting.sort,
                                selectRow: _ctx.selectRow,
                                selectedRows: _ctx.selectedRows,
                                value: _ctx.getValue(row, th, th_index)
                              }, () => [
                                vue.createTextVNode(vue.toDisplayString(_ctx.getValue(row, th, th_index)), 1)
                              ])
                            ]),
                            _: 2
                          }, 1024);
                        }), 128))
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
              });
              _push3(`<!--]-->`);
            } else {
              return [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.itemsSorted, (row, row_index) => {
                  return vue.openBlock(), vue.createBlock(_component_Tr, { key: row_index }, {
                    default: vue.withCtx(() => [
                      (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.fields, (th, th_index) => {
                        return vue.openBlock(), vue.createBlock(_component_Td, { key: th_index }, {
                          default: vue.withCtx(() => [
                            vue.renderSlot(_ctx.$slots, "cell(" + _ctx.getKey(th) + ")", {
                              item: row,
                              index: row_index,
                              field: th,
                              rowSelected: false,
                              detailsShowing: false,
                              sortBy: _ctx.sorting.sortBy,
                              sort: _ctx.sorting.sort,
                              selectRow: _ctx.selectRow,
                              selectedRows: _ctx.selectedRows,
                              value: _ctx.getValue(row, th, th_index)
                            }, () => [
                              vue.createTextVNode(vue.toDisplayString(_ctx.getValue(row, th, th_index)), 1)
                            ])
                          ]),
                          _: 2
                        }, 1024);
                      }), 128))
                    ]),
                    _: 2
                  }, 1024);
                }), 128))
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_THead, null, {
            default: vue.withCtx(() => [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.fields, (th, th_index) => {
                return vue.openBlock(), vue.createBlock(_component_Th, {
                  onClick: ($event) => _ctx.applySorting(th),
                  style: { "cursor": th.sortable === true ? "pointer" : null },
                  key: th_index
                }, {
                  default: vue.withCtx(() => [
                    vue.renderSlot(_ctx.$slots, "head(" + th.key + ")", {
                      column: th.key,
                      field: th,
                      index: th_index,
                      label: _ctx.getLabel(th),
                      sortBy: _ctx.sorting.sortBy,
                      sort: _ctx.sorting.sort,
                      unselectAllRows: _ctx.unselectAllRows,
                      selectAllRows: _ctx.selectAllRows,
                      selectedAllRows: _ctx.selectedAllRows
                    }, () => [
                      vue.createTextVNode(vue.toDisplayString(_ctx.getLabel(th)), 1)
                    ]),
                    typeof th === "object" && th.sortable === true ? (vue.openBlock(), vue.createBlock(_component_Icon, {
                      key: 0,
                      icon: _ctx.sorting.sortBy === th.key && _ctx.sorting.sort === "asc" ? "sort-down" : "sort-up"
                    }, null, 8, ["icon"])) : vue.createCommentVNode("", true)
                  ]),
                  _: 2
                }, 1032, ["onClick", "style"]);
              }), 128))
            ]),
            _: 3
          }),
          vue.createVNode(_component_TBody, null, {
            default: vue.withCtx(() => [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.itemsSorted, (row, row_index) => {
                return vue.openBlock(), vue.createBlock(_component_Tr, { key: row_index }, {
                  default: vue.withCtx(() => [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(_ctx.fields, (th, th_index) => {
                      return vue.openBlock(), vue.createBlock(_component_Td, { key: th_index }, {
                        default: vue.withCtx(() => [
                          vue.renderSlot(_ctx.$slots, "cell(" + _ctx.getKey(th) + ")", {
                            item: row,
                            index: row_index,
                            field: th,
                            rowSelected: false,
                            detailsShowing: false,
                            sortBy: _ctx.sorting.sortBy,
                            sort: _ctx.sorting.sort,
                            selectRow: _ctx.selectRow,
                            selectedRows: _ctx.selectedRows,
                            value: _ctx.getValue(row, th, th_index)
                          }, () => [
                            vue.createTextVNode(vue.toDisplayString(_ctx.getValue(row, th, th_index)), 1)
                          ])
                        ]),
                        _: 2
                      }, 1024);
                    }), 128))
                  ]),
                  _: 2
                }, 1024);
              }), 128))
            ]),
            _: 3
          })
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$1z = _sfc_main$1z.setup;
_sfc_main$1z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/DataTable.vue");
  return _sfc_setup$1z ? _sfc_setup$1z(props, ctx) : void 0;
};
var DataTable = /* @__PURE__ */ _export_sfc(_sfc_main$1z, [["ssrRender", _sfc_ssrRender$18]]);
const _sfc_main$1y = {
  name: "Datepicker",
  props: {
    modelValue: {
      type: String,
      default: null
    }
  },
  setup(props, context) {
    const model = vue.ref(null);
    return {
      model
    };
  }
};
function _sfc_ssrRender$17(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
}
const _sfc_setup$1y = _sfc_main$1y.setup;
_sfc_main$1y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Datepicker.vue");
  return _sfc_setup$1y ? _sfc_setup$1y(props, ctx) : void 0;
};
var Datepicker = /* @__PURE__ */ _export_sfc(_sfc_main$1y, [["ssrRender", _sfc_ssrRender$17]]);
var dropdownProps = {
  tag: makeString("div"),
  menuTag: makeString("ul"),
  toggleTag: makeString("button"),
  size: makeString(),
  text: makeString(),
  variant: makeString("secondary"),
  splitVariant: makeString("secondary"),
  block: makeBoolean(false),
  disabled: makeBoolean(false),
  dir: makeString("bottom"),
  align: makeString("start"),
  menuDark: makeBoolean(false),
  menuClass: make([String, Array], []),
  split: makeBoolean(false)
};
const _sfc_main$1x = {
  name: "DropdownMenu",
  props: {
    tag: makeString("ul"),
    dark: makeBoolean(false),
    show: makeBoolean(false)
  },
  computed: {
    classes() {
      return [
        "dropdown-menu",
        {
          "dropdown-menu-dark": this.dark,
          "show": this.show
        }
      ];
    }
  }
};
function _sfc_ssrRender$16(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $options.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1x = _sfc_main$1x.setup;
_sfc_main$1x.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/DropdownMenu.vue");
  return _sfc_setup$1x ? _sfc_setup$1x(props, ctx) : void 0;
};
var DropdownMenu = /* @__PURE__ */ _export_sfc(_sfc_main$1x, [["ssrRender", _sfc_ssrRender$16]]);
const _sfc_main$1w = {
  name: "Dropdown",
  components: { Button, DropdownMenu },
  props: dropdownProps,
  setup(props) {
    return {
      classes: vue.computed(() => [
        {
          "btn-group": !props.block,
          "dropdown": props.block,
          "dropend": props.dir === "right",
          "dropstart": props.dir === "left",
          "dropup": props.dir === "top"
        }
      ]),
      popperOptions: vue.computed(() => ({
        placement: props.align ? [props.dir, props.align].join("-") : "bottom-start",
        modifiers: [
          {
            name: "offset",
            options: {
              offset: [0, 5]
            }
          }
        ]
      }))
    };
  },
  data() {
    return {
      shouldOpen: false,
      toggleAriaExpanded: false,
      popperInstance: null
    };
  },
  mounted() {
    this.popperInstance = core$1.createPopper(this.$refs.toggle.$el, this.$refs.menu.$el, this.popperOptions);
  },
  methods: {
    clickOutside(e) {
      if (e.target !== this.$refs.toggle.$el) {
        this.shouldOpen = false;
      }
    }
  },
  watch: {
    shouldOpen(value) {
      this.popperInstance.update();
      this.toggleAriaExpanded = value;
      if (value) {
        document.addEventListener("click", this.clickOutside);
      } else {
        document.removeEventListener("click", this.clickOutside);
      }
    }
  }
};
function _sfc_ssrRender$15(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Button = vue.resolveComponent("Button");
  const _component_DropdownMenu = vue.resolveComponent("DropdownMenu");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent(_ctx.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.split) {
          _push2(serverRenderer.ssrRenderComponent(_component_Button, {
            disabled: _ctx.disabled,
            variant: _ctx.splitVariant,
            block: _ctx.block,
            size: _ctx.size
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "button-content", {}, () => {
                  _push3(`${serverRenderer.ssrInterpolate(_ctx.text)}`);
                }, _push3, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "button-content", {}, () => [
                    vue.createTextVNode(vue.toDisplayString(_ctx.text), 1)
                  ])
                ];
              }
            }),
            _: 3
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(serverRenderer.ssrRenderComponent(_component_Button, {
          ref: "toggle",
          tag: _ctx.toggleTag,
          block: _ctx.block,
          disabled: _ctx.disabled,
          variant: _ctx.variant,
          size: _ctx.size,
          class: ["dropdown-toggle", { "show": $data.shouldOpen, "dropdown-toggle-split": _ctx.split }],
          "aria-expanded": $data.toggleAriaExpanded
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "button-content", {}, () => {
                if (_ctx.split) {
                  _push3(`<span class="visually-hidden"${_scopeId2}>Toggle Dropdown</span>`);
                } else {
                  _push3(`<!--[-->${serverRenderer.ssrInterpolate(_ctx.text)}<!--]-->`);
                }
              }, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "button-content", {}, () => [
                  _ctx.split ? (vue.openBlock(), vue.createBlock("span", {
                    key: 0,
                    class: "visually-hidden"
                  }, "Toggle Dropdown")) : (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
                    vue.createTextVNode(vue.toDisplayString(_ctx.text), 1)
                  ], 64))
                ])
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_DropdownMenu, {
          ref: "menu",
          show: $data.shouldOpen,
          tag: _ctx.menuTag,
          class: _ctx.menuClass,
          dark: _ctx.menuDark
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
      } else {
        return [
          _ctx.split ? (vue.openBlock(), vue.createBlock(_component_Button, {
            key: 0,
            disabled: _ctx.disabled,
            variant: _ctx.splitVariant,
            block: _ctx.block,
            size: _ctx.size
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "button-content", {}, () => [
                vue.createTextVNode(vue.toDisplayString(_ctx.text), 1)
              ])
            ]),
            _: 3
          }, 8, ["disabled", "variant", "block", "size"])) : vue.createCommentVNode("", true),
          vue.createVNode(_component_Button, {
            ref: "toggle",
            tag: _ctx.toggleTag,
            block: _ctx.block,
            disabled: _ctx.disabled,
            variant: _ctx.variant,
            size: _ctx.size,
            class: ["dropdown-toggle", { "show": $data.shouldOpen, "dropdown-toggle-split": _ctx.split }],
            onClick: ($event) => $data.shouldOpen = !$data.shouldOpen,
            "aria-expanded": $data.toggleAriaExpanded
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "button-content", {}, () => [
                _ctx.split ? (vue.openBlock(), vue.createBlock("span", {
                  key: 0,
                  class: "visually-hidden"
                }, "Toggle Dropdown")) : (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
                  vue.createTextVNode(vue.toDisplayString(_ctx.text), 1)
                ], 64))
              ])
            ]),
            _: 3
          }, 8, ["tag", "block", "disabled", "variant", "size", "class", "onClick", "aria-expanded"]),
          vue.createVNode(_component_DropdownMenu, {
            ref: "menu",
            show: $data.shouldOpen,
            tag: _ctx.menuTag,
            class: _ctx.menuClass,
            dark: _ctx.menuDark
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }, 8, ["show", "tag", "class", "dark"])
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1w = _sfc_main$1w.setup;
_sfc_main$1w.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Dropdown.vue");
  return _sfc_setup$1w ? _sfc_setup$1w(props, ctx) : void 0;
};
var Dropdown = /* @__PURE__ */ _export_sfc(_sfc_main$1w, [["ssrRender", _sfc_ssrRender$15]]);
const _sfc_main$1v = vue.defineComponent({
  name: "DropdownButton",
  props: {
    active: makeBoolean(false),
    disabled: makeBoolean(false)
  }
});
function _sfc_ssrRender$14(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<li${serverRenderer.ssrRenderAttrs(vue.mergeProps({ role: "menuitem" }, _attrs))}><button type="button" class="${serverRenderer.ssrRenderClass([{ "active": _ctx.active, "disabled": _ctx.disabled }, "dropdown-item"])}">`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button></li>`);
}
const _sfc_setup$1v = _sfc_main$1v.setup;
_sfc_main$1v.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/DropdownButton.vue");
  return _sfc_setup$1v ? _sfc_setup$1v(props, ctx) : void 0;
};
var DropdownButton = /* @__PURE__ */ _export_sfc(_sfc_main$1v, [["ssrRender", _sfc_ssrRender$14]]);
const _sfc_main$1u = {
  name: "DropdownDivider"
};
function _sfc_ssrRender$13(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<li${serverRenderer.ssrRenderAttrs(vue.mergeProps({ role: "presentation" }, _attrs))}><hr role="separator" aria-orientation="horizontal" class="dropdown-divider"></li>`);
}
const _sfc_setup$1u = _sfc_main$1u.setup;
_sfc_main$1u.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/DropdownDivider.vue");
  return _sfc_setup$1u ? _sfc_setup$1u(props, ctx) : void 0;
};
var DropdownDivider = /* @__PURE__ */ _export_sfc(_sfc_main$1u, [["ssrRender", _sfc_ssrRender$13]]);
const _sfc_main$1t = {
  name: "DropdownItem",
  props: {
    href: makeString("#"),
    active: makeBoolean(false),
    disabled: makeBoolean(false),
    isText: makeBoolean(false)
  }
};
function _sfc_ssrRender$12(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<li${serverRenderer.ssrRenderAttrs(vue.mergeProps({ role: "presentation" }, _attrs))}>`);
  if ($props.isText) {
    _push(`<p class="dropdown-item-text">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</p>`);
  } else {
    _push(`<a class="${serverRenderer.ssrRenderClass([{ "active": $props.active, "disabled": $props.disabled }, "dropdown-item"])}"${serverRenderer.ssrRenderAttr("href", $props.href)}>`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</a>`);
  }
  _push(`</li>`);
}
const _sfc_setup$1t = _sfc_main$1t.setup;
_sfc_main$1t.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/DropdownItem.vue");
  return _sfc_setup$1t ? _sfc_setup$1t(props, ctx) : void 0;
};
var DropdownItem = /* @__PURE__ */ _export_sfc(_sfc_main$1t, [["ssrRender", _sfc_ssrRender$12]]);
const _sfc_main$1s = {
  name: "FormLabel",
  props: {
    horizontal: makeBoolean(false),
    sm: makeNumber(null),
    md: makeNumber(null),
    lg: makeNumber(null),
    xl: makeNumber(null)
  },
  setup(props) {
    const classes = vue.reactive({
      "form-label": !props.horizontal,
      "col-form-label": props.horizontal,
      ["col-sm-" + props.sm]: props.horizontal && props.sm,
      ["col-md-" + props.md]: props.horizontal && props.md,
      ["col-lg-" + props.lg]: props.horizontal && props.lg,
      ["col-xl-" + props.xl]: props.horizontal && props.xl
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$11(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<label${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</label>`);
}
const _sfc_setup$1s = _sfc_main$1s.setup;
_sfc_main$1s.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/FormLabel.vue");
  return _sfc_setup$1s ? _sfc_setup$1s(props, ctx) : void 0;
};
var FormLabel = /* @__PURE__ */ _export_sfc(_sfc_main$1s, [["ssrRender", _sfc_ssrRender$11]]);
const _sfc_main$1r = {
  name: "FormGroup",
  components: { FormLabel },
  props: {
    tag: makeString("div"),
    floating: makeBoolean(false),
    label: makeString(),
    labelFor: makeString(),
    horizontal: makeBoolean(false),
    labelSm: makeNumber(null),
    labelMd: makeNumber(null),
    labelLg: makeNumber(null),
    labelXl: makeNumber(null),
    contentSm: makeNumber(null),
    contentMd: makeNumber(null),
    contentLg: makeNumber(null),
    contentXl: makeNumber(null),
    noMarginBottom: makeBoolean(false)
  },
  setup(props) {
    const contentClasses = vue.ref({});
    if (props.horizontal) {
      contentClasses.value = {
        ["col-sm-" + props.contentSm]: !!props.contentSm,
        ["col-md-" + props.contentMd]: !!props.contentMd,
        ["col-lg-" + props.contentLg]: !!props.contentLg,
        ["col-xl-" + props.contentXl]: !!props.contentXl
      };
    }
    return {
      classes: vue.computed(() => [
        "form-group",
        {
          "mb-3": !props.noMarginBottom,
          "row": props.horizontal,
          "form-floating": props.floating
        }
      ]),
      contentClasses
    };
  }
};
function _sfc_ssrRender$10(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_FormLabel = vue.resolveComponent("FormLabel");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({
    class: $setup.classes,
    role: "group"
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.floating && !$props.horizontal) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          _push2(`<!---->`);
        }
        if ($props.label || _ctx.$slots.label) {
          _push2(serverRenderer.ssrRenderComponent(_component_FormLabel, {
            horizontal: $props.horizontal,
            sm: $props.labelSm,
            md: $props.labelMd,
            lg: $props.labelLg,
            xl: $props.labelXl,
            for: $props.labelFor
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "label", {}, () => {
                  _push3(`${serverRenderer.ssrInterpolate($props.label)}`);
                }, _push3, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "label", {}, () => [
                    vue.createTextVNode(vue.toDisplayString($props.label), 1)
                  ])
                ];
              }
            }),
            _: 3
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        if (!$props.floating && !$props.horizontal) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          _push2(`<!---->`);
        }
        if ($props.horizontal) {
          _push2(`<div class="${serverRenderer.ssrRenderClass($setup.contentClasses)}"${_scopeId}>`);
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $props.floating && !$props.horizontal ? vue.renderSlot(_ctx.$slots, "default", { key: 0 }) : vue.createCommentVNode("", true),
          $props.label || _ctx.$slots.label ? (vue.openBlock(), vue.createBlock(_component_FormLabel, {
            key: 1,
            horizontal: $props.horizontal,
            sm: $props.labelSm,
            md: $props.labelMd,
            lg: $props.labelLg,
            xl: $props.labelXl,
            for: $props.labelFor
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "label", {}, () => [
                vue.createTextVNode(vue.toDisplayString($props.label), 1)
              ])
            ]),
            _: 3
          }, 8, ["horizontal", "sm", "md", "lg", "xl", "for"])) : vue.createCommentVNode("", true),
          !$props.floating && !$props.horizontal ? vue.renderSlot(_ctx.$slots, "default", { key: 2 }) : vue.createCommentVNode("", true),
          $props.horizontal ? (vue.openBlock(), vue.createBlock("div", {
            key: 3,
            class: $setup.contentClasses
          }, [
            vue.renderSlot(_ctx.$slots, "default")
          ], 2)) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1r = _sfc_main$1r.setup;
_sfc_main$1r.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/FormGroup.vue");
  return _sfc_setup$1r ? _sfc_setup$1r(props, ctx) : void 0;
};
var FormGroup = /* @__PURE__ */ _export_sfc(_sfc_main$1r, [["ssrRender", _sfc_ssrRender$10]]);
const _sfc_main$1q = {
  name: "Grid",
  props: {
    tag: makeString("div")
  }
};
function _sfc_ssrRender$$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: "grid" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1q = _sfc_main$1q.setup;
_sfc_main$1q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Grid.vue");
  return _sfc_setup$1q ? _sfc_setup$1q(props, ctx) : void 0;
};
var Grid = /* @__PURE__ */ _export_sfc(_sfc_main$1q, [["ssrRender", _sfc_ssrRender$$]]);
const _sfc_main$1p = {
  name: "GridCol",
  props: {
    tag: makeString("div"),
    col: make([Number, String], null),
    sm: make([Number, String], null),
    md: make([Number, String], null),
    lg: make([Number, String], null),
    xl: make([Number, String], null),
    start: make([Number, String], null)
  },
  setup(props) {
    const classes = vue.reactive({
      ["g-start-" + props.start]: props.start,
      ["g-col-" + props.col]: props.col,
      ["g-col-sm-" + props.sm]: props.sm,
      ["g-col-md-" + props.md]: props.md,
      ["g-col-lg-" + props.lg]: props.lg,
      ["g-col-xl-" + props.xl]: props.xl
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1p = _sfc_main$1p.setup;
_sfc_main$1p.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/GridCol.vue");
  return _sfc_setup$1p ? _sfc_setup$1p(props, ctx) : void 0;
};
var GridCol = /* @__PURE__ */ _export_sfc(_sfc_main$1p, [["ssrRender", _sfc_ssrRender$_]]);
var Highlight = vue.defineComponent({
  props: {
    code: {
      type: String,
      required: true
    },
    language: {
      type: String,
      default: ""
    },
    autodetect: {
      type: Boolean,
      default: true
    },
    ignoreIllegals: {
      type: Boolean,
      default: true
    }
  },
  setup(props) {
    const language = vue.ref(props.language);
    vue.watch(() => props.language, (newLanguage) => {
      language.value = newLanguage;
    });
    const autodetect = vue.computed(() => props.autodetect || !language.value);
    const cannotDetectLanguage = vue.computed(() => !autodetect.value && !hljs__default["default"].getLanguage(language.value));
    const className = vue.computed(() => {
      if (cannotDetectLanguage.value) {
        return "";
      } else {
        return `hljs ${language.value}`;
      }
    });
    const highlightedCode = vue.computed(() => {
      var _a;
      if (cannotDetectLanguage.value) {
        console.warn(`The language "${language.value}" you specified could not be found.`);
        return utils.escapeHtml(props.code);
      }
      if (autodetect.value) {
        const result = hljs__default["default"].highlightAuto(props.code);
        language.value = (_a = result.language) != null ? _a : "";
        return result.value;
      } else {
        const result = hljs__default["default"].highlight(props.code, {
          language: language.value,
          ignoreIllegals: props.ignoreIllegals
        });
        return result.value;
      }
    });
    return {
      className,
      highlightedCode
    };
  },
  render() {
    return vue.h("pre", {}, [
      vue.h("code", {
        class: ["border", "mt-3", this.className],
        innerHTML: this.highlightedCode
      })
    ]);
  }
});
const _sfc_main$1o = {
  emits: ["update:modelValue"],
  props: {
    type: makeString("text"),
    size: makeString(),
    plain: makeBoolean(false),
    state: makeBoolean(null),
    modelValue: make([Number, String], null)
  },
  setup(props, context) {
    const attributes = vue.ref({});
    if (props.state !== null) {
      attributes.value = {
        "aria-invalid": props.state === false
      };
    }
    return {
      attributes,
      classes: vue.computed(() => [
        {
          ["form-control" + (props.plain ? "-plaintext" : "")]: props.type !== "range",
          "form-range": props.type === "range",
          "is-valid": props.state === true,
          "is-invalid": props.state === false,
          ["form-control-" + props.size]: !!props.size,
          "form-control-color": props.type === "color"
        }
      ])
    };
  }
};
function _sfc_ssrRender$Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<input${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    type: $props.type,
    value: $props.modelValue,
    class: $setup.classes
  }, $setup.attributes, _attrs))}>`);
}
const _sfc_setup$1o = _sfc_main$1o.setup;
_sfc_main$1o.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Input.vue");
  return _sfc_setup$1o ? _sfc_setup$1o(props, ctx) : void 0;
};
var Input = /* @__PURE__ */ _export_sfc(_sfc_main$1o, [["ssrRender", _sfc_ssrRender$Z]]);
const _sfc_main$1n = {
  name: "InputGroupText",
  props: {
    tag: makeString("span")
  }
};
function _sfc_ssrRender$Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: "input-group-text" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1n = _sfc_main$1n.setup;
_sfc_main$1n.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/InputGroupText.vue");
  return _sfc_setup$1n ? _sfc_setup$1n(props, ctx) : void 0;
};
var InputGroupText = /* @__PURE__ */ _export_sfc(_sfc_main$1n, [["ssrRender", _sfc_ssrRender$Y]]);
var InputGroup_vue_vue_type_style_index_0_lang = "";
const _sfc_main$1m = {
  components: { InputGroupText },
  props: {
    tag: makeString("div"),
    size: makeString(),
    prepend: makeString(null),
    append: makeString(null),
    noWrap: makeBoolean(false)
  },
  setup(props) {
    return {
      classes: vue.computed(() => [
        "input-group",
        {
          ["input-group-" + props.size]: !!props.size,
          "flex-nowrap": props.noWrap
        }
      ])
    };
  }
};
function _sfc_ssrRender$X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_InputGroupText = vue.resolveComponent("InputGroupText");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({
    class: $setup.classes,
    role: "group"
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.$slots.prepend || $props.prepend) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "prepend", {}, () => {
            if ($props.prepend) {
              _push2(serverRenderer.ssrRenderComponent(_component_InputGroupText, null, {
                default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`${serverRenderer.ssrInterpolate($props.prepend)}`);
                  } else {
                    return [
                      vue.createTextVNode(vue.toDisplayString($props.prepend), 1)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
          }, _push2, _parent2, _scopeId);
        } else {
          _push2(`<!---->`);
        }
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        if (_ctx.$slots.append || $props.append) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "append", {}, () => {
            if ($props.append) {
              _push2(serverRenderer.ssrRenderComponent(_component_InputGroupText, null, {
                default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`${serverRenderer.ssrInterpolate($props.append)}`);
                  } else {
                    return [
                      vue.createTextVNode(vue.toDisplayString($props.append), 1)
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
          }, _push2, _parent2, _scopeId);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          _ctx.$slots.prepend || $props.prepend ? vue.renderSlot(_ctx.$slots, "prepend", { key: 0 }, () => [
            $props.prepend ? (vue.openBlock(), vue.createBlock(_component_InputGroupText, { key: 0 }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(vue.toDisplayString($props.prepend), 1)
              ]),
              _: 1
            })) : vue.createCommentVNode("", true)
          ]) : vue.createCommentVNode("", true),
          vue.renderSlot(_ctx.$slots, "default"),
          _ctx.$slots.append || $props.append ? vue.renderSlot(_ctx.$slots, "append", { key: 1 }, () => [
            $props.append ? (vue.openBlock(), vue.createBlock(_component_InputGroupText, { key: 0 }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(vue.toDisplayString($props.append), 1)
              ]),
              _: 1
            })) : vue.createCommentVNode("", true)
          ]) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1m = _sfc_main$1m.setup;
_sfc_main$1m.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/InputGroup.vue");
  return _sfc_setup$1m ? _sfc_setup$1m(props, ctx) : void 0;
};
var InputGroup = /* @__PURE__ */ _export_sfc(_sfc_main$1m, [["ssrRender", _sfc_ssrRender$X]]);
const _sfc_main$1l = {
  name: "Link",
  props: {
    href: makeString("#"),
    target: makeString("_self")
  }
};
function _sfc_ssrRender$W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<a${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    href: $props.href,
    target: $props.target
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</a>`);
}
const _sfc_setup$1l = _sfc_main$1l.setup;
_sfc_main$1l.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Link.vue");
  return _sfc_setup$1l ? _sfc_setup$1l(props, ctx) : void 0;
};
var Link = /* @__PURE__ */ _export_sfc(_sfc_main$1l, [["ssrRender", _sfc_ssrRender$W]]);
var ListGroup = vue.defineComponent({
  name: "ListGroup",
  props: {
    tag: makeString("ul"),
    flush: { type: Boolean, default: () => false },
    numbered: { type: Boolean, default: () => false },
    horizontal: { type: [Boolean, String], default: false }
  },
  setup(props, context) {
    return {
      classes: vue.computed(() => [
        "list-group",
        {
          "list-group-flush": props.flush,
          "list-group-numbered": props.numbered,
          ["list-group-horizontal" + (typeof props.horizontal === "string" ? "-" + props.horizontal : "")]: props.horizontal
        }
      ])
    };
  },
  render() {
    return vue.h(this.tag, { class: this.classes }, this.$slots);
  }
});
const _sfc_main$1k = {
  name: "ListGroupItem",
  props: {
    tag: makeString("li"),
    active: makeBoolean(false),
    disabled: makeBoolean(false),
    href: makeString(null),
    to: { default: () => null },
    button: makeBoolean(false),
    variant: makeString(null)
  },
  setup(props, context) {
    const attributes = vue.ref({});
    if (props.active) {
      attributes.value["aria-current"] = props.active;
    }
    if (props.disabled) {
      attributes.value["aria-disabled"] = props.disabled;
    }
    const theTag = vue.ref(props.tag);
    if (props.href) {
      theTag.value = "a";
      attributes.value.href = props.href;
    }
    if (props.to) {
      theTag.value = "a";
      attributes.value.to = props.to;
    }
    if (props.button) {
      theTag.value = "button";
    }
    return {
      classes: vue.computed(() => [
        "list-group-item",
        {
          "active": props.active,
          "disabled": props.disabled,
          "list-group-item-action": props.button || theTag.value === "a",
          ["list-group-item-" + props.variant]: !!props.variant
        }
      ]),
      attributes,
      theTag
    };
  }
};
function _sfc_ssrRender$V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_router_link = vue.resolveComponent("router-link");
  if ($props.to) {
    _push(serverRenderer.ssrRenderComponent(_component_router_link, vue.mergeProps({
      to: $props.to,
      class: $setup.classes
    }, $setup.attributes, _attrs), {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }, _parent));
  } else {
    serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($setup.theTag), vue.mergeProps({ class: $setup.classes }, $setup.attributes, _attrs), {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }), _parent);
  }
}
const _sfc_setup$1k = _sfc_main$1k.setup;
_sfc_main$1k.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/ListGroupItem.vue");
  return _sfc_setup$1k ? _sfc_setup$1k(props, ctx) : void 0;
};
var ListGroupItem = /* @__PURE__ */ _export_sfc(_sfc_main$1k, [["ssrRender", _sfc_ssrRender$V]]);
const _sfc_main$1j = {
  name: "ModalBody"
};
function _sfc_ssrRender$U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "modal-body" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$1j = _sfc_main$1j.setup;
_sfc_main$1j.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/ModalBody.vue");
  return _sfc_setup$1j ? _sfc_setup$1j(props, ctx) : void 0;
};
var ModalBody = /* @__PURE__ */ _export_sfc(_sfc_main$1j, [["ssrRender", _sfc_ssrRender$U]]);
const _sfc_main$1i = {
  name: "ModalHeader",
  props: {
    tag: makeString("div")
  }
};
function _sfc_ssrRender$T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: "modal-header" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1i = _sfc_main$1i.setup;
_sfc_main$1i.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/ModalHeader.vue");
  return _sfc_setup$1i ? _sfc_setup$1i(props, ctx) : void 0;
};
var ModalHeader = /* @__PURE__ */ _export_sfc(_sfc_main$1i, [["ssrRender", _sfc_ssrRender$T]]);
const _sfc_main$1h = {
  name: "ModalTitle",
  props: {
    tag: makeString("h5")
  }
};
function _sfc_ssrRender$S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: "modal-title" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1h = _sfc_main$1h.setup;
_sfc_main$1h.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/ModalTitle.vue");
  return _sfc_setup$1h ? _sfc_setup$1h(props, ctx) : void 0;
};
var ModalTitle = /* @__PURE__ */ _export_sfc(_sfc_main$1h, [["ssrRender", _sfc_ssrRender$S]]);
const _sfc_main$1g = {
  name: "ModalFooter"
};
function _sfc_ssrRender$R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "modal-footer" }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$1g = _sfc_main$1g.setup;
_sfc_main$1g.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/ModalFooter.vue");
  return _sfc_setup$1g ? _sfc_setup$1g(props, ctx) : void 0;
};
var ModalFooter = /* @__PURE__ */ _export_sfc(_sfc_main$1g, [["ssrRender", _sfc_ssrRender$R]]);
const _sfc_main$1f = {
  name: "Modal",
  components: { Button, ModalFooter, ModalTitle, ModalHeader, ModalBody, ButtonClose },
  emits: ["update:modelValue", "close", "ok", "showing", "hiding", "shown", "hidden", "stateChanged"],
  props: {
    animation: makeString("fade"),
    modelValue: makeBoolean(false),
    noClose: makeBoolean(false),
    noBody: makeBoolean(false),
    title: makeString(),
    titleTag: makeString("h5"),
    titleClass: make([Array, String, Object], null),
    titleAttrs: make(Object, null),
    noHeader: makeBoolean(false),
    header: makeString(),
    headerTag: makeString("div"),
    headerClass: make([Array, String, Object], null),
    headerAttrs: make(Object, null),
    noFooter: makeBoolean(false),
    okTitle: makeString("Ok"),
    closeTitle: makeString("Close"),
    okButtonOptions: make(Object, null),
    closeButtonOptions: make(Object, null),
    noOkButton: makeBoolean(false),
    noCloseButton: makeBoolean(false),
    static: makeBoolean(false),
    noBackdrop: makeBoolean(false),
    buttonSize: makeString(),
    scrollable: makeBoolean(false),
    centered: makeBoolean(false),
    size: makeString(),
    fullscreen: make([Boolean, String], false)
  },
  setup(props, context) {
    const shouldShowBackdrop = vue.ref(false);
    const shown = vue.ref(props.modelValue);
    const classes = vue.computed(() => {
      return [
        "modal",
        {
          "fade": props.animation === "fade" || !props.animation,
          "modal-dialog-scrollable": props.scrollable,
          "modal-dialog-centered": props.centered
        }
      ];
    });
    const dialogClass = vue.computed(() => {
      return [
        "modal-dialog",
        {
          ["modal-" + props.size]: !!props.size,
          ["modal-fullscreen" + (typeof props.fullscreen === "string" ? "-" + props.fullscreen : "")]: !!props.fullscreen
        }
      ];
    });
    vue.watch(() => props.modelValue, (value) => shown.value = value);
    vue.watch(shown, (value) => context.emit("update:modelValue", value));
    const toggleState = (value = null) => {
      if (typeof value === "boolean") {
        if (value) {
          context.emit("showing", true);
        } else {
          context.emit("hiding", true);
        }
        shown.value = value;
        if (value) {
          context.emit("shown", true);
        } else {
          context.emit("hidden", true);
        }
        context.emit("stateChanged", value);
      }
    };
    const show = () => toggleState(true);
    const hide = () => toggleState(false);
    const toggle = () => toggleState(!shown.value);
    return {
      classes,
      dialogClass,
      shouldShowBackdrop,
      shown,
      toggle,
      toggleState,
      show,
      hide,
      close() {
        context.emit("close", true);
        vue.nextTick(() => toggleState(false));
      },
      ok() {
        context.emit("ok", true);
        vue.nextTick(() => toggleState(false));
      }
    };
  },
  methods: {
    clickedOutside() {
      if (this.static && this.shown) {
        let modal = this.$refs.modal;
        modal.classList.add("modal-static");
        modal.style.display = "block";
        modal.style.overflowY = "hidden";
        setTimeout(() => {
          modal.style.overflowY = "";
          modal.classList.remove("modal-static");
        }, 300);
      } else if (!this.shown) {
        this.hide();
      }
    }
  },
  watch: {
    shown(shown) {
      let modal = this.$refs.modal;
      if (shown) {
        if (!document.body.hasAttribute("data-count-modal")) {
          document.body.setAttribute("data-count-modal", "1");
        } else {
          document.body.setAttribute("data-count-modal", (Number(document.body.getAttribute("data-count-modal")) + 1).toString());
        }
        let count = Number(document.body.getAttribute("data-count-modal"));
        if (count > 1) {
          modal.style.zIndex = (1155 * count).toString();
          setTimeout(() => this.$refs.backdrop.style.zIndex = (1155 * count - 105).toString(), 0);
        }
        this.shouldShowBackdrop = true;
        document.body.classList.add("modal-open");
        document.body.style.paddingRight = "17px";
        document.body.style.overflow = "hidden";
        setTimeout(() => this.$refs.backdrop.classList.add("show"), 0);
        modal.style.display = "block";
        setTimeout(() => modal.classList.add("show"), 150);
      } else {
        if (document.body.hasAttribute("data-count-modal")) {
          if (Number(document.body.getAttribute("data-count-modal")) > 1) {
            document.body.setAttribute("data-count-modal", (Number(document.body.getAttribute("data-count-modal")) - 1).toString());
          } else {
            document.body.removeAttribute("data-count-modal");
          }
        }
        modal.style.zIndex = "";
        this.$refs.backdrop.style.zIndex = "";
        let count = Number(document.body.getAttribute("data-count-modal"));
        if (count < 1) {
          document.body.classList.remove("modal-open");
          document.body.style.paddingRight = "";
          document.body.style.overflow = "";
        }
        modal.classList.remove("show");
        setTimeout(() => modal.style.display = "none", 150);
        setTimeout(() => {
          this.$refs.backdrop.classList.remove("show");
          setTimeout(() => this.shouldShowBackdrop = false, 150);
        }, 150);
      }
    }
  }
};
function _sfc_ssrRender$Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ModalHeader = vue.resolveComponent("ModalHeader");
  const _component_ModalTitle = vue.resolveComponent("ModalTitle");
  const _component_ButtonClose = vue.resolveComponent("ButtonClose");
  const _component_ModalBody = vue.resolveComponent("ModalBody");
  const _component_ModalFooter = vue.resolveComponent("ModalFooter");
  const _component_Button = vue.resolveComponent("Button");
  serverRenderer.ssrRenderTeleport(_push, (_push2) => {
    _push2(`<div class="${serverRenderer.ssrRenderClass($setup.classes)}" tabindex="-1"${serverRenderer.ssrRenderAttr("aria-hidden", $setup.shown)}${serverRenderer.ssrRenderAttr("role", $setup.shown ? "dialog" : null)}><div class="${serverRenderer.ssrRenderClass($setup.dialogClass)}"><div class="modal-content">`);
    if (!$props.noHeader && (_ctx.$slots.header || $props.header || $props.title)) {
      _push2(serverRenderer.ssrRenderComponent(_component_ModalHeader, vue.mergeProps({
        tag: $props.headerTag,
        class: $props.headerClass
      }, $props.headerAttrs), {
        default: vue.withCtx((_, _push3, _parent2, _scopeId) => {
          if (_push3) {
            if (_ctx.$slots.header || $props.title) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "header", {}, () => {
                if (_ctx.$slots.title || $props.title) {
                  _push3(serverRenderer.ssrRenderComponent(_component_ModalTitle, vue.mergeProps({ tag: $props.titleTag }, $props.titleAttrs, { class: $props.titleClass }), {
                    default: vue.withCtx((_2, _push4, _parent3, _scopeId2) => {
                      if (_push4) {
                        serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, () => {
                          _push4(`${serverRenderer.ssrInterpolate($props.title)}`);
                        }, _push4, _parent3, _scopeId2);
                      } else {
                        return [
                          vue.renderSlot(_ctx.$slots, "title", {}, () => [
                            vue.createTextVNode(vue.toDisplayString($props.title), 1)
                          ])
                        ];
                      }
                    }),
                    _: 3
                  }, _parent2, _scopeId));
                } else {
                  _push3(`<!---->`);
                }
              }, _push3, _parent2, _scopeId);
            } else {
              _push3(`<!--[-->${serverRenderer.ssrInterpolate($props.header)}<!--]-->`);
            }
            if (!$props.noClose) {
              _push3(serverRenderer.ssrRenderComponent(_component_ButtonClose, null, null, _parent2, _scopeId));
            } else {
              _push3(`<!---->`);
            }
          } else {
            return [
              _ctx.$slots.header || $props.title ? vue.renderSlot(_ctx.$slots, "header", { key: 0 }, () => [
                _ctx.$slots.title || $props.title ? (vue.openBlock(), vue.createBlock(_component_ModalTitle, vue.mergeProps({
                  key: 0,
                  tag: $props.titleTag
                }, $props.titleAttrs, { class: $props.titleClass }), {
                  default: vue.withCtx(() => [
                    vue.renderSlot(_ctx.$slots, "title", {}, () => [
                      vue.createTextVNode(vue.toDisplayString($props.title), 1)
                    ])
                  ]),
                  _: 3
                }, 16, ["tag", "class"])) : vue.createCommentVNode("", true)
              ]) : (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 1 }, [
                vue.createTextVNode(vue.toDisplayString($props.header), 1)
              ], 64)),
              !$props.noClose ? (vue.openBlock(), vue.createBlock(_component_ButtonClose, {
                key: 2,
                onClick: $setup.close
              }, null, 8, ["onClick"])) : vue.createCommentVNode("", true)
            ];
          }
        }),
        _: 3
      }, _parent));
    } else {
      _push2(`<!---->`);
    }
    if (!$props.noBody) {
      _push2(serverRenderer.ssrRenderComponent(_component_ModalBody, null, {
        default: vue.withCtx((_, _push3, _parent2, _scopeId) => {
          if (_push3) {
            serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent2, _scopeId);
          } else {
            return [
              vue.renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }, _parent));
    } else {
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent);
    }
    if (!$props.noFooter) {
      _push2(serverRenderer.ssrRenderComponent(_component_ModalFooter, null, {
        default: vue.withCtx((_, _push3, _parent2, _scopeId) => {
          if (_push3) {
            serverRenderer.ssrRenderSlot(_ctx.$slots, "footer", {}, () => {
              if (!$props.noCloseButton) {
                _push3(serverRenderer.ssrRenderComponent(_component_Button, vue.mergeProps({ variant: "secondary" }, $props.closeButtonOptions, { size: $props.buttonSize }), {
                  default: vue.withCtx((_2, _push4, _parent3, _scopeId2) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate($props.closeTitle)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString($props.closeTitle), 1)
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push3(`<!---->`);
              }
              if (!$props.noOkButton) {
                _push3(serverRenderer.ssrRenderComponent(_component_Button, vue.mergeProps({ variant: "primary" }, $props.okButtonOptions, { size: $props.buttonSize }), {
                  default: vue.withCtx((_2, _push4, _parent3, _scopeId2) => {
                    if (_push4) {
                      _push4(`${serverRenderer.ssrInterpolate($props.okTitle)}`);
                    } else {
                      return [
                        vue.createTextVNode(vue.toDisplayString($props.okTitle), 1)
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push3(`<!---->`);
              }
            }, _push3, _parent2, _scopeId);
          } else {
            return [
              vue.renderSlot(_ctx.$slots, "footer", {}, () => [
                !$props.noCloseButton ? (vue.openBlock(), vue.createBlock(_component_Button, vue.mergeProps({
                  key: 0,
                  variant: "secondary"
                }, $props.closeButtonOptions, {
                  size: $props.buttonSize,
                  onClick: $setup.close
                }), {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString($props.closeTitle), 1)
                  ]),
                  _: 1
                }, 16, ["size", "onClick"])) : vue.createCommentVNode("", true),
                !$props.noOkButton ? (vue.openBlock(), vue.createBlock(_component_Button, vue.mergeProps({
                  key: 1,
                  variant: "primary"
                }, $props.okButtonOptions, {
                  size: $props.buttonSize,
                  onClick: $setup.ok
                }), {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(vue.toDisplayString($props.okTitle), 1)
                  ]),
                  _: 1
                }, 16, ["size", "onClick"])) : vue.createCommentVNode("", true)
              ])
            ];
          }
        }),
        _: 3
      }, _parent));
    } else {
      _push2(`<!---->`);
    }
    _push2(`</div></div></div>`);
    if (!$props.noBackdrop && $setup.shouldShowBackdrop) {
      _push2(`<div class="modal-backdrop fade"></div>`);
    } else {
      _push2(`<!---->`);
    }
  }, "body", false, _parent);
}
const _sfc_setup$1f = _sfc_main$1f.setup;
_sfc_main$1f.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Modal.vue");
  return _sfc_setup$1f ? _sfc_setup$1f(props, ctx) : void 0;
};
var Modal = /* @__PURE__ */ _export_sfc(_sfc_main$1f, [["ssrRender", _sfc_ssrRender$Q]]);
var navProps = {
  tag: makeString("ul"),
  align: makeString(null),
  vertical: makeBoolean(false),
  pills: makeBoolean(false),
  fill: makeBoolean(false),
  justified: makeBoolean(false),
  small: makeBoolean(false),
  tabs: makeBoolean(false)
};
const _sfc_main$1e = {
  name: "Nav",
  props: navProps,
  setup(props) {
    const classes = vue.computed(() => {
      return [
        "nav",
        {
          "small": props.small,
          "nav-tabs": props.tabs,
          "nav-pills": props.pills,
          "nav-fill": props.fill,
          "nav-justified": props.justified,
          "flex-column": props.vertical,
          "justify-content-center": props.align === "center",
          "justify-content-end": props.align === "right" || props.align === "end",
          "justify-content-start": props.align === "left" || props.align === "start"
        }
      ];
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent(_ctx.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1e = _sfc_main$1e.setup;
_sfc_main$1e.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Nav.vue");
  return _sfc_setup$1e ? _sfc_setup$1e(props, ctx) : void 0;
};
var Nav = /* @__PURE__ */ _export_sfc(_sfc_main$1e, [["ssrRender", _sfc_ssrRender$P]]);
const _sfc_main$1d = {
  name: "NavbarBrand",
  props: {
    tag: makeString("a"),
    href: makeString("#")
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        "navbar-brand"
      ];
    });
    const attributes = vue.computed(() => {
      return {
        "href": props.tag === "a" ? props.href : null
      };
    });
    return {
      classes,
      attributes
    };
  }
};
function _sfc_ssrRender$O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, $setup.attributes, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1d = _sfc_main$1d.setup;
_sfc_main$1d.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/NavbarBrand.vue");
  return _sfc_setup$1d ? _sfc_setup$1d(props, ctx) : void 0;
};
var NavbarBrand = /* @__PURE__ */ _export_sfc(_sfc_main$1d, [["ssrRender", _sfc_ssrRender$O]]);
const _sfc_main$1c = {
  name: "NavbarToggler",
  props: {
    target: makeString()
  },
  methods: {
    toggleNavbar() {
      if (this.target) {
        let event = new CustomEvent("toggleCollapse", {
          detail: this.target,
          bubbles: false
        });
        document.dispatchEvent(event);
      }
    }
  }
};
function _sfc_ssrRender$N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: "navbar-toggler",
    type: "button",
    "aria-expanded": "false"
  }, _attrs))}><span class="navbar-toggler-icon"></span></button>`);
}
const _sfc_setup$1c = _sfc_main$1c.setup;
_sfc_main$1c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/NavbarToggler.vue");
  return _sfc_setup$1c ? _sfc_setup$1c(props, ctx) : void 0;
};
var NavbarToggler = /* @__PURE__ */ _export_sfc(_sfc_main$1c, [["ssrRender", _sfc_ssrRender$N]]);
const _sfc_main$1b = {
  name: "Navbar",
  components: { NavbarBrand, Container, NavbarToggler },
  props: {
    brand: makeString(),
    brandUrl: makeString("#"),
    toggler: makeString(),
    tag: makeString("nav"),
    type: makeString("light"),
    variant: makeString("light"),
    fluid: makeBoolean(true),
    toggleable: make([Boolean, String], false),
    sticky: makeBoolean(false),
    print: makeBoolean(false),
    fixed: make([Boolean, String], false)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        "navbar",
        {
          ["navbar-" + props.type]: !!props.type,
          ["bg-" + props.variant]: !!props.variant,
          "navbar-expand": props.toggleable === false,
          ["navbar-expand-" + props.toggleable]: typeof props.toggleable === "string",
          ["navbar-fixed-" + props.fixed]: typeof props.fixed === "string",
          "sticky-top": props.sticky,
          "d-print": props.print
        }
      ];
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Container = vue.resolveComponent("Container");
  const _component_NavbarBrand = vue.resolveComponent("NavbarBrand");
  const _component_NavbarToggler = vue.resolveComponent("NavbarToggler");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_Container, { fluid: $props.fluid }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if (_ctx.$slots.brand || $props.brand) {
                _push3(serverRenderer.ssrRenderComponent(_component_NavbarBrand, { href: $props.brandUrl }, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      serverRenderer.ssrRenderSlot(_ctx.$slots, "brand", {}, () => {
                        _push4(`${serverRenderer.ssrInterpolate($props.brand)}`);
                      }, _push4, _parent4, _scopeId3);
                    } else {
                      return [
                        vue.renderSlot(_ctx.$slots, "brand", {}, () => [
                          vue.createTextVNode(vue.toDisplayString($props.brand), 1)
                        ])
                      ];
                    }
                  }),
                  _: 3
                }, _parent3, _scopeId2));
              } else {
                _push3(`<!---->`);
              }
              if ($props.toggler) {
                _push3(serverRenderer.ssrRenderComponent(_component_NavbarToggler, { target: $props.toggler }, null, _parent3, _scopeId2));
              } else {
                _push3(`<!---->`);
              }
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                _ctx.$slots.brand || $props.brand ? (vue.openBlock(), vue.createBlock(_component_NavbarBrand, {
                  key: 0,
                  href: $props.brandUrl
                }, {
                  default: vue.withCtx(() => [
                    vue.renderSlot(_ctx.$slots, "brand", {}, () => [
                      vue.createTextVNode(vue.toDisplayString($props.brand), 1)
                    ])
                  ]),
                  _: 3
                }, 8, ["href"])) : vue.createCommentVNode("", true),
                $props.toggler ? (vue.openBlock(), vue.createBlock(_component_NavbarToggler, {
                  key: 1,
                  target: $props.toggler
                }, null, 8, ["target"])) : vue.createCommentVNode("", true),
                vue.renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_Container, { fluid: $props.fluid }, {
            default: vue.withCtx(() => [
              _ctx.$slots.brand || $props.brand ? (vue.openBlock(), vue.createBlock(_component_NavbarBrand, {
                key: 0,
                href: $props.brandUrl
              }, {
                default: vue.withCtx(() => [
                  vue.renderSlot(_ctx.$slots, "brand", {}, () => [
                    vue.createTextVNode(vue.toDisplayString($props.brand), 1)
                  ])
                ]),
                _: 3
              }, 8, ["href"])) : vue.createCommentVNode("", true),
              $props.toggler ? (vue.openBlock(), vue.createBlock(_component_NavbarToggler, {
                key: 1,
                target: $props.toggler
              }, null, 8, ["target"])) : vue.createCommentVNode("", true),
              vue.renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }, 8, ["fluid"])
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$1b = _sfc_main$1b.setup;
_sfc_main$1b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Navbar.vue");
  return _sfc_setup$1b ? _sfc_setup$1b(props, ctx) : void 0;
};
var Navbar = /* @__PURE__ */ _export_sfc(_sfc_main$1b, [["ssrRender", _sfc_ssrRender$M]]);
const _sfc_main$1a = {
  name: "NavbarNav",
  components: { Nav },
  props: navProps
};
function _sfc_ssrRender$L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Nav = vue.resolveComponent("Nav");
  _push(serverRenderer.ssrRenderComponent(_component_Nav, vue.mergeProps(_ctx.$props, { class: "navbar-nav" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$1a = _sfc_main$1a.setup;
_sfc_main$1a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/NavbarNav.vue");
  return _sfc_setup$1a ? _sfc_setup$1a(props, ctx) : void 0;
};
var NavbarNav = /* @__PURE__ */ _export_sfc(_sfc_main$1a, [["ssrRender", _sfc_ssrRender$L]]);
const _sfc_main$19 = {
  name: "NavLink",
  props: {
    ariaCurrent: makeString(null),
    active: makeBoolean(false),
    disabled: makeBoolean(false),
    href: makeString(null),
    target: makeString("_self"),
    tag: makeString("a"),
    to: make(Object, null)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        "nav-link",
        {
          active: props.active,
          disabled: props.disabled
        }
      ];
    });
    const linkAttributes = vue.computed(() => {
      return {
        href: props.tag === "a" ? props.href : null,
        ariaCurrent: props.ariaCurrent,
        target: props.target === "a" || props.href ? props.target : null
      };
    });
    return {
      classes,
      linkAttributes
    };
  }
};
function _sfc_ssrRender$K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_router_link = vue.resolveComponent("router-link");
  if ($props.to) {
    _push(serverRenderer.ssrRenderComponent(_component_router_link, vue.mergeProps({
      to: $props.to,
      class: $setup.classes
    }, $setup.linkAttributes, _attrs), {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }, _parent));
  } else {
    serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, $setup.linkAttributes, _attrs), {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            vue.renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }), _parent);
  }
}
const _sfc_setup$19 = _sfc_main$19.setup;
_sfc_main$19.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/NavLink.vue");
  return _sfc_setup$19 ? _sfc_setup$19(props, ctx) : void 0;
};
var NavLink = /* @__PURE__ */ _export_sfc(_sfc_main$19, [["ssrRender", _sfc_ssrRender$K]]);
const _sfc_main$18 = {
  name: "NavItem",
  components: { NavLink },
  props: {
    tag: makeString("li"),
    linkTag: makeString("a"),
    ariaCurrent: makeString(null),
    href: makeString("#"),
    to: make(Object, null),
    target: makeString("_self"),
    active: makeBoolean(false),
    disabled: makeBoolean(false)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        "nav-item"
      ];
    });
    const attributes = vue.computed(() => {
      return {};
    });
    return {
      classes,
      attributes
    };
  }
};
function _sfc_ssrRender$J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_NavLink = vue.resolveComponent("NavLink");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, $setup.attributes, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_NavLink, {
          tag: $props.linkTag,
          target: $props.target,
          href: $props.href,
          to: $props.to,
          active: $props.active,
          disabled: $props.disabled,
          "aria-current": $props.ariaCurrent
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_NavLink, {
            tag: $props.linkTag,
            target: $props.target,
            href: $props.href,
            to: $props.to,
            active: $props.active,
            disabled: $props.disabled,
            "aria-current": $props.ariaCurrent
          }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }, 8, ["tag", "target", "href", "to", "active", "disabled", "aria-current"])
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$18 = _sfc_main$18.setup;
_sfc_main$18.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/NavItem.vue");
  return _sfc_setup$18 ? _sfc_setup$18(props, ctx) : void 0;
};
var NavItem = /* @__PURE__ */ _export_sfc(_sfc_main$18, [["ssrRender", _sfc_ssrRender$J]]);
const _sfc_main$17 = {
  name: "NavItemDropdown",
  components: { Dropdown },
  props: __spreadProps(__spreadValues({}, dropdownProps), {
    tag: makeString("li")
  })
};
function _sfc_ssrRender$I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Dropdown = vue.resolveComponent("Dropdown");
  _push(serverRenderer.ssrRenderComponent(_component_Dropdown, vue.mergeProps(_ctx.$props, { class: "nav-item" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$17 = _sfc_main$17.setup;
_sfc_main$17.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/NavItemDropdown.vue");
  return _sfc_setup$17 ? _sfc_setup$17(props, ctx) : void 0;
};
var NavItemDropdown = /* @__PURE__ */ _export_sfc(_sfc_main$17, [["ssrRender", _sfc_ssrRender$I]]);
const _sfc_main$16 = {
  name: "OffCanvasTitle",
  props: {
    tag: makeString("h5")
  }
};
function _sfc_ssrRender$H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: "offcanvas-title" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$16 = _sfc_main$16.setup;
_sfc_main$16.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/OffCanvasTitle.vue");
  return _sfc_setup$16 ? _sfc_setup$16(props, ctx) : void 0;
};
var OffCanvasTitle = /* @__PURE__ */ _export_sfc(_sfc_main$16, [["ssrRender", _sfc_ssrRender$H]]);
const _sfc_main$15 = {
  name: "OffCanvasHeader",
  emits: ["update:modelValue"],
  components: {
    OffCanvasTitle,
    ButtonClose
  },
  props: {
    modelValue: makeBoolean(false),
    tag: makeString("div"),
    title: makeString(),
    showClose: makeBoolean(true)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        "offcanvas-header"
      ];
    });
    return {
      classes
    };
  }
};
function _sfc_ssrRender$G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_OffCanvasTitle = vue.resolveComponent("OffCanvasTitle");
  const _component_ButtonClose = vue.resolveComponent("ButtonClose");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.$slots.title || $props.title) {
          _push2(serverRenderer.ssrRenderComponent(_component_OffCanvasTitle, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "title", {}, () => {
                  _push3(`${serverRenderer.ssrInterpolate($props.title)}`);
                }, _push3, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "title", {}, () => [
                    vue.createTextVNode(vue.toDisplayString($props.title), 1)
                  ])
                ];
              }
            }),
            _: 3
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        if ($props.showClose) {
          _push2(serverRenderer.ssrRenderComponent(_component_ButtonClose, null, null, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          _ctx.$slots.title || $props.title ? (vue.openBlock(), vue.createBlock(_component_OffCanvasTitle, { key: 0 }, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "title", {}, () => [
                vue.createTextVNode(vue.toDisplayString($props.title), 1)
              ])
            ]),
            _: 3
          })) : vue.createCommentVNode("", true),
          vue.renderSlot(_ctx.$slots, "default"),
          $props.showClose ? (vue.openBlock(), vue.createBlock(_component_ButtonClose, {
            key: 1,
            onClick: ($event) => _ctx.$emit("update:modelValue", false)
          }, null, 8, ["onClick"])) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$15 = _sfc_main$15.setup;
_sfc_main$15.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/OffCanvasHeader.vue");
  return _sfc_setup$15 ? _sfc_setup$15(props, ctx) : void 0;
};
var OffCanvasHeader = /* @__PURE__ */ _export_sfc(_sfc_main$15, [["ssrRender", _sfc_ssrRender$G]]);
const _sfc_main$14 = {
  name: "OffCanvasBody",
  props: {
    tag: makeString("div")
  }
};
function _sfc_ssrRender$F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: "offcanvas-body" }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$14 = _sfc_main$14.setup;
_sfc_main$14.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/OffCanvasBody.vue");
  return _sfc_setup$14 ? _sfc_setup$14(props, ctx) : void 0;
};
var OffCanvasBody = /* @__PURE__ */ _export_sfc(_sfc_main$14, [["ssrRender", _sfc_ssrRender$F]]);
const _sfc_main$13 = {
  name: "OffCanvas",
  components: { OffCanvasBody, OffCanvasHeader, ButtonClose },
  emits: ["update:modelValue", "beforeShow", "beforeHide", "shown", "hidden"],
  props: {
    tabIndex: makeNumber(-1),
    id: makeString(),
    modelValue: makeBoolean(false),
    placement: makeString("start"),
    header: makeString(),
    headerClass: make([Array, Object, String], null),
    headerStyle: make([Object, String], null),
    title: makeString(),
    tag: makeString("div"),
    backdrop: makeBoolean(true)
  },
  setup(props) {
    const shown = vue.ref(false);
    const showBackdrop = vue.ref(false);
    return {
      shown,
      showBackdrop
    };
  },
  computed: {
    classes() {
      let placement = null;
      if (this.placement === "left" || this.placement === "start") {
        placement = "start";
      } else if (this.placement === "right" || this.placement === "end") {
        placement = "end";
      } else {
        placement = this.placement;
      }
      return [
        "offcanvas",
        {
          "show": this.shown,
          ["offcanvas-" + placement]: !!placement
        }
      ];
    }
  },
  watch: {
    modelValue(value) {
      this.shown = value;
    },
    shown(value) {
      var _a;
      this.$emit("update:modelValue", value);
      if (value) {
        this.showBackdrop = true;
        this.$nextTick(function() {
          var _a2;
          this.$emit("beforeShow", value);
          (_a2 = this.$refs.backdrop) == null ? void 0 : _a2.classList.add("show");
          this.$refs.theCanvas.style.visibility = "visible";
        });
      } else {
        (_a = this.$refs.backdrop) == null ? void 0 : _a.classList.remove("show");
        this.$emit("beforeHide", value);
      }
    }
  },
  methods: {
    transitionEnded() {
      if (!this.shown) {
        this.$refs.theCanvas.style.visibility = "hidden";
        this.showBackdrop = false;
        this.$emit("hidden", this.shown);
      } else {
        this.$emit("shown", this.shown);
      }
    },
    globalEventListener(e) {
      if (e.detail === this.id && this.id) {
        this.shown = !this.shown;
      }
    },
    show() {
      this.shown = true;
    },
    hide() {
      this.shown = false;
    },
    toggle() {
      this.shown = !this.shown;
    }
  },
  mounted() {
    this.transitionEnded();
    window.addEventListener("toggleOffCanvas", this.globalEventListener);
  },
  beforeUnmount() {
    window.removeEventListener("toggleOffCanvas", this.globalEventListener);
  }
};
function _sfc_ssrRender$E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_OffCanvasHeader = vue.resolveComponent("OffCanvasHeader");
  const _component_OffCanvasBody = vue.resolveComponent("OffCanvasBody");
  serverRenderer.ssrRenderTeleport(_push, (_push2) => {
    serverRenderer.ssrRenderVNode(_push2, vue.createVNode(vue.resolveDynamicComponent($props.tag), {
      ref: "theCanvas",
      class: $options.classes,
      tabindex: $props.tabIndex,
      "aria-labelledby": $props.id
    }, {
      default: vue.withCtx((_, _push3, _parent2, _scopeId) => {
        if (_push3) {
          if (_ctx.$slots.header || $props.header) {
            _push3(serverRenderer.ssrRenderComponent(_component_OffCanvasHeader, {
              style: $props.headerStyle,
              class: $props.headerClass,
              modelValue: $setup.shown,
              "onUpdate:modelValue": ($event) => $setup.shown = $event,
              title: $props.title
            }, {
              default: vue.withCtx((_2, _push4, _parent3, _scopeId2) => {
                if (_push4) {
                  serverRenderer.ssrRenderSlot(_ctx.$slots, "header", {}, () => {
                    _push4(`${serverRenderer.ssrInterpolate($props.header)}`);
                  }, _push4, _parent3, _scopeId2);
                } else {
                  return [
                    vue.renderSlot(_ctx.$slots, "header", {}, () => [
                      vue.createTextVNode(vue.toDisplayString($props.header), 1)
                    ])
                  ];
                }
              }),
              _: 3
            }, _parent2, _scopeId));
          } else {
            _push3(`<!---->`);
          }
          _push3(serverRenderer.ssrRenderComponent(_component_OffCanvasBody, null, {
            default: vue.withCtx((_2, _push4, _parent3, _scopeId2) => {
              if (_push4) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push4, _parent3, _scopeId2);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "default")
                ];
              }
            }),
            _: 3
          }, _parent2, _scopeId));
        } else {
          return [
            _ctx.$slots.header || $props.header ? (vue.openBlock(), vue.createBlock(_component_OffCanvasHeader, {
              key: 0,
              style: $props.headerStyle,
              class: $props.headerClass,
              modelValue: $setup.shown,
              "onUpdate:modelValue": ($event) => $setup.shown = $event,
              title: $props.title
            }, {
              default: vue.withCtx(() => [
                vue.renderSlot(_ctx.$slots, "header", {}, () => [
                  vue.createTextVNode(vue.toDisplayString($props.header), 1)
                ])
              ]),
              _: 3
            }, 8, ["style", "class", "modelValue", "onUpdate:modelValue", "title"])) : vue.createCommentVNode("", true),
            vue.createVNode(_component_OffCanvasBody, null, {
              default: vue.withCtx(() => [
                vue.renderSlot(_ctx.$slots, "default")
              ]),
              _: 3
            })
          ];
        }
      }),
      _: 3
    }), _parent);
    if ($setup.showBackdrop && $props.backdrop) {
      _push2(`<div class="offcanvas-backdrop fade"></div>`);
    } else {
      _push2(`<!---->`);
    }
  }, "body", false, _parent);
}
const _sfc_setup$13 = _sfc_main$13.setup;
_sfc_main$13.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/OffCanvas.vue");
  return _sfc_setup$13 ? _sfc_setup$13(props, ctx) : void 0;
};
var OffCanvas = /* @__PURE__ */ _export_sfc(_sfc_main$13, [["ssrRender", _sfc_ssrRender$E]]);
const _sfc_main$12 = {
  name: "Popover",
  props: {
    target: {
      type: String,
      required: true
    },
    header: makeString(),
    modelValue: makeBoolean(false),
    placement: makeString("top"),
    triggers: make(String, "click")
  },
  setup(props) {
    const shown = vue.ref(false);
    const bsDir = (placement) => {
      if (["auto", "auto-start", "auto-end", "top", "top-start", "top-end"].includes(placement)) {
        return "top";
      } else if (["bottom", "bottom-start", "bottom-end"].includes(placement)) {
        return "bottom";
      } else if (["right", "right-start", "right-end"].includes(placement)) {
        return "end";
      } else if (["left", "left-start", "left-end"].includes(placement)) {
        return "start";
      }
      return "top";
    };
    const dir = vue.ref("top");
    dir.value = bsDir(props.placement);
    const classes = vue.computed(() => {
      return [
        "popover",
        "fade",
        {
          show: shown.value,
          ["bs-popover-" + dir.value]: !!dir.value
        }
      ];
    });
    const events = vue.computed(() => {
      return typeof props.triggers === "string" ? [props.triggers] : props.triggers;
    });
    const topLogger = {
      name: "topLogger",
      enabled: true,
      phase: "main",
      fn({ state }) {
        dir.value = bsDir(state.placement);
      }
    };
    const popperOptions = vue.computed(() => ({
      placement: ["auto", "auto-start", "auto-end"].includes(props.placement) ? "top" : props.placement,
      modifiers: [
        topLogger,
        {
          name: "offset",
          enabled: true,
          options: {
            offset: (d) => {
              return [0, 10];
            }
          }
        }
      ]
    }));
    return {
      shown,
      classes,
      events,
      popper: vue.ref(null),
      popperOptions
    };
  },
  watch: {
    modelValue(value) {
      this.shown = value;
    },
    shown(value) {
      this.$emit("update:modelValue", value);
      this.$nextTick(() => {
        if (value) {
          this.initPopper();
          let the = this;
          setTimeout(() => document.addEventListener("click", the.clickOutside), 0);
        } else {
          this.destroyPopper();
        }
      });
    }
  },
  mounted() {
    let target = document.getElementById(this.target);
    let the = this;
    target.addEventListener(this.triggers, () => the.shown = !the.shown);
  },
  beforeUnmount() {
    this.destroyPopper();
  },
  methods: {
    destroyPopper() {
      this.popper.destroy();
    },
    initPopper() {
      let target = document.getElementById(this.target);
      this.popper = core$1.createPopper(target, this.$refs.popover, this.popperOptions);
    },
    clickOutside(e) {
      let isTarget = document.getElementById(this.target).isSameNode(e.target);
      let isFromPopover = this.$refs.popover && (this.$refs.popover.isSameNode(e.target) || this.$refs.popover.contains(e.target));
      if (this.shown && !isTarget && !isFromPopover) {
        this.shown = false;
        document.removeEventListener("click", this.clickOutside);
      }
    }
  }
};
function _sfc_ssrRender$D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderTeleport(_push, (_push2) => {
    if ($setup.shown) {
      _push2(`<div class="${serverRenderer.ssrRenderClass($setup.classes)}" role="tooltip"><div data-popper-arrow class="popover-arrow"></div>`);
      if (_ctx.$slots.header || $props.header) {
        _push2(`<div class="popover-header">`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "header", {}, () => {
          _push2(`${serverRenderer.ssrInterpolate($props.header)}`);
        }, _push2, _parent);
        _push2(`</div>`);
      } else {
        _push2(`<!---->`);
      }
      _push2(`<div class="popover-body">`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent);
      _push2(`</div></div>`);
    } else {
      _push2(`<!---->`);
    }
  }, "body", false, _parent);
}
const _sfc_setup$12 = _sfc_main$12.setup;
_sfc_main$12.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Popover.vue");
  return _sfc_setup$12 ? _sfc_setup$12(props, ctx) : void 0;
};
var Popover = /* @__PURE__ */ _export_sfc(_sfc_main$12, [["ssrRender", _sfc_ssrRender$D]]);
const _sfc_main$11 = {
  name: "Radio",
  props: {
    name: makeString(null),
    id: makeString(null),
    modelValue: {
      default: null
    },
    value: {
      default: null
    }
  },
  setup(props, context) {
    const identifier = vue.ref(null);
    if (props.id) {
      identifier.value = props.id;
    } else {
      identifier.value = "radio_id" + Math.floor(Math.random() * Math.floor(Math.random() * Date.now()));
    }
    const isChecked = vue.computed(() => props.modelValue === props.value);
    return {
      identifier,
      isChecked
    };
  }
};
function _sfc_ssrRender$C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "form-check" }, _attrs))}><input class="form-check-input" type="radio"${serverRenderer.ssrRenderAttr("name", $props.name)}${serverRenderer.ssrRenderAttr("id", $setup.identifier)}${serverRenderer.ssrRenderAttr("value", $props.value)}${serverRenderer.ssrIncludeBooleanAttr($setup.isChecked) ? " checked" : ""}><label class="form-check-label"${serverRenderer.ssrRenderAttr("for", $setup.identifier)}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</label></div>`);
}
const _sfc_setup$11 = _sfc_main$11.setup;
_sfc_main$11.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Radio.vue");
  return _sfc_setup$11 ? _sfc_setup$11(props, ctx) : void 0;
};
var Radio = /* @__PURE__ */ _export_sfc(_sfc_main$11, [["ssrRender", _sfc_ssrRender$C]]);
const _sfc_main$10 = {
  name: "Range",
  props: {
    min: makeNumber(null),
    max: makeNumber(null),
    step: makeNumber(1),
    modelValue: makeNumber(0)
  },
  setup(props) {
    return {
      classes: vue.computed(() => [
        "form-range"
      ])
    };
  }
};
function _sfc_ssrRender$B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<input${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    value: $props.modelValue,
    min: $props.min,
    max: $props.max,
    step: $props.step,
    type: "range",
    class: $setup.classes
  }, _attrs))}>`);
}
const _sfc_setup$10 = _sfc_main$10.setup;
_sfc_main$10.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Range.vue");
  return _sfc_setup$10 ? _sfc_setup$10(props, ctx) : void 0;
};
var Range = /* @__PURE__ */ _export_sfc(_sfc_main$10, [["ssrRender", _sfc_ssrRender$B]]);
var Rating_vue_vue_type_style_index_0_lang = "";
const _sfc_main$$ = {
  name: "Rating",
  components: { StarFill: icons.StarFill, Star: icons.Star },
  props: {
    min: makeNumber(1),
    max: makeNumber(5),
    modelValue: makeNumber(1),
    variant: makeString(null)
  },
  setup(props, context) {
    const value = vue.ref(props.modelValue);
    vue.watch(value, (v) => context.emit("update:modelValue", v));
    vue.watch(() => props.modelValue, (v) => value.value = v);
    const items = vue.computed(() => {
      let its = [];
      for (let i = props.min; i <= props.max; i++) {
        its.push(i);
      }
      return its;
    });
    return {
      items,
      value
    };
  }
};
function _sfc_ssrRender$A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "form-rating" }, _attrs))}><!--[-->`);
  serverRenderer.ssrRenderList($setup.items, (i) => {
    serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($setup.value >= i ? "StarFill" : "Star"), {
      variant: $props.variant,
      class: "me-1 wu-rating"
    }, null), _parent);
  });
  _push(`<!--]--></div>`);
}
const _sfc_setup$$ = _sfc_main$$.setup;
_sfc_main$$.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Rating.vue");
  return _sfc_setup$$ ? _sfc_setup$$(props, ctx) : void 0;
};
var Rating = /* @__PURE__ */ _export_sfc(_sfc_main$$, [["ssrRender", _sfc_ssrRender$A]]);
const _sfc_main$_ = {
  name: "Row",
  props: {
    tag: makeString("div"),
    cols: make([String, Number], null),
    sm: make([Number, Boolean], null),
    md: make([Number, Boolean], null),
    lg: make([Number, Boolean], null),
    xl: make([Number, Boolean], null),
    alignItems: makeString(),
    justifyContent: makeString(),
    g: make([Number, String], null),
    gSm: make([Number, String], null),
    gMd: make([Number, String], null),
    gLg: make([Number, String], null),
    gXl: make([Number, String], null)
  },
  setup(props) {
    const classes = vue.reactive([
      "row",
      {
        ["row-cols-" + props.cols]: props.cols,
        ["row-cols-sm-" + props.sm]: props.sm,
        ["row-cols-md-" + props.md]: props.md,
        ["row-cols-lg-" + props.lg]: props.lg,
        ["row-cols-xl-" + props.xl]: props.xl,
        ["align-items-" + props.alignItems]: props.alignItems,
        ["justify-content-" + props.justifyContent]: props.justifyContent,
        ["g-" + props.g]: props.g,
        ["g-sm-" + props.gSm]: props.gSm,
        ["g-md-" + props.gMd]: props.gMd,
        ["g-lg-" + props.gLg]: props.gLg,
        ["g-xl-" + props.gXl]: props.gXl
      }
    ]);
    return {
      classes
    };
  }
};
function _sfc_ssrRender$z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$_ = _sfc_main$_.setup;
_sfc_main$_.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Row.vue");
  return _sfc_setup$_ ? _sfc_setup$_(props, ctx) : void 0;
};
var Row = /* @__PURE__ */ _export_sfc(_sfc_main$_, [["ssrRender", _sfc_ssrRender$z]]);
const _sfc_main$Z = {
  props: {
    multiple: false,
    size: makeString(),
    options: make(Array, []),
    valueField: make([Function, String], null),
    textField: make([Function, String], null),
    disabledField: makeString("disabled"),
    labelField: makeString("label"),
    modelValue: {
      default: null
    }
  },
  setup(props, context) {
    const model = vue.ref(null);
    vue.watch(model, (val) => context.emit("update:modelValue", val));
    vue.watch(() => props.modelValue, (value) => model.value = value);
    const getEntity = (o, k) => {
      if (typeof props[k] === "string" || props[k] === null) {
        if (!isObject(o)) {
          return o;
        }
        return o[props[k] === null ? "text" : props[k]];
      } else if (typeof props[k] === "function") {
        return props[k](o);
      }
      return o;
    };
    return {
      getEntity,
      isDisabledOption: (o) => o.hasOwnProperty(props.disabledField) ? o[props.disabledField] : false,
      model,
      classes: vue.computed(() => [
        "form-select",
        {
          ["form-select-" + props.size]: !!props.size
        }
      ])
    };
  }
};
function _sfc_ssrRender$y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<select${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: $setup.classes,
    multiple: $props.multiple
  }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "first", {}, null, _push, _parent);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`<!--[-->`);
  serverRenderer.ssrRenderList($props.options, (o, ok) => {
    _push(`<!--[-->`);
    if (o.hasOwnProperty("options")) {
      _push(`<optgroup${serverRenderer.ssrRenderAttr("label", o[$props.labelField])}><!--[-->`);
      serverRenderer.ssrRenderList(o.options, (gi, gi_key) => {
        _push(`<option${serverRenderer.ssrRenderAttr("value", $setup.getEntity(gi, "valueField"))}${serverRenderer.ssrIncludeBooleanAttr($setup.isDisabledOption(gi)) ? " disabled" : ""}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "text", {}, () => {
          _push(`${serverRenderer.ssrInterpolate($setup.getEntity(gi, "textField"))}`);
        }, _push, _parent);
        _push(`</option>`);
      });
      _push(`<!--]--></optgroup>`);
    } else {
      _push(`<option${serverRenderer.ssrRenderAttr("value", $setup.getEntity(o, "valueField"))}${serverRenderer.ssrIncludeBooleanAttr($setup.isDisabledOption(o)) ? " disabled" : ""}>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "text", {}, () => {
        _push(`${serverRenderer.ssrInterpolate($setup.getEntity(o, "textField"))}`);
      }, _push, _parent);
      _push(`</option>`);
    }
    _push(`<!--]-->`);
  });
  _push(`<!--]-->`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "last", {}, null, _push, _parent);
  _push(`</select>`);
}
const _sfc_setup$Z = _sfc_main$Z.setup;
_sfc_main$Z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Select.vue");
  return _sfc_setup$Z ? _sfc_setup$Z(props, ctx) : void 0;
};
var Select = /* @__PURE__ */ _export_sfc(_sfc_main$Z, [["ssrRender", _sfc_ssrRender$y]]);
var SpinButton_vue_vue_type_style_index_0_lang = "";
const _sfc_main$Y = {
  name: "SpinButton",
  components: { Dash: icons.Dash, Plus: icons.Plus, Button, InputGroup },
  props: {
    modelValue: makeNumber(0),
    step: makeNumber(1),
    min: makeNumber(0),
    max: makeNumber(100),
    buttonVariant: makeString("secondary"),
    size: makeString(null),
    formatter: {
      type: Function,
      default: (v) => v
    },
    inline: makeBoolean(false),
    vertical: makeBoolean(false)
  },
  setup(props, context) {
    const model = vue.ref(props.modelValue);
    vue.watch(model, (v) => context.emit("update:modelValue", v));
    vue.watch(() => props.modelValue, (v) => model.value = v);
    const updateValue = (type) => {
      if (type === "increment" && model.value + props.step <= props.max) {
        model.value += props.step;
      } else if (type === "decrement" && model.value - props.step >= props.min) {
        model.value -= props.step;
      }
    };
    return {
      model,
      updateValue,
      classes: vue.computed(() => [
        "spin-button",
        {
          "inline": props.inline
        }
      ])
    };
  }
};
function _sfc_ssrRender$x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_InputGroup = vue.resolveComponent("InputGroup");
  const _component_Button = vue.resolveComponent("Button");
  const _component_Dash = vue.resolveComponent("Dash");
  const _component_Plus = vue.resolveComponent("Plus");
  _push(serverRenderer.ssrRenderComponent(_component_InputGroup, vue.mergeProps({
    tabindex: "-1",
    class: $setup.classes
  }, _attrs), {
    prepend: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_Button, {
          variant: $props.buttonVariant,
          size: $props.size,
          "aria-label": "Decrement"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_Dash, null, null, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_Dash)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_Button, {
            onClick: ($event) => $setup.updateValue("decrement"),
            variant: $props.buttonVariant,
            size: $props.size,
            "aria-label": "Decrement"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_Dash)
            ]),
            _: 1
          }, 8, ["onClick", "variant", "size"])
        ];
      }
    }),
    append: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_Button, {
          variant: $props.buttonVariant,
          size: $props.size,
          "aria-label": "Increment"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_Plus, null, null, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_Plus)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_Button, {
            onClick: ($event) => $setup.updateValue("increment"),
            variant: $props.buttonVariant,
            size: $props.size,
            "aria-label": "Increment"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_Plus)
            ]),
            _: 1
          }, 8, ["onClick", "variant", "size"])
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<output role="spinbutton"${serverRenderer.ssrRenderAttr("aria-valuemin", $props.min)}${serverRenderer.ssrRenderAttr("aria-valuemax", $props.max)}${serverRenderer.ssrRenderAttr("aria-valuenow", $setup.model)}${serverRenderer.ssrRenderAttr("aria-valuetext", $setup.model)} class="${serverRenderer.ssrRenderClass([{ ["form-control-" + $props.size]: $props.size }, "form-control text-center"])}"${_scopeId}>${serverRenderer.ssrInterpolate($props.formatter($setup.model))}</output>`);
      } else {
        return [
          vue.createVNode("output", {
            role: "spinbutton",
            "aria-valuemin": $props.min,
            "aria-valuemax": $props.max,
            "aria-valuenow": $setup.model,
            "aria-valuetext": $setup.model,
            class: [{ ["form-control-" + $props.size]: $props.size }, "form-control text-center"]
          }, vue.toDisplayString($props.formatter($setup.model)), 11, ["aria-valuemin", "aria-valuemax", "aria-valuenow", "aria-valuetext"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$Y = _sfc_main$Y.setup;
_sfc_main$Y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/SpinButton.vue");
  return _sfc_setup$Y ? _sfc_setup$Y(props, ctx) : void 0;
};
var SpinButton = /* @__PURE__ */ _export_sfc(_sfc_main$Y, [["ssrRender", _sfc_ssrRender$x]]);
const _sfc_main$X = {
  emits: ["update:active"],
  props: {
    active: makeBoolean(false),
    title: makeString()
  },
  inject: ["registerTab", "unregisterTab"],
  setup(props, context) {
    const visible = vue.ref(props.active);
    vue.watch(() => props.active, (value) => visible.value = value);
    return {
      classes: vue.computed(() => ["tab-pane", "fade"]),
      updateVisible: (value) => visible.value = value,
      visible
    };
  },
  mounted() {
    this.registerTab(this);
    this.applyVisibility(this.visible);
  },
  unmounted() {
    this.unregisterTab(this);
  },
  watch: {
    visible(value) {
      this.$emit("update:active", value);
      this.applyVisibility(value);
    }
  },
  methods: {
    applyVisibility(value) {
      if (value) {
        this.$el.classList.add("active");
        setTimeout(() => this.$el.classList.add("show"), 150);
      } else {
        this.$el.classList.remove("show");
        setTimeout(() => this.$el.classList.remove("active"), 0);
      }
    }
  }
};
function _sfc_ssrRender$w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$X = _sfc_main$X.setup;
_sfc_main$X.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Tab.vue");
  return _sfc_setup$X ? _sfc_setup$X(props, ctx) : void 0;
};
var Tab = /* @__PURE__ */ _export_sfc(_sfc_main$X, [["ssrRender", _sfc_ssrRender$w]]);
const _sfc_main$W = {
  emits: ["update:modelValue"],
  components: { NavItem, Nav },
  props: {
    modelValue: makeNumber(0),
    card: makeBoolean(false),
    pills: makeBoolean(false),
    fill: makeBoolean(false),
    justified: makeBoolean(false),
    align: makeString(),
    end: makeBoolean(false),
    vertical: makeBoolean(false)
  },
  setup(props, context) {
    const tabsMap = vue.ref([]);
    vue.provide("registerTab", (tab) => {
      let index2 = tabsMap.value.indexOf(tab);
      if (index2 < 0) {
        tabsMap.value.push(tab);
      } else {
        tabsMap.value[index2] = tab;
      }
    });
    vue.provide("unregisterTab", (tab) => {
      let index2 = tabsMap.value.indexOf(tab);
      if (index2 > -1) {
        tabsMap.value.splice(index2, 1);
      }
    });
    const active = vue.ref(props.modelValue);
    vue.watch(() => props.modelValue, (value) => active.value = value);
    vue.watch(active, (value) => {
      context.emit("update:modelValue", value);
      tabsMap.value.filter((tab) => tab.visible).forEach((tab) => tab.visible = false);
      tabsMap.value[value].updateVisible(true);
    });
    return {
      tabsMap,
      classes: vue.computed(() => {
        return {
          card: props.card,
          "d-flex": props.vertical,
          "align-items-start": props.vertical
        };
      }),
      active
    };
  }
};
function _sfc_ssrRender$v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Nav = vue.resolveComponent("Nav");
  const _component_NavItem = vue.resolveComponent("NavItem");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: $setup.classes }, _attrs))}>`);
  if ($props.end) {
    _push(`<div class="tab-content">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<div class="${serverRenderer.ssrRenderClass({ "card-header": $props.card })}">`);
  _push(serverRenderer.ssrRenderComponent(_component_Nav, {
    tabs: true,
    pills: $props.pills,
    fill: $props.fill,
    justified: $props.justified,
    align: $props.align,
    vertical: $props.vertical,
    class: { "card-header-pills": $props.pills }
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        serverRenderer.ssrRenderList($setup.tabsMap, (tab, tab_index) => {
          _push2(serverRenderer.ssrRenderComponent(_component_NavItem, {
            role: "presentation",
            key: tab_index,
            tag: "li",
            active: tab_index === $setup.active,
            "link-tag": "button"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(tab.title)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(tab.title), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
      } else {
        return [
          (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($setup.tabsMap, (tab, tab_index) => {
            return vue.openBlock(), vue.createBlock(_component_NavItem, {
              role: "presentation",
              key: tab_index,
              tag: "li",
              active: tab_index === $setup.active,
              onClick: ($event) => $setup.active = tab_index,
              "link-tag": "button"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(vue.toDisplayString(tab.title), 1)
              ]),
              _: 2
            }, 1032, ["active", "onClick"]);
          }), 128))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
  if (!$props.end) {
    _push(`<div class="tab-content">`);
    serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$W = _sfc_main$W.setup;
_sfc_main$W.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Tabs.vue");
  return _sfc_setup$W ? _sfc_setup$W(props, ctx) : void 0;
};
var Tabs = /* @__PURE__ */ _export_sfc(_sfc_main$W, [["ssrRender", _sfc_ssrRender$v]]);
const _sfc_main$V = {
  name: "Textarea",
  props: {
    size: makeString(),
    modelValue: makeString()
  },
  setup(props) {
    return {
      classes: vue.computed(() => [
        "form-control",
        {
          ["form-control-" + props.size]: !!props.size
        }
      ])
    };
  }
};
function _sfc_ssrRender$u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  let _temp0;
  _push(`<textarea${serverRenderer.ssrRenderAttrs(_temp0 = vue.mergeProps({
    class: $setup.classes,
    value: $props.modelValue
  }, _attrs), "textarea")}>${serverRenderer.ssrInterpolate("value" in _temp0 ? _temp0.value : "")}</textarea>`);
}
const _sfc_setup$V = _sfc_main$V.setup;
_sfc_main$V.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Textarea.vue");
  return _sfc_setup$V ? _sfc_setup$V(props, ctx) : void 0;
};
var Textarea = /* @__PURE__ */ _export_sfc(_sfc_main$V, [["ssrRender", _sfc_ssrRender$u]]);
const _sfc_main$U = vue.defineComponent({
  name: "TFoot",
  props: {
    variant: makeString(null),
    active: makeBoolean(false),
    align: makeString(null)
  },
  setup(props) {
    const classes = vue.computed(() => {
      return [
        {
          ["table-" + props.variant]: props.variant,
          "table-active": props.active,
          ["align-" + props.align]: !!props.align
        }
      ];
    });
    return {
      classes
    };
  }
});
function _sfc_ssrRender$t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<tfoot${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: _ctx.classes }, _attrs))}>`);
  serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</tfoot>`);
}
const _sfc_setup$U = _sfc_main$U.setup;
_sfc_main$U.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/TFoot.vue");
  return _sfc_setup$U ? _sfc_setup$U(props, ctx) : void 0;
};
var TFoot = /* @__PURE__ */ _export_sfc(_sfc_main$U, [["ssrRender", _sfc_ssrRender$t]]);
dayjs__default["default"].extend(localData__default["default"]);
dayjs__default["default"].extend(isToday__default["default"]);
const _sfc_main$T = {
  name: "Calendar",
  components: {
    InputGroup,
    ChevronDoubleLeft: icons.ChevronDoubleLeft,
    ChevronDoubleRight: icons.ChevronDoubleRight,
    CircleFill: icons.CircleFill,
    ChevronRight: icons.ChevronRight,
    ChevronLeft: icons.ChevronLeft,
    Button,
    Col,
    Row
  },
  props: {
    modelValue: make([String, Object], null),
    format: makeString("YYYY-MM-DD"),
    weekdayType: makeString("short"),
    monthSelectorEnabled: makeBoolean(true),
    activeClass: makeString("active")
  },
  setup(props, context) {
    const theDate = vue.ref(props.modelValue ? dayjs__default["default"](props.modelValue) : dayjs__default["default"]());
    vue.watch(() => props.modelValue, () => theDate.value = dayjs__default["default"](props.modelValue));
    const theWeeks = vue.computed(() => {
      const weeks = [];
      let weekday = theDate.value.startOf("month").day();
      for (let date = 1; date <= theDate.value.daysInMonth(); date++) {
        if (weekday === 0 || weeks.length === 0) {
          weeks.push([]);
        }
        weeks[weeks.length - 1].push(date);
        weekday = (weekday + 1) % 7;
      }
      return weeks.filter((w) => !!w.length).map((w) => w);
    });
    return {
      theDate,
      theWeeks,
      setMonth(e) {
        const date = dayjs__default["default"](e.target.value);
        theDate.value = dayjs__default["default"](theDate.value).set("year", date.year()).set("month", date.month());
      },
      showMonthSelector: vue.ref(false),
      add: (type, value = 1) => theDate.value = dayjs__default["default"](theDate.value).add(value, type),
      subtract: (type, value = 1) => theDate.value = dayjs__default["default"](theDate.value).subtract(value, type),
      setToday: () => {
        theDate.value = dayjs__default["default"]();
        context.emit("update:modelValue", theDate.value.format(props.format));
      },
      selectDate(day) {
        theDate.value = dayjs__default["default"](theDate.value).set("date", Number(day));
        context.emit("update:modelValue", theDate.value.format(props.format));
      },
      isToday: (day) => dayjs__default["default"](theDate.value.format("YYYY-MM") + "-" + day).isToday(),
      isSameDay(day) {
        if (!props.modelValue) {
          return false;
        }
        return dayjs__default["default"](day).format("YYYY-MM-DD") === dayjs__default["default"](props.modelValue).format("YYYY-MM-DD");
      },
      weekdays: vue.computed(() => {
        let ld = theDate.value.localeData();
        return props.weekdayType === "min" ? ld.weekdaysMin() : props.weekdayType === "short" ? ld.weekdaysShort() : ld.weekdays();
      })
    };
  }
};
function _sfc_ssrRender$s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Row = vue.resolveComponent("Row");
  const _component_Col = vue.resolveComponent("Col");
  const _component_Button = vue.resolveComponent("Button");
  const _component_ChevronDoubleLeft = vue.resolveComponent("ChevronDoubleLeft");
  const _component_ChevronLeft = vue.resolveComponent("ChevronLeft");
  const _component_CircleFill = vue.resolveComponent("CircleFill");
  const _component_ChevronRight = vue.resolveComponent("ChevronRight");
  const _component_ChevronDoubleRight = vue.resolveComponent("ChevronDoubleRight");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
    class: "wui-calendar border-1 border",
    role: "group"
  }, _attrs))}><header class="wui-calendar-header p-2 text-center fw-bold">`);
  _push(serverRenderer.ssrRenderComponent(_component_Row, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_Col, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_Button, {
                size: "sm",
                tabindex: "1",
                variant: "secondary",
                outline: "",
                class: "border-0"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_ChevronDoubleLeft, null, null, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_ChevronDoubleLeft)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_Button, {
                  size: "sm",
                  tabindex: "1",
                  variant: "secondary",
                  outline: "",
                  class: "border-0",
                  onClick: ($event) => $setup.subtract("year")
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_ChevronDoubleLeft)
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_Col, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_Button, {
                size: "sm",
                tabindex: "2",
                variant: "secondary",
                outline: "",
                class: "border-0"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_ChevronLeft, null, null, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_ChevronLeft)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_Button, {
                  size: "sm",
                  tabindex: "2",
                  variant: "secondary",
                  outline: "",
                  class: "border-0",
                  onClick: ($event) => $setup.subtract("month")
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_ChevronLeft)
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_Col, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_Button, {
                tabindex: "3",
                size: "sm",
                variant: "secondary",
                outline: "",
                class: "border-0"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_CircleFill, null, null, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_CircleFill)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_Button, {
                  tabindex: "3",
                  size: "sm",
                  variant: "secondary",
                  outline: "",
                  class: "border-0",
                  onClick: $setup.setToday
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_CircleFill)
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_Col, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_Button, {
                size: "sm",
                tabindex: "4",
                variant: "secondary",
                outline: "",
                class: "border-0"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_ChevronRight, null, null, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_ChevronRight)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_Button, {
                  size: "sm",
                  tabindex: "4",
                  variant: "secondary",
                  outline: "",
                  class: "border-0",
                  onClick: ($event) => $setup.add("month")
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_ChevronRight)
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_Col, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_Button, {
                size: "sm",
                tabindex: "5",
                variant: "secondary",
                outline: "",
                class: "border-0"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_ChevronDoubleRight, null, null, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_ChevronDoubleRight)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_Button, {
                  size: "sm",
                  tabindex: "5",
                  variant: "secondary",
                  outline: "",
                  class: "border-0",
                  onClick: ($event) => $setup.add("year")
                }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_ChevronDoubleRight)
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_Col, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_Button, {
                size: "sm",
                tabindex: "1",
                variant: "secondary",
                outline: "",
                class: "border-0",
                onClick: ($event) => $setup.subtract("year")
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_ChevronDoubleLeft)
                ]),
                _: 1
              }, 8, ["onClick"])
            ]),
            _: 1
          }),
          vue.createVNode(_component_Col, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_Button, {
                size: "sm",
                tabindex: "2",
                variant: "secondary",
                outline: "",
                class: "border-0",
                onClick: ($event) => $setup.subtract("month")
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_ChevronLeft)
                ]),
                _: 1
              }, 8, ["onClick"])
            ]),
            _: 1
          }),
          vue.createVNode(_component_Col, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_Button, {
                tabindex: "3",
                size: "sm",
                variant: "secondary",
                outline: "",
                class: "border-0",
                onClick: $setup.setToday
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_CircleFill)
                ]),
                _: 1
              }, 8, ["onClick"])
            ]),
            _: 1
          }),
          vue.createVNode(_component_Col, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_Button, {
                size: "sm",
                tabindex: "4",
                variant: "secondary",
                outline: "",
                class: "border-0",
                onClick: ($event) => $setup.add("month")
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_ChevronRight)
                ]),
                _: 1
              }, 8, ["onClick"])
            ]),
            _: 1
          }),
          vue.createVNode(_component_Col, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_Button, {
                size: "sm",
                tabindex: "5",
                variant: "secondary",
                outline: "",
                class: "border-0",
                onClick: ($event) => $setup.add("year")
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_ChevronDoubleRight)
                ]),
                _: 1
              }, 8, ["onClick"])
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<input tabindex="7"${serverRenderer.ssrRenderAttr("value", $setup.theDate.format("YYYY-MM"))} type="month" class="border-0 text-center"></header><table class="w-100 border"><tr><!--[-->`);
  serverRenderer.ssrRenderList($setup.weekdays, (wd) => {
    _push(`<th class="text-center border">${serverRenderer.ssrInterpolate(wd)}</th>`);
  });
  _push(`<!--]--></tr><!--[-->`);
  serverRenderer.ssrRenderList($setup.theWeeks, (days, week_index) => {
    _push(`<tr>`);
    if (week_index === 0) {
      _push(`<!--[-->`);
      serverRenderer.ssrRenderList(7 - days.length, (pd) => {
        _push(`<td class="text-center border"></td>`);
      });
      _push(`<!--]-->`);
    } else {
      _push(`<!---->`);
    }
    _push(`<!--[-->`);
    serverRenderer.ssrRenderList(days, (d) => {
      _push(`<td class="text-center border">`);
      _push(serverRenderer.ssrRenderComponent(_component_Button, {
        size: "sm",
        tabindex: week_index + 8,
        class: [{ "btn-dark text-white": $setup.isToday(d) }, "border-0 rounded-circle"],
        "active-class": $props.activeClass,
        active: $setup.isSameDay($setup.theDate.format("YYYY-MM") + "-" + d),
        outline: ""
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${serverRenderer.ssrInterpolate(d)}`);
          } else {
            return [
              vue.createTextVNode(vue.toDisplayString(d), 1)
            ];
          }
        }),
        _: 2
      }, _parent));
      _push(`</td>`);
    });
    _push(`<!--]-->`);
    if (week_index === $setup.theWeeks.length - 1) {
      _push(`<!--[-->`);
      serverRenderer.ssrRenderList(7 - days.length, (pd) => {
        _push(`<td class="text-center border"></td>`);
      });
      _push(`<!--]-->`);
    } else {
      _push(`<!---->`);
    }
    _push(`</tr>`);
  });
  _push(`<!--]--></table></div>`);
}
const _sfc_setup$T = _sfc_main$T.setup;
_sfc_main$T.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Calendar.vue");
  return _sfc_setup$T ? _sfc_setup$T(props, ctx) : void 0;
};
var Calendar = /* @__PURE__ */ _export_sfc(_sfc_main$T, [["ssrRender", _sfc_ssrRender$s]]);
const _sfc_main$S = {
  name: "CarouselInner",
  props: {
    tag: makeString("div")
  },
  setup(props, context) {
    return {
      classes: vue.computed(() => [
        "carousel-inner"
      ])
    };
  }
};
function _sfc_ssrRender$r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$S = _sfc_main$S.setup;
_sfc_main$S.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CarouselInner.vue");
  return _sfc_setup$S ? _sfc_setup$S(props, ctx) : void 0;
};
var CarouselInner = /* @__PURE__ */ _export_sfc(_sfc_main$S, [["ssrRender", _sfc_ssrRender$r]]);
const _sfc_main$R = {
  name: "CarouselIndicators",
  props: {
    tag: makeString("div")
  },
  setup(props, context) {
    return {
      classes: vue.computed(() => [
        "carousel-indicators"
      ])
    };
  }
};
function _sfc_ssrRender$q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$R = _sfc_main$R.setup;
_sfc_main$R.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CarouselIndicators.vue");
  return _sfc_setup$R ? _sfc_setup$R(props, ctx) : void 0;
};
var CarouselIndicators = /* @__PURE__ */ _export_sfc(_sfc_main$R, [["ssrRender", _sfc_ssrRender$q]]);
const _sfc_main$Q = {
  name: "Carousel",
  components: { ChevronLeft: icons.ChevronLeft, ChevronRight: icons.ChevronRight, CarouselInner, CarouselIndicators },
  props: {
    tag: makeString("div"),
    slide: makeBoolean(true),
    controlsEnabled: makeBoolean(true),
    indicatorsEnabled: makeBoolean(false)
  },
  setup(props, context) {
    const slides = vue.ref([]);
    vue.provide("registerItem", (item) => slides.value.push(item));
    const direction = vue.ref("start");
    vue.provide("direction", direction);
    const changeSlide = (slideVisibility, next_slide_index, current_index) => {
      slides.value.filter((i) => i.value).forEach((i) => i.value = false);
      if (typeof slideVisibility === "number") {
        slides.value[slideVisibility].value = true;
      } else {
        direction.value = next_slide_index >= current_index ? "start" : "end";
        slideVisibility.value = true;
      }
    };
    const currentSlide = () => slides.value.find((i) => i.value);
    const currentIndex = () => slides.value.indexOf(currentSlide());
    const changeSlideByIndex = (type) => {
      const index2 = currentIndex();
      if (type === "next") {
        changeSlide(index2 + 1 === slides.value.length ? 0 : index2 + 1);
        direction.value = "start";
      } else if (type === "prev") {
        changeSlide(index2 - 1 < 0 ? slides.value.length - 1 : index2 - 1);
        direction.value = "end";
      }
    };
    return {
      slides,
      direction,
      currentIndex: vue.computed(currentIndex),
      changeSlide,
      changeSlideByIndex,
      classes: vue.computed(() => [
        "carousel",
        {
          slide: props.slide
        }
      ])
    };
  }
};
function _sfc_ssrRender$p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_CarouselInner = vue.resolveComponent("CarouselInner");
  const _component_ChevronLeft = vue.resolveComponent("ChevronLeft");
  const _component_ChevronRight = vue.resolveComponent("ChevronRight");
  const _component_CarouselIndicators = vue.resolveComponent("CarouselIndicators");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_CarouselInner, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push3, _parent3, _scopeId2);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "default")
              ];
            }
          }),
          _: 3
        }, _parent2, _scopeId));
        if ($props.controlsEnabled) {
          _push2(`<!--[--><button class="carousel-control-prev" type="button" data-bs-target data-bs-slide="prev"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_ChevronLeft, {
            class: "carousel-control-prev-icon text-black",
            "aria-hidden": "true"
          }, null, _parent2, _scopeId));
          _push2(`<span class="visually-hidden"${_scopeId}>Previous</span></button><button class="carousel-control-next" type="button" data-bs-target data-bs-slide="next"${_scopeId}>`);
          _push2(serverRenderer.ssrRenderComponent(_component_ChevronRight, {
            class: "carousel-control-next-icon text-black",
            "aria-hidden": "true"
          }, null, _parent2, _scopeId));
          _push2(`<span class="visually-hidden"${_scopeId}>Next</span></button><!--]-->`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.indicatorsEnabled) {
          _push2(serverRenderer.ssrRenderComponent(_component_CarouselIndicators, null, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<!--[-->`);
                serverRenderer.ssrRenderList($setup.slides, (indicator, indicator_index) => {
                  _push3(`<button data-bs-target type="button" class="${serverRenderer.ssrRenderClass({ active: indicator.value })}"${serverRenderer.ssrRenderAttr("aria-current", indicator.value)} aria-label="Slide 1"${_scopeId2}></button>`);
                });
                _push3(`<!--]-->`);
              } else {
                return [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($setup.slides, (indicator, indicator_index) => {
                    return vue.openBlock(), vue.createBlock("button", {
                      key: indicator_index,
                      "data-bs-target": "",
                      type: "button",
                      onClick: ($event) => $setup.changeSlide(indicator, indicator_index, $setup.currentIndex),
                      class: { active: indicator.value },
                      "aria-current": indicator.value,
                      "aria-label": "Slide 1"
                    }, null, 10, ["onClick", "aria-current"]);
                  }), 128))
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          vue.createVNode(_component_CarouselInner, null, {
            default: vue.withCtx(() => [
              vue.renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }),
          $props.controlsEnabled ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
            vue.createVNode("button", {
              class: "carousel-control-prev",
              type: "button",
              onClick: ($event) => $setup.changeSlideByIndex("prev"),
              "data-bs-target": "",
              "data-bs-slide": "prev"
            }, [
              vue.createVNode(_component_ChevronLeft, {
                class: "carousel-control-prev-icon text-black",
                "aria-hidden": "true"
              }),
              vue.createVNode("span", { class: "visually-hidden" }, "Previous")
            ], 8, ["onClick"]),
            vue.createVNode("button", {
              class: "carousel-control-next",
              type: "button",
              onClick: ($event) => $setup.changeSlideByIndex("next"),
              "data-bs-target": "",
              "data-bs-slide": "next"
            }, [
              vue.createVNode(_component_ChevronRight, {
                class: "carousel-control-next-icon text-black",
                "aria-hidden": "true"
              }),
              vue.createVNode("span", { class: "visually-hidden" }, "Next")
            ], 8, ["onClick"])
          ], 64)) : vue.createCommentVNode("", true),
          $props.indicatorsEnabled ? (vue.openBlock(), vue.createBlock(_component_CarouselIndicators, { key: 1 }, {
            default: vue.withCtx(() => [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($setup.slides, (indicator, indicator_index) => {
                return vue.openBlock(), vue.createBlock("button", {
                  key: indicator_index,
                  "data-bs-target": "",
                  type: "button",
                  onClick: ($event) => $setup.changeSlide(indicator, indicator_index, $setup.currentIndex),
                  class: { active: indicator.value },
                  "aria-current": indicator.value,
                  "aria-label": "Slide 1"
                }, null, 10, ["onClick", "aria-current"]);
              }), 128))
            ]),
            _: 1
          })) : vue.createCommentVNode("", true)
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$Q = _sfc_main$Q.setup;
_sfc_main$Q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Carousel.vue");
  return _sfc_setup$Q ? _sfc_setup$Q(props, ctx) : void 0;
};
var Carousel = /* @__PURE__ */ _export_sfc(_sfc_main$Q, [["ssrRender", _sfc_ssrRender$p]]);
const _sfc_main$P = {
  name: "CarouselCaption",
  props: {
    tag: makeString("div")
  },
  setup(props, context) {
    return {
      classes: vue.computed(() => [
        "carousel-caption"
      ])
    };
  }
};
function _sfc_ssrRender$o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$P = _sfc_main$P.setup;
_sfc_main$P.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CarouselCaption.vue");
  return _sfc_setup$P ? _sfc_setup$P(props, ctx) : void 0;
};
var CarouselCaption = /* @__PURE__ */ _export_sfc(_sfc_main$P, [["ssrRender", _sfc_ssrRender$o]]);
const _sfc_main$O = {
  name: "CarouselControl"
};
function _sfc_ssrRender$n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
}
const _sfc_setup$O = _sfc_main$O.setup;
_sfc_main$O.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CarouselControl.vue");
  return _sfc_setup$O ? _sfc_setup$O(props, ctx) : void 0;
};
var CarouselControl = /* @__PURE__ */ _export_sfc(_sfc_main$O, [["ssrRender", _sfc_ssrRender$n]]);
const _sfc_main$N = {
  name: "CarouselItem",
  emits: ["slidingStart", "slidingEnd"],
  props: {
    tag: makeString("div"),
    active: makeBoolean(false),
    activeClass: makeString("active")
  },
  setup(props, context) {
    const visible = vue.ref(props.active);
    vue.watch(() => props.active, (v) => visible.value = v);
    vue.watch(visible, (v) => context.emit("update:active", v));
    vue.inject("registerItem")(visible);
    return {
      visible,
      direction: vue.inject("direction"),
      classes: vue.computed(() => [
        "carousel-item"
      ])
    };
  },
  mounted() {
    if (this.visible) {
      this.$el.classList.add(this.activeClass);
    }
  },
  methods: {
    transitionEnd() {
      this.$emit("slidingEnd", this);
      this.$el.classList.remove("carousel-item-start", "carousel-item-end");
      this.$el.classList.remove("carousel-item-next", "carousel-item-prev");
      if (this.visible) {
        this.$el.classList.add(this.activeClass);
      } else {
        this.$el.classList.remove(this.activeClass);
      }
    }
  },
  watch: {
    visible(value) {
      this.$emit("slidingStart", this);
      if (value) {
        this.$el.classList.add("carousel-item-" + (this.direction === "start" ? "next" : "prev"));
      }
      setTimeout(() => this.$el.classList.add("carousel-item-" + this.direction), 0);
    }
  }
};
function _sfc_ssrRender$m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({ class: $setup.classes }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          vue.renderSlot(_ctx.$slots, "default")
        ];
      }
    }),
    _: 3
  }), _parent);
}
const _sfc_setup$N = _sfc_main$N.setup;
_sfc_main$N.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/CarouselItem.vue");
  return _sfc_setup$N ? _sfc_setup$N(props, ctx) : void 0;
};
var CarouselItem = /* @__PURE__ */ _export_sfc(_sfc_main$N, [["ssrRender", _sfc_ssrRender$m]]);
var Tags_vue_vue_type_style_index_0_lang = "";
const _sfc_main$M = {
  name: "Tags",
  components: { Button, Badge, X: icons.X },
  props: {
    tag: makeString("ul"),
    role: makeString("group"),
    tabindex: make([Number, String], -1),
    placeholder: makeString("Add Tag"),
    modelValue: make(Array, []),
    removeOnDelete: makeBoolean(false),
    separator: make(Array, null),
    tagPills: makeBoolean(false),
    tagVariant: makeString("secondary"),
    addButtonSize: makeString("sm"),
    addButtonText: makeString("Add"),
    noAddOnEnter: makeBoolean(false)
  },
  setup(props, context) {
    const model = vue.ref(props.modelValue || []);
    vue.watch(model, (v) => context.emit("update:modelValue", v));
    vue.watch(() => props.modelValue, (v) => model.value = v);
    const inputText = vue.ref(null);
    const addTag = (e) => {
      if ((e.keyCode === 13 || e.which === 13 || e.type === "click") && inputText.value) {
        model.value.push(inputText.value);
        inputText.value = null;
      } else if (props.separator && props.separator.includes(e.key) && inputText.value) {
        model.value.push(inputText.value);
        setTimeout(() => inputText.value = null, 0);
      }
    };
    const backspacePressed = (e) => {
      if (props.removeOnDelete && e.target.selectionStart === 0 && model.value.length) {
        model.value.pop();
      }
    };
    return {
      model,
      inputText,
      addTag,
      backspacePressed,
      classes: vue.computed(() => [
        "wui-tags",
        "d-flex",
        "flex-wrap",
        "ps-1",
        "pe-1",
        "pb-1",
        "pt-0"
      ])
    };
  }
};
function _sfc_ssrRender$l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Badge = vue.resolveComponent("Badge");
  const _component_X = vue.resolveComponent("X");
  const _component_Button = vue.resolveComponent("Button");
  serverRenderer.ssrRenderVNode(_push, vue.createVNode(vue.resolveDynamicComponent($props.tag), vue.mergeProps({
    role: $props.role,
    tabindex: $props.tabindex,
    class: $setup.classes
  }, _attrs), {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        serverRenderer.ssrRenderList($setup.model, (tag, tag_key) => {
          _push2(serverRenderer.ssrRenderComponent(_component_Badge, {
            tag: "li",
            pill: $props.tagPills,
            variant: $props.tagVariant,
            key: tag_key,
            class: "me-1 mt-1 d-inline-flex align-items-center"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate(tag)} `);
                _push3(serverRenderer.ssrRenderComponent(_component_X, { class: "hover:bg-bright" }, null, _parent3, _scopeId2));
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString(tag) + " ", 1),
                  vue.createVNode(_component_X, {
                    class: "hover:bg-bright",
                    onClick: ($event) => $setup.model.splice(tag_key, 1)
                  }, null, 8, ["onClick"])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]--><li class="d-inline-flex flex-grow-1"${_scopeId}><input class="wui-tags-input w-100"${serverRenderer.ssrRenderAttr("placeholder", $props.placeholder)}${serverRenderer.ssrRenderAttr("value", $setup.inputText)}${_scopeId}>`);
        if ($setup.inputText) {
          _push2(serverRenderer.ssrRenderComponent(_component_Button, {
            size: $props.addButtonSize,
            class: "mt-1 py-0"
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${serverRenderer.ssrInterpolate($props.addButtonText)}`);
              } else {
                return [
                  vue.createTextVNode(vue.toDisplayString($props.addButtonText), 1)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</li>`);
      } else {
        return [
          (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($setup.model, (tag, tag_key) => {
            return vue.openBlock(), vue.createBlock(_component_Badge, {
              tag: "li",
              pill: $props.tagPills,
              variant: $props.tagVariant,
              key: tag_key,
              class: "me-1 mt-1 d-inline-flex align-items-center"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(vue.toDisplayString(tag) + " ", 1),
                vue.createVNode(_component_X, {
                  class: "hover:bg-bright",
                  onClick: ($event) => $setup.model.splice(tag_key, 1)
                }, null, 8, ["onClick"])
              ]),
              _: 2
            }, 1032, ["pill", "variant"]);
          }), 128)),
          vue.createVNode("li", { class: "d-inline-flex flex-grow-1" }, [
            vue.withDirectives(vue.createVNode("input", {
              class: "wui-tags-input w-100",
              placeholder: $props.placeholder,
              "onUpdate:modelValue": ($event) => $setup.inputText = $event,
              onKeyup: vue.withKeys($setup.backspacePressed, ["delete"]),
              onKeypress: $setup.addTag
            }, null, 40, ["placeholder", "onUpdate:modelValue", "onKeyup", "onKeypress"]), [
              [
                vue.vModelText,
                $setup.inputText,
                void 0,
                { trim: true }
              ]
            ]),
            $setup.inputText ? (vue.openBlock(), vue.createBlock(_component_Button, {
              key: 0,
              onClick: $setup.addTag,
              size: $props.addButtonSize,
              class: "mt-1 py-0"
            }, {
              default: vue.withCtx(() => [
                vue.createTextVNode(vue.toDisplayString($props.addButtonText), 1)
              ]),
              _: 1
            }, 8, ["onClick", "size"])) : vue.createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }), _parent);
}
const _sfc_setup$M = _sfc_main$M.setup;
_sfc_main$M.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../../../../wovoui/src/components/Tags.vue");
  return _sfc_setup$M ? _sfc_setup$M(props, ctx) : void 0;
};
var Tags = /* @__PURE__ */ _export_sfc(_sfc_main$M, [["ssrRender", _sfc_ssrRender$l]]);
var components = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  Accordion,
  AccordionBody,
  AccordionHeader,
  AccordionItem,
  Alert,
  AlertHeading,
  AlertLink,
  Badge,
  BreadcrumbItem,
  Breadcrumb,
  Button,
  ButtonClose,
  ButtonGroup,
  ButtonToolbar,
  Card,
  CardBody,
  CardFooter,
  CardGroup,
  CardHeader,
  CardImg,
  CardLink,
  CardSubTitle,
  CardText,
  CardTitle,
  Checkbox,
  CheckboxGroup,
  Col,
  Collapse,
  Container,
  DataTable,
  Datepicker,
  Dropdown,
  DropdownButton,
  DropdownDivider,
  DropdownItem,
  DropdownMenu,
  FormGroup,
  FormLabel,
  Grid,
  GridCol,
  Highlight,
  Icon,
  Input,
  InputGroup,
  InputGroupText,
  Link,
  ListGroup,
  ListGroupItem,
  Modal,
  ModalBody,
  ModalFooter,
  ModalHeader,
  ModalTitle,
  Nav,
  Navbar,
  NavbarBrand,
  NavbarNav,
  NavbarToggler,
  NavItem,
  NavItemDropdown,
  NavLink,
  OffCanvas,
  OffCanvasBody,
  OffCanvasHeader,
  OffCanvasTitle,
  Popover,
  Radio,
  Range,
  Rating,
  Row,
  Select,
  SpinButton,
  Tab,
  Table,
  Tabs,
  TBody,
  Th,
  Td,
  Textarea,
  TFoot,
  THead,
  Tr,
  Datatable: DataTable,
  Calendar,
  Carousel,
  CarouselCaption,
  CarouselControl,
  CarouselIndicators,
  CarouselInner,
  CarouselItem,
  Tags
});
var clientAppEnhance4 = defineClientAppEnhance(async ({ app, router, siteData: siteData2 }) => {
  for (let component of Object.entries(components)) {
    app.component("W" + component[0], component[1]);
  }
  for (let icon of Object.entries(icons__namespace)) {
    app.component("Icon" + icon[0], icon[1]);
  }
});
const clientAppEnhances = [
  clientAppEnhance0,
  clientAppEnhance1,
  clientAppEnhance2,
  clientAppEnhance3,
  clientAppEnhance4
];
function r(r2, e, n) {
  var i, t, o;
  e === void 0 && (e = 50), n === void 0 && (n = {});
  var a = (i = n.isImmediate) != null && i, u = (t = n.callback) != null && t, c = n.maxWait, v = Date.now(), l = [];
  function f() {
    if (c !== void 0) {
      var r3 = Date.now() - v;
      if (r3 + e >= c)
        return c - r3;
    }
    return e;
  }
  var d = function() {
    var e2 = [].slice.call(arguments), n2 = this;
    return new Promise(function(i2, t2) {
      var c2 = a && o === void 0;
      if (o !== void 0 && clearTimeout(o), o = setTimeout(function() {
        if (o = void 0, v = Date.now(), !a) {
          var i3 = r2.apply(n2, e2);
          u && u(i3), l.forEach(function(r3) {
            return (0, r3.resolve)(i3);
          }), l = [];
        }
      }, f()), c2) {
        var d2 = r2.apply(n2, e2);
        return u && u(d2), i2(d2);
      }
      l.push({ resolve: i2, reject: t2 });
    });
  };
  return d.cancel = function(r3) {
    o !== void 0 && clearTimeout(o), l.forEach(function(e2) {
      return (0, e2.reject)(r3);
    }), l = [];
  }, d;
}
const getScrollTop = () => window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
const scrollToTop = () => window.scrollTo({ top: 0, behavior: "smooth" });
var vars$1 = "";
var backToTop = "";
const BackToTop = vue.defineComponent({
  name: "BackToTop",
  setup() {
    const scrollTop = vue.ref(0);
    const show = vue.computed(() => scrollTop.value > 300);
    const onScroll = r(() => {
      scrollTop.value = getScrollTop();
    }, 100);
    vue.onMounted(() => {
      scrollTop.value = getScrollTop();
      window.addEventListener("scroll", () => onScroll());
    });
    const backToTopEl = vue.h("div", { class: "back-to-top", onClick: scrollToTop });
    return () => vue.h(vue.Transition, {
      name: "back-to-top"
    }, {
      default: () => show.value ? backToTopEl : null
    });
  }
});
const clientAppRootComponents = [
  BackToTop
];
var clientAppSetup0 = defineClientAppSetup(() => {
  return;
});
var vars = "";
var nprogress = "";
const useNprogress = () => {
  vue.onMounted(() => {
    const router = vueRouter.useRouter();
    const loadedPages = new Set();
    loadedPages.add(router.currentRoute.value.path);
    nprogress__namespace.configure({ showSpinner: false });
    router.beforeEach((to) => {
      if (!loadedPages.has(to.path)) {
        nprogress__namespace.start();
      }
    });
    router.afterEach((to) => {
      loadedPages.add(to.path);
      nprogress__namespace.done();
    });
  });
};
var clientAppSetup1 = defineClientAppSetup(() => {
  useNprogress();
});
var clientAppSetup2 = defineClientAppSetup(() => {
  setupDarkMode();
  setupSidebarItems();
});
const clientAppSetups = [
  clientAppSetup0,
  clientAppSetup1,
  clientAppSetup2
];
const routeItems = [
  ["v-8daa1a0e", "/", { "title": "Introduction" }, ["/index.html", "/index.md"]],
  ["v-caf798c0", "/accordion/", { "title": "Accordion" }, ["/accordion/index.html", "/accordion/index.md"]],
  ["v-3352235f", "/alerts/", { "title": "Alerts" }, ["/alerts/index.html", "/alerts/index.md"]],
  ["v-555fbfe6", "/badges/", { "title": "Badges" }, ["/badges/index.html", "/badges/index.md"]],
  ["v-76a6e250", "/breadcrumbs/", { "title": "Breadcrumbs" }, ["/breadcrumbs/index.html", "/breadcrumbs/index.md"]],
  ["v-62839e5e", "/buttons/groups.html", { "title": "Button Groups" }, ["/buttons/groups", "/buttons/groups.md"]],
  ["v-d6c3ca72", "/buttons/", { "title": "Buttons" }, ["/buttons/index.html", "/buttons/index.md"]],
  ["v-96167c50", "/calendar/", { "title": "Calendar" }, ["/calendar/index.html", "/calendar/index.md"]],
  ["v-78191965", "/cards/", { "title": "Cards" }, ["/cards/index.html", "/cards/index.md"]],
  ["v-03d41ff6", "/carousel/", { "title": "Carousel" }, ["/carousel/index.html", "/carousel/index.md"]],
  ["v-6e85a749", "/collapse/", { "title": "Collapse" }, ["/collapse/index.html", "/collapse/index.md"]],
  ["v-2394e1a6", "/dropdowns/", { "title": "Dropdown" }, ["/dropdowns/index.html", "/dropdowns/index.md"]],
  ["v-d02a7d16", "/dropdowns/input.html", { "title": "Form Input" }, ["/dropdowns/input", "/dropdowns/input.md"]],
  ["v-2643f7a4", "/form/checkbox.html", { "title": "Form Checkbox" }, ["/form/checkbox", "/form/checkbox.md"]],
  ["v-9d060068", "/form/group.html", { "title": "Form Group" }, ["/form/group", "/form/group.md"]],
  ["v-14948c92", "/form/", { "title": "Form" }, ["/form/index.html", "/form/index.md"]],
  ["v-909a953e", "/form/input.html", { "title": "Form Input" }, ["/form/input", "/form/input.md"]],
  ["v-64ecefd0", "/form/radio.html", { "title": "Form Radio" }, ["/form/radio", "/form/radio.md"]],
  ["v-b3c164ec", "/form/rating.html", { "title": "Form Rating" }, ["/form/rating", "/form/rating.md"]],
  ["v-ca67e4ea", "/form/select.html", { "title": "Form Select" }, ["/form/select", "/form/select.md"]],
  ["v-0087f093", "/form/spinbutton.html", { "title": "Spin Button" }, ["/form/spinbutton", "/form/spinbutton.md"]],
  ["v-2ecfa7e4", "/form/tags.html", { "title": "Form Tags" }, ["/form/tags", "/form/tags.md"]],
  ["v-ccdc4da0", "/getting-started/", { "title": "Getting Started" }, ["/getting-started/index.html", "/getting-started/index.md"]],
  ["v-fb1db6e4", "/icons/", { "title": "Bootstrap Icons" }, ["/icons/index.html", "/icons/index.md"]],
  ["v-366a25f4", "/list-group/", { "title": "List Group" }, ["/list-group/index.html", "/list-group/index.md"]],
  ["v-01e68820", "/buttons/toolbars/", { "title": "Button Toolbar" }, ["/buttons/toolbars/index.html", "/buttons/toolbars/index.md"]],
  ["v-3706649a", "/404.html", { "title": "" }, ["/404"]]
];
const pagesRoutes = routeItems.reduce((result, [name, path, meta, redirects]) => {
  result.push({
    name,
    path,
    component: Vuepress,
    meta
  }, ...redirects.map((item) => ({
    path: item,
    redirect: path
  })));
  return result;
}, [
  {
    name: "404",
    path: "/:catchAll(.*)",
    component: Vuepress
  }
]);
const provideGlobalComputed = (app, router) => {
  const routeLocale = vue.computed(() => resolveRouteLocale(siteData.value.locales, router.currentRoute.value.path));
  const siteLocaleData = vue.computed(() => resolveSiteLocaleData(siteData.value, routeLocale.value));
  const pageFrontmatter = vue.computed(() => resolvePageFrontmatter(pageData.value));
  const pageHeadTitle = vue.computed(() => resolvePageHeadTitle(pageData.value, siteLocaleData.value));
  const pageHead = vue.computed(() => resolvePageHead(pageHeadTitle.value, pageFrontmatter.value, siteLocaleData.value));
  const pageLang = vue.computed(() => resolvePageLang(pageData.value));
  app.provide(routeLocaleSymbol, routeLocale);
  app.provide(siteLocaleDataSymbol, siteLocaleData);
  app.provide(pageFrontmatterSymbol, pageFrontmatter);
  app.provide(pageHeadTitleSymbol, pageHeadTitle);
  app.provide(pageHeadSymbol, pageHead);
  app.provide(pageLangSymbol, pageLang);
  Object.defineProperties(app.config.globalProperties, {
    $frontmatter: { get: () => pageFrontmatter.value },
    $headTitle: { get: () => pageHeadTitle.value },
    $lang: { get: () => pageLang.value },
    $page: { get: () => pageData.value },
    $routeLocale: { get: () => routeLocale.value },
    $site: { get: () => siteData.value },
    $siteLocale: { get: () => siteLocaleData.value },
    $withBase: { get: () => withBase }
  });
};
const registerGlobalComponents = (app) => {
  app.component("ClientOnly", ClientOnly);
  app.component("Content", Content);
};
const appCreator = vue.createSSRApp;
const historyCreator = vueRouter.createMemoryHistory;
const createVueApp = async () => {
  const app = appCreator({
    name: "VuepressApp",
    setup() {
      setupUpdateHead();
      for (const clientAppSetup of clientAppSetups) {
        clientAppSetup();
      }
      return () => [
        vue.h(vueRouter.RouterView),
        ...clientAppRootComponents.map((comp) => vue.h(comp))
      ];
    }
  });
  const router = vueRouter.createRouter({
    history: historyCreator(removeEndingSlash(siteData.value.base)),
    routes: pagesRoutes,
    scrollBehavior: (to, from, savedPosition) => {
      if (savedPosition)
        return savedPosition;
      if (to.hash)
        return { el: to.hash };
      return { top: 0 };
    }
  });
  router.beforeResolve(async (to, from) => {
    var _a;
    if (to.path !== from.path || from === vueRouter.START_LOCATION) {
      [pageData.value] = await Promise.all([
        resolvePageData(to.name),
        (_a = pagesComponents[to.name]) === null || _a === void 0 ? void 0 : _a.__asyncLoader()
      ]);
    }
  });
  provideGlobalComputed(app, router);
  registerGlobalComponents(app);
  for (const clientAppEnhance of clientAppEnhances) {
    await clientAppEnhance({ app, router, siteData });
  }
  app.use(router);
  return {
    app,
    router
  };
};
const _sfc_main$L = {};
function _sfc_ssrRender$k(_ctx, _push, _parent, _attrs) {
  const _component_ExternalLinkIcon = vue.resolveComponent("ExternalLinkIcon");
  const _component_router_link = vue.resolveComponent("router-link");
  _push(`<!--[--><h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><p><a href="https://github.com/wovosoft/wovoui" target="_blank" rel="noopener noreferrer">wovoui`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> is a vuejs based components library. It is made on top of <a href="https://getbootstrap.com/" target="_blank" rel="noopener noreferrer">Bootstrap 5&#39;s`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> designs. The JavaScript functionality of Bootstrap is done by <a href="https://v3.vuejs.org/" target="_blank" rel="noopener noreferrer">Vuejs`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>. Some extra components are added to the library too.</p><p>Docs generated with <a href="https://v2.vuepress.vuejs.org/" target="_blank" rel="noopener noreferrer">vuepress2`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> and proudly hosted on <a href="https://www.netlify.com/" target="_blank" rel="noopener noreferrer">Netlify`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>.</p><div class="text-center my-5">`);
  _push(serverRenderer.ssrRenderComponent(_component_router_link, {
    class: "btn btn-primary text-decoration-none",
    to: "/getting-started"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Get Started`);
      } else {
        return [
          vue.createTextVNode("Get Started")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<a class="ms-2 btn btn-primary text-decoration-none" href="https://github.com/wovosoft/wovouidocs" target="_blank">Github</a></div><p><a href="https://github.com/wovosoft/wovoui" target="_blank" rel="noopener noreferrer">wovoui`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> is an open sourced project. It is free &amp; will be completely free forever. Anyone can use it for their personal &amp; business projects. If you like the project or if you think it is going to be a helpful project don&#39;t forget to inform us.</p><h2 id="developer-information" tabindex="-1"><a class="header-anchor" href="#developer-information" aria-hidden="true">#</a> Developer Information</h2><p><a href="https://github.com/wovosoft/wovoui" target="_blank" rel="noopener noreferrer">wovoui`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> is developed by <a href="https://github.com/wovosoft" target="_blank" rel="noopener noreferrer">Narayan Adhikary`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> at <a href="https://wovosoft.com" target="_blank" rel="noopener noreferrer">WovoSoft`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>. If You have any kind of question or suggestion regarding the project please feel free to ask here <a href="mailto:wovosoft@gmail.com">wovosoft@gmail.com</a></p><h2 id="we-are-seeking-for-sponsor" tabindex="-1"><a class="header-anchor" href="#we-are-seeking-for-sponsor" aria-hidden="true">#</a> We are seeking for Sponsor</h2><p>We know the project is still in it&#39;s very early phase. But we are trying to make it a big project. We need sponsor for domain &amp; hosting. If anyone is interested please let us know at <a href="mailto:wovosoft@gmail.com">wovosoft@gmail.com</a>.</p><!--]-->`);
}
const _sfc_setup$L = _sfc_main$L.setup;
_sfc_main$L.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/index.html.vue");
  return _sfc_setup$L ? _sfc_setup$L(props, ctx) : void 0;
};
var index_html$G = /* @__PURE__ */ _export_sfc(_sfc_main$L, [["ssrRender", _sfc_ssrRender$k]]);
var index_html$H = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$G
});
const _sfc_main$K = {};
function _sfc_ssrRender$j(_ctx, _push, _parent, _attrs) {
  const _component_WAccordion = vue.resolveComponent("WAccordion");
  const _component_WAccordionItem = vue.resolveComponent("WAccordionItem");
  const _component_WButtonGroup = vue.resolveComponent("WButtonGroup");
  const _component_WButton = vue.resolveComponent("WButton");
  _push(`<!--[--><h1 id="accordion" tabindex="-1"><a class="header-anchor" href="#accordion" aria-hidden="true">#</a> Accordion</h1><p>The accordion uses <code>Collapse</code> component internally to make it collapsible. To render an accordion that\u2019s expanded, add the <code>.open</code> class on the <code>.accordion</code>.</p><h2 id="default-accordion" tabindex="-1"><a class="header-anchor" href="#default-accordion" aria-hidden="true">#</a> Default Accordion</h2><p>Click the accordions below to expand/collapse the accordion content.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WAccordion, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        serverRenderer.ssrRenderList(5, (i) => {
          _push2(serverRenderer.ssrRenderComponent(_component_WAccordionItem, {
            header: "Accordion Item #" + i
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<strong${_scopeId2}>This is the first item&#39;s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the <code${_scopeId2}>.accordion-body</code>, though the transition does limit overflow. `);
              } else {
                return [
                  vue.createVNode("strong", null, "This is the first item's accordion body."),
                  vue.createTextVNode(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),
                  vue.createVNode("code", null, ".accordion-body"),
                  vue.createTextVNode(", though the transition does limit overflow. ")
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
      } else {
        return [
          (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(5, (i) => {
            return vue.createVNode(_component_WAccordionItem, {
              header: "Accordion Item #" + i
            }, {
              default: vue.withCtx(() => [
                vue.createVNode("strong", null, "This is the first item's accordion body."),
                vue.createTextVNode(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the "),
                vue.createVNode("code", null, ".accordion-body"),
                vue.createTextVNode(", though the transition does limit overflow. ")
              ]),
              _: 2
            }, 1032, ["header"]);
          }), 64))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Accordion</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AccordionItem</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in 5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Accordion Item #<span class="token punctuation">&#39;</span>+i<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is shown by default, until the collapse plugin adds
    the appropriate classes that we use to style each element. These classes control the overall appearance,
    as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or
    overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the
    \`.accordion-body\`, though the transition does limit overflow.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AccordionItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Accordion</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="flush" tabindex="-1"><a class="header-anchor" href="#flush" aria-hidden="true">#</a> Flush</h2><p>Add prop <code>flush</code> to remove the default <code>background-color</code>, some <code>borders</code>, and some rounded <code>corners</code> to render accordions <code>edge-to-edge</code> with their parent container.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WAccordion, { flush: "" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        serverRenderer.ssrRenderList(5, (i) => {
          _push2(serverRenderer.ssrRenderComponent(_component_WAccordionItem, {
            header: "Accordion Item # " + i
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<strong${_scopeId2}>This is the first item&#39;s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the \`.accordion-body\`, though the transition does limit overflow. `);
              } else {
                return [
                  vue.createVNode("strong", null, "This is the first item's accordion body."),
                  vue.createTextVNode(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the `.accordion-body`, though the transition does limit overflow. ")
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
      } else {
        return [
          (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(5, (i) => {
            return vue.createVNode(_component_WAccordionItem, {
              header: "Accordion Item # " + i
            }, {
              default: vue.withCtx(() => [
                vue.createVNode("strong", null, "This is the first item's accordion body."),
                vue.createTextVNode(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the `.accordion-body`, though the transition does limit overflow. ")
              ]),
              _: 2
            }, 1032, ["header"]);
          }), 64))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Accordion</span> <span class="token attr-name">flush</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AccordionItem</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in 5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Accordion Item # <span class="token punctuation">&#39;</span>+i<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is shown by default, until the collapse plugin adds
    the appropriate classes that we use to style each element. These classes control the overall appearance,
    as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or
    overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the
    \`.accordion-body\`, though the transition does limit overflow.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AccordionItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Accordion</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="always-open" tabindex="-1"><a class="header-anchor" href="#always-open" aria-hidden="true">#</a> Always open</h2><p>Add prop <code>always-open</code> to the accordion itself to stay open its child items.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WAccordion, { "always-open": "" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        serverRenderer.ssrRenderList(5, (i) => {
          _push2(serverRenderer.ssrRenderComponent(_component_WAccordionItem, {
            header: "Accordion Item # " + i
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<strong${_scopeId2}>This is the first item&#39;s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the \`.accordion-body\`, though the transition does limit overflow. `);
              } else {
                return [
                  vue.createVNode("strong", null, "This is the first item's accordion body."),
                  vue.createTextVNode(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the `.accordion-body`, though the transition does limit overflow. ")
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
      } else {
        return [
          (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(5, (i) => {
            return vue.createVNode(_component_WAccordionItem, {
              header: "Accordion Item # " + i
            }, {
              default: vue.withCtx(() => [
                vue.createVNode("strong", null, "This is the first item's accordion body."),
                vue.createTextVNode(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the `.accordion-body`, though the transition does limit overflow. ")
              ]),
              _: 2
            }, 1032, ["header"]);
          }), 64))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Accordion</span> <span class="token attr-name">always-open</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AccordionItem</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in 5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Accordion Item # <span class="token punctuation">&#39;</span>+i<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is shown by default, until the collapse plugin adds
    the appropriate classes that we use to style each element. These classes control the overall appearance,
    as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or
    overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the
    \`.accordion-body\`, though the transition does limit overflow.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AccordionItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Accordion</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="openall-collapseall-toggleall-exposed-methods" tabindex="-1"><a class="header-anchor" href="#openall-collapseall-toggleall-exposed-methods" aria-hidden="true">#</a> <code>openAll</code>, <code>collapseAll</code>, <code>toggleAll</code> exposed methods</h2><p><code>&lt;Accordion&gt;</code> component has few exposed methods to toggle/collapse/open it&#39;s children.</p><ul><li>openAll</li><li>collapseAll</li><li>toggleAll</li></ul>`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { class: "mb-3" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Open All`);
            } else {
              return [
                vue.createTextVNode("Open All")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Collapse All`);
            } else {
              return [
                vue.createTextVNode("Collapse All")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Toggle All`);
            } else {
              return [
                vue.createTextVNode("Toggle All")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButton, {
            onClick: ($event) => _ctx.$refs.acc.openAll()
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Open All")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_WButton, {
            onClick: ($event) => _ctx.$refs.acc.collapseAll()
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Collapse All")
            ]),
            _: 1
          }, 8, ["onClick"]),
          vue.createVNode(_component_WButton, {
            onClick: ($event) => _ctx.$refs.acc.toggleAll()
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Toggle All")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WAccordion, {
    ref: "acc",
    "always-open": ""
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        serverRenderer.ssrRenderList(5, (i) => {
          _push2(serverRenderer.ssrRenderComponent(_component_WAccordionItem, {
            header: "Accordion Item # " + i
          }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<strong${_scopeId2}>This is the first item&#39;s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the \`.accordion-body\`, though the transition does limit overflow. `);
              } else {
                return [
                  vue.createVNode("strong", null, "This is the first item's accordion body."),
                  vue.createTextVNode(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the `.accordion-body`, though the transition does limit overflow. ")
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
      } else {
        return [
          (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(5, (i) => {
            return vue.createVNode(_component_WAccordionItem, {
              header: "Accordion Item # " + i
            }, {
              default: vue.withCtx(() => [
                vue.createVNode("strong", null, "This is the first item's accordion body."),
                vue.createTextVNode(" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the `.accordion-body`, though the transition does limit overflow. ")
              ]),
              _: 2
            }, 1032, ["header"]);
          }), 64))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$refs.acc.openAll()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Open All<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$refs.acc.collapseAll()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Collapse All<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$refs.acc.toggleAll()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Toggle All<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Accordion</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>acc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">always-open</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AccordionItem</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>i in 5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Accordion Item # <span class="token punctuation">&#39;</span>+i<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>This is the first item&#39;s accordion body.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> It is shown by default, until the collapse plugin
            adds the appropriate classes that we use to style each element. These classes control the overall
            appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom
            CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the
            \`.accordion-body\`, though the transition does limit overflow.
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AccordionItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Accordion</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>ButtonGroup<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Accordion<span class="token punctuation">,</span> AccordionItem<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@wovosoft/wovoui&quot;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="modelvalue" tabindex="-1"><a class="header-anchor" href="#modelvalue" aria-hidden="true">#</a> <code>modelValue</code></h2><p>Coming Later...</p><!--]-->`);
}
const _sfc_setup$K = _sfc_main$K.setup;
_sfc_main$K.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/accordion/index.html.vue");
  return _sfc_setup$K ? _sfc_setup$K(props, ctx) : void 0;
};
var index_html$E = /* @__PURE__ */ _export_sfc(_sfc_main$K, [["ssrRender", _sfc_ssrRender$j]]);
var index_html$F = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$E
});
const _sfc_main$J = {
  __ssrInlineRender: true,
  setup(__props) {
    const one = vue.ref(true);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_WAlert = vue.resolveComponent("WAlert");
      const _component_WButton = vue.resolveComponent("WButton");
      _push(`<!--[--><h1 id="alerts" tabindex="-1"><a class="header-anchor" href="#alerts" aria-hidden="true">#</a> Alerts</h1><p>Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.</p><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><!--[-->`);
      serverRenderer.ssrRenderList(["primary", "secondary", "success", "danger", "info", "light", "dark"], (v) => {
        _push(serverRenderer.ssrRenderComponent(_component_WAlert, {
          variant: v,
          show: ""
        }, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` A simple ${serverRenderer.ssrInterpolate(v)} alert\u2014check it out! `);
            } else {
              return [
                vue.createTextVNode(" A simple " + vue.toDisplayString(v) + " alert\u2014check it out! ", 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v in [<span class="token punctuation">&#39;</span>primary<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>secondary<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>success<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>danger<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>info<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>light<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>dark<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show</span><span class="token punctuation">&gt;</span></span>
A simple {{v}} alert\u2014check it out!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="dismissible-alert" tabindex="-1"><a class="header-anchor" href="#dismissible-alert" aria-hidden="true">#</a> Dismissible Alert</h2><!--[-->`);
      serverRenderer.ssrRenderList(["primary", "secondary", "success", "danger", "info", "light", "dark"], (v) => {
        _push(serverRenderer.ssrRenderComponent(_component_WAlert, {
          variant: v,
          dismissible: "",
          show: ""
        }, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` A simple ${serverRenderer.ssrInterpolate(v)} alert\u2014check it out! `);
            } else {
              return [
                vue.createTextVNode(" A simple " + vue.toDisplayString(v) + " alert\u2014check it out! ", 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v in [<span class="token punctuation">&#39;</span>primary<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>secondary<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>success<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>danger<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>info<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>light<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>dark<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dismissible</span> <span class="token attr-name">show</span><span class="token punctuation">&gt;</span></span>
A simple {{v}} alert\u2014check it out!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="auto-dismiss" tabindex="-1"><a class="header-anchor" href="#auto-dismiss" aria-hidden="true">#</a> Auto Dismiss</h2><p><code>&lt;Alert&gt;</code>s can be automatically dismissed by using <code>countdown</code> prop. Value for <code>countdown</code> prop should be the number of seconds of visibility, after the defined period in seconds, the <code>&lt;Aler&gt;</code> will be dismissed automatically.</p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WButton, null, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Show Again`);
          } else {
            return [
              vue.createTextVNode("Show Again")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--[-->`);
      serverRenderer.ssrRenderList(["primary", "secondary", "success", "danger", "info", "light", "dark"], (v) => {
        _push(serverRenderer.ssrRenderComponent(_component_WAlert, {
          variant: v,
          countdown: 10,
          modelValue: one.value,
          "onUpdate:modelValue": ($event) => one.value = $event,
          dismissible: ""
        }, {
          default: vue.withCtx(({ countdown, timeoutNow }, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(` Countdown: ${serverRenderer.ssrInterpolate(countdown)} , Timeout: ${serverRenderer.ssrInterpolate(timeoutNow)}`);
            } else {
              return [
                vue.createTextVNode(" Countdown: " + vue.toDisplayString(countdown) + " , Timeout: " + vue.toDisplayString(timeoutNow), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v in [<span class="token punctuation">&#39;</span>primary<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>secondary<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>success<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>danger<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>info<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>light<span class="token punctuation">&#39;</span>,<span class="token punctuation">&#39;</span>dark<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">:variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">:countdown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">dismissible</span> <span class="token attr-name">show</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{countdown,timeoutNow}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Countdown: {{countdown}} , Timeout: {{timeoutNow}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="countdown-step" tabindex="-1"><a class="header-anchor" href="#countdown-step" aria-hidden="true">#</a> Countdown step</h2><p>Typically, countdown step is 1 second. It can be changed by setting value for the prop <code>countdownStep</code>.</p><h2 id="scoped-slot-support" tabindex="-1"><a class="header-anchor" href="#scoped-slot-support" aria-hidden="true">#</a> Scoped Slot Support</h2><p><code>countdown</code> &amp; <code>timeoutNow</code> props and <code>show()</code>, <code>hide()</code> &amp; <code>toggle()</code> methods can be accessed in default slots scope.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">dismissible</span> <span class="token attr-name">show</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{countdown,timeoutNow,show,hide,toggle}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Countdown: {{countdown}} , Timeout: {{timeoutNow}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="exposed-methods" tabindex="-1"><a class="header-anchor" href="#exposed-methods" aria-hidden="true">#</a> Exposed Methods</h2><p><code>show()</code>, <code>hide()</code> &amp; <code>toggle()</code> methods are exposed to the parent components. So, by using refs these methods of an <code>&lt;Alert&gt;</code> component can be accessed.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">dismissible</span> <span class="token attr-name">show</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert_ref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        I am an alert box.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>Alert<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@wovosoft/wovoui&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>Alert<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>alert_ref<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>alert_ref<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>alert_ref<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**
         * Check above three expressions.
         */</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><ul><li><code>dismisssed</code> : emits with current state when <code>&lt;Alert&gt;</code> is dismissed.</li><li><code>countdown</code> : emits with current <code>timeoutNow</code> value, when <code>timeoutNow</code> value is decreased.</li></ul><!--]-->`);
    };
  }
};
const _sfc_setup$J = _sfc_main$J.setup;
_sfc_main$J.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/alerts/index.html.vue");
  return _sfc_setup$J ? _sfc_setup$J(props, ctx) : void 0;
};
var index_html$D = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main$J
});
const _sfc_main$I = {};
function _sfc_ssrRender$i(_ctx, _push, _parent, _attrs) {
  const _component_WBadge = vue.resolveComponent("WBadge");
  const _component_WButton = vue.resolveComponent("WButton");
  const _component_WRow = vue.resolveComponent("WRow");
  const _component_WCol = vue.resolveComponent("WCol");
  _push(`<!--[--><h1 id="badges" tabindex="-1"><a class="header-anchor" href="#badges" aria-hidden="true">#</a> Badges</h1><p>Documentation and examples for badges, our small count and labeling component.</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Badges scale to match the size of the immediate parent element by using relative font sizing and em units. As of v5, badges no longer have focus or hover styles for links.</p><div class="border p-2"><h1>Example heading `);
  _push(serverRenderer.ssrRenderComponent(_component_WBadge, { variant: "secondary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New`);
      } else {
        return [
          vue.createTextVNode("New")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</h1><h2>Example heading `);
  _push(serverRenderer.ssrRenderComponent(_component_WBadge, { variant: "secondary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New`);
      } else {
        return [
          vue.createTextVNode("New")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</h2><h3>Example heading `);
  _push(serverRenderer.ssrRenderComponent(_component_WBadge, { variant: "secondary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New`);
      } else {
        return [
          vue.createTextVNode("New")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</h3><h4>Example heading `);
  _push(serverRenderer.ssrRenderComponent(_component_WBadge, { variant: "secondary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New`);
      } else {
        return [
          vue.createTextVNode("New")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</h4><h5>Example heading `);
  _push(serverRenderer.ssrRenderComponent(_component_WBadge, { variant: "secondary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New`);
      } else {
        return [
          vue.createTextVNode("New")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</h5><h6>Example heading `);
  _push(serverRenderer.ssrRenderComponent(_component_WBadge, { variant: "secondary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`New`);
      } else {
        return [
          vue.createTextVNode("New")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</h6></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border p-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Example heading
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>New<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Example heading
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>New<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Example heading
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>New<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Example heading
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>New<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">&gt;</span></span>Example heading
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>New<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">&gt;</span></span>Example heading
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>New<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="buttons" tabindex="-1"><a class="header-anchor" href="#buttons" aria-hidden="true">#</a> Buttons</h2><p>Badges can be used as part of links or buttons to provide a counter.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Notifications `);
        _push2(serverRenderer.ssrRenderComponent(_component_WBadge, { variant: "secondary" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`4`);
            } else {
              return [
                vue.createTextVNode("4")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createTextVNode(" Notifications "),
          vue.createVNode(_component_WBadge, { variant: "secondary" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("4")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
Notifications
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="positioned" tabindex="-1"><a class="header-anchor" href="#positioned" aria-hidden="true">#</a> Positioned</h2><p>Badges can be positioned in different corners depending on its parent. Use values <code>top-right</code>, <code>top-left</code>, <code>bottom-right</code> or <code>bottom-left</code> for <code>position</code> property.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WRow, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WCol, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "primary",
                class: "position-relative"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Inbox `);
                    _push4(serverRenderer.ssrRenderComponent(_component_WBadge, {
                      variant: "danger",
                      pill: "",
                      position: "top-right"
                    }, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(` 99+ <span class="visually-hidden"${_scopeId4}>unread messages</span>`);
                        } else {
                          return [
                            vue.createTextVNode(" 99+ "),
                            vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createTextVNode(" Inbox "),
                      vue.createVNode(_component_WBadge, {
                        variant: "danger",
                        pill: "",
                        position: "top-right"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(" 99+ "),
                          vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, {
                  variant: "primary",
                  class: "position-relative"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Inbox "),
                    vue.createVNode(_component_WBadge, {
                      variant: "danger",
                      pill: "",
                      position: "top-right"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" 99+ "),
                        vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WCol, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "primary",
                class: "position-relative"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Inbox `);
                    _push4(serverRenderer.ssrRenderComponent(_component_WBadge, {
                      variant: "danger",
                      pill: "",
                      position: "top-left"
                    }, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(` 99+ <span class="visually-hidden"${_scopeId4}>unread messages</span>`);
                        } else {
                          return [
                            vue.createTextVNode(" 99+ "),
                            vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createTextVNode(" Inbox "),
                      vue.createVNode(_component_WBadge, {
                        variant: "danger",
                        pill: "",
                        position: "top-left"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(" 99+ "),
                          vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, {
                  variant: "primary",
                  class: "position-relative"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Inbox "),
                    vue.createVNode(_component_WBadge, {
                      variant: "danger",
                      pill: "",
                      position: "top-left"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" 99+ "),
                        vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WCol, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, {
                variant: "primary",
                class: "position-relative"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Inbox "),
                  vue.createVNode(_component_WBadge, {
                    variant: "danger",
                    pill: "",
                    position: "top-right"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" 99+ "),
                      vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WCol, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, {
                variant: "primary",
                class: "position-relative"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Inbox "),
                  vue.createVNode(_component_WBadge, {
                    variant: "danger",
                    pill: "",
                    position: "top-left"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" 99+ "),
                      vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WRow, { class: "mt-5" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WCol, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "primary",
                class: "position-relative"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Inbox `);
                    _push4(serverRenderer.ssrRenderComponent(_component_WBadge, {
                      variant: "danger",
                      pill: "",
                      position: "bottom-right"
                    }, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(` 99+ <span class="visually-hidden"${_scopeId4}>unread messages</span>`);
                        } else {
                          return [
                            vue.createTextVNode(" 99+ "),
                            vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createTextVNode(" Inbox "),
                      vue.createVNode(_component_WBadge, {
                        variant: "danger",
                        pill: "",
                        position: "bottom-right"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(" 99+ "),
                          vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, {
                  variant: "primary",
                  class: "position-relative"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Inbox "),
                    vue.createVNode(_component_WBadge, {
                      variant: "danger",
                      pill: "",
                      position: "bottom-right"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" 99+ "),
                        vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WCol, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "primary",
                class: "position-relative"
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Inbox `);
                    _push4(serverRenderer.ssrRenderComponent(_component_WBadge, {
                      variant: "danger",
                      pill: "",
                      position: "bottom-left"
                    }, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(` 99+ <span class="visually-hidden"${_scopeId4}>unread messages</span>`);
                        } else {
                          return [
                            vue.createTextVNode(" 99+ "),
                            vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createTextVNode(" Inbox "),
                      vue.createVNode(_component_WBadge, {
                        variant: "danger",
                        pill: "",
                        position: "bottom-left"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(" 99+ "),
                          vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, {
                  variant: "primary",
                  class: "position-relative"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode(" Inbox "),
                    vue.createVNode(_component_WBadge, {
                      variant: "danger",
                      pill: "",
                      position: "bottom-left"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" 99+ "),
                        vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WCol, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, {
                variant: "primary",
                class: "position-relative"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Inbox "),
                  vue.createVNode(_component_WBadge, {
                    variant: "danger",
                    pill: "",
                    position: "bottom-right"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" 99+ "),
                      vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WCol, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, {
                variant: "primary",
                class: "position-relative"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Inbox "),
                  vue.createVNode(_component_WBadge, {
                    variant: "danger",
                    pill: "",
                    position: "bottom-left"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" 99+ "),
                      vue.createVNode("span", { class: "visually-hidden" }, "unread messages")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>position-relative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        Inbox
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pill</span> <span class="token attr-name">position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top-right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            99+
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>visually-hidden<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>unread messages<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>position-relative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        Inbox
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pill</span> <span class="token attr-name">position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top-left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            99+
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>visually-hidden<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>unread messages<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>position-relative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        Inbox
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pill</span> <span class="token attr-name">position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bottom-right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            99+
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>visually-hidden<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>unread messages<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>position-relative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        Inbox
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pill</span> <span class="token attr-name">position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bottom-left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            99+
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>visually-hidden<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>unread messages<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="background-colors" tabindex="-1"><a class="header-anchor" href="#background-colors" aria-hidden="true">#</a> Background colors</h2><p>User color variants <code>primary</code> ,<code>secondary</code>,<code>success</code>,<code>danger</code>,<code>warning</code>,<code>info</code>,<code>light</code>,<code>dark</code> for <code>variant</code> property to achieve different backgrounds.</p><!--[-->`);
  serverRenderer.ssrRenderList(["primary", "secondary", "success", "danger", "warning", "info", "light", "dark"], (v) => {
    _push(serverRenderer.ssrRenderComponent(_component_WBadge, {
      variant: v,
      class: "m-2"
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${serverRenderer.ssrInterpolate(v)}`);
        } else {
          return [
            vue.createTextVNode(vue.toDisplayString(v), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
  });
  _push(`<!--]--><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">:variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v in [<span class="token punctuation">&#39;</span>primary<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>secondary<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>success<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>danger<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>warning<span class="token punctuation">&#39;</span> , <span class="token punctuation">&#39;</span>info<span class="token punctuation">&#39;</span> , <span class="token punctuation">&#39;</span>light<span class="token punctuation">&#39;</span> , <span class="token punctuation">&#39;</span>dark<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
{{v}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="pill-badges" tabindex="-1"><a class="header-anchor" href="#pill-badges" aria-hidden="true">#</a> Pill badges</h2><p>Use prop <code>pill</code></p><!--[-->`);
  serverRenderer.ssrRenderList(["primary", "secondary", "success", "danger", "warning", "info", "light", "dark"], (v) => {
    _push(serverRenderer.ssrRenderComponent(_component_WBadge, {
      variant: v,
      pill: "",
      class: "m-2"
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${serverRenderer.ssrInterpolate(v)}`);
        } else {
          return [
            vue.createTextVNode(vue.toDisplayString(v), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
  });
  _push(`<!--]--><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Badge</span> <span class="token attr-name">:variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pill</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v in [<span class="token punctuation">&#39;</span>primary<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>secondary<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>success<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>danger<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>warning<span class="token punctuation">&#39;</span> , <span class="token punctuation">&#39;</span>info<span class="token punctuation">&#39;</span> , <span class="token punctuation">&#39;</span>light<span class="token punctuation">&#39;</span> , <span class="token punctuation">&#39;</span>dark<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
{{v}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Badge</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><!--]-->`);
}
const _sfc_setup$I = _sfc_main$I.setup;
_sfc_main$I.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/badges/index.html.vue");
  return _sfc_setup$I ? _sfc_setup$I(props, ctx) : void 0;
};
var index_html$B = /* @__PURE__ */ _export_sfc(_sfc_main$I, [["ssrRender", _sfc_ssrRender$i]]);
var index_html$C = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$B
});
const _sfc_main$H = {
  data() {
    return {
      items1: [
        {
          text: "Admin",
          href: "#"
        },
        {
          text: "Manage",
          href: "#"
        },
        {
          text: "Library",
          active: true
        }
      ]
    };
  }
};
function _sfc_ssrRender$h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_WBreadcrumb = vue.resolveComponent("WBreadcrumb");
  const _component_WBreadcrumbItem = vue.resolveComponent("WBreadcrumbItem");
  const _component_WIcon = vue.resolveComponent("WIcon");
  _push(`<!--[--><h1 id="breadcrumbs" tabindex="-1"><a class="header-anchor" href="#breadcrumbs" aria-hidden="true">#</a> Breadcrumbs</h1><p>Indicate the current page&#39;s location within a navigational hierarchy. Separators are automatically added in CSS through <code>::before</code> and <code>content</code>.</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WBreadcrumb, { items: $data.items1 }, null, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Breadcrumb</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[
  {
    text: <span class="token punctuation">&#39;</span>Home<span class="token punctuation">&#39;</span>,
    href: <span class="token punctuation">&#39;</span>https://google.com<span class="token punctuation">&#39;</span>
  },
  {
    text: <span class="token punctuation">&#39;</span>Posts<span class="token punctuation">&#39;</span>,
    to: { name: <span class="token punctuation">&#39;</span>home<span class="token punctuation">&#39;</span> }
  },
  {
    text: <span class="token punctuation">&#39;</span>Another Story<span class="token punctuation">&#39;</span>,
    active: true
  }
]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Breadcrumb</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="breadcrumb-items" tabindex="-1"><a class="header-anchor" href="#breadcrumb-items" aria-hidden="true">#</a> Breadcrumb items</h2><p>Items are rendered using <code>:<code>items</code></code> prop. It can be an array of objects to provide link and active state. Links can be href&#39;s for anchor tags, or to&#39;s for router-links. Active state of last element is automatically set if it is undefined.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&#39;https://google.com&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Posts&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">to</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Another Story&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">active</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="manually-placed-items" tabindex="-1"><a class="header-anchor" href="#manually-placed-items" aria-hidden="true">#</a> Manually placed items</h2><p>You may also manually place individual <code>&lt;BreadcrumbItem&gt;</code> child components in the default slot of the <code>&lt;Breadcrumb&gt;</code> component, as an alternative to using the items prop, for greater control over the content of each item:</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WBreadcrumb, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WBreadcrumbItem, { href: "#home" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WIcon, {
                icon: "house-fill",
                scale: "1.25",
                "shift-v": "1.25",
                "aria-hidden": "true"
              }, null, _parent3, _scopeId2));
              _push3(` Home `);
            } else {
              return [
                vue.createVNode(_component_WIcon, {
                  icon: "house-fill",
                  scale: "1.25",
                  "shift-v": "1.25",
                  "aria-hidden": "true"
                }),
                vue.createTextVNode(" Home ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WBreadcrumbItem, { href: "#foo" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Foo`);
            } else {
              return [
                vue.createTextVNode("Foo")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WBreadcrumbItem, { href: "#bar" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Bar`);
            } else {
              return [
                vue.createTextVNode("Bar")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WBreadcrumbItem, { active: "" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Baz`);
            } else {
              return [
                vue.createTextVNode("Baz")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WBreadcrumbItem, { href: "#home" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WIcon, {
                icon: "house-fill",
                scale: "1.25",
                "shift-v": "1.25",
                "aria-hidden": "true"
              }),
              vue.createTextVNode(" Home ")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WBreadcrumbItem, { href: "#foo" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Foo")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WBreadcrumbItem, { href: "#bar" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Bar")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WBreadcrumbItem, { active: "" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Baz")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Breadcrumb</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BreadcrumbItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>house-fill<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scale</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.25<span class="token punctuation">&quot;</span></span> <span class="token attr-name">shift-v</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.25<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Icon</span><span class="token punctuation">&gt;</span></span>
        Home
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BreadcrumbItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BreadcrumbItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#foo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Foo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BreadcrumbItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BreadcrumbItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#bar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Bar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BreadcrumbItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BreadcrumbItem</span> <span class="token attr-name">active</span><span class="token punctuation">&gt;</span></span>Baz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BreadcrumbItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Breadcrumb</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Remember to set the active prop on the last item.</p><!--]-->`);
}
const _sfc_setup$H = _sfc_main$H.setup;
_sfc_main$H.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/breadcrumbs/index.html.vue");
  return _sfc_setup$H ? _sfc_setup$H(props, ctx) : void 0;
};
var index_html$z = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["ssrRender", _sfc_ssrRender$h]]);
var index_html$A = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$z
});
const _sfc_main$G = {
  setup(props) {
    return {
      componentReference: [
        {
          property: "aria-role",
          type: "String",
          default: "'group'",
          description: "Sets the ARIA attribute `role` to a specific value"
        },
        {
          property: "size",
          type: "String",
          default: "",
          description: "Set the size of the component's appearance. 'sm', 'md' (default), or 'lg'"
        },
        {
          property: "tag",
          type: "String",
          default: "'div'",
          description: "Specify the HTML tag to render instead of the default tag"
        },
        {
          property: "vertical",
          type: "Boolean",
          default: "false",
          description: "When set, rendered the button group in vertical mode"
        }
      ]
    };
  }
};
function _sfc_ssrRender$g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_WButtonGroup = vue.resolveComponent("WButtonGroup");
  const _component_WButton = vue.resolveComponent("WButton");
  const _component_WCheckbox = vue.resolveComponent("WCheckbox");
  const _component_WButtonToolbar = vue.resolveComponent("WButtonToolbar");
  const _component_WInputGroup = vue.resolveComponent("WInputGroup");
  const _component_WInputGroupText = vue.resolveComponent("WInputGroupText");
  const _component_WInput = vue.resolveComponent("WInput");
  const _component_WDropdown = vue.resolveComponent("WDropdown");
  const _component_WDropdownItem = vue.resolveComponent("WDropdownItem");
  const _component_WDropdownDivider = vue.resolveComponent("WDropdownDivider");
  const _component_WDataTable = vue.resolveComponent("WDataTable");
  _push(`<!--[--><h1 id="button-groups" tabindex="-1"><a class="header-anchor" href="#button-groups" aria-hidden="true">#</a> Button Groups</h1><p>Group a series of buttons together on a single line or stack them in a vertical column.</p><h2 id="basic-example" tabindex="-1"><a class="header-anchor" href="#basic-example" aria-hidden="true">#</a> Basic example</h2><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { "aria-label": "Basic example" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Left`);
            } else {
              return [
                vue.createTextVNode("Left")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Middle`);
            } else {
              return [
                vue.createTextVNode("Middle")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Right`);
            } else {
              return [
                vue.createTextVNode("Right")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButton, { variant: "primary" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Left")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButton, { variant: "primary" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Middle")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButton, { variant: "primary" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Right")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Basic example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="mixed-styles" tabindex="-1"><a class="header-anchor" href="#mixed-styles" aria-hidden="true">#</a> Mixed styles</h2><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { "aria-label": "Basic mixed styles example" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "warning" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Left`);
            } else {
              return [
                vue.createTextVNode("Left")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "danger" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Middle`);
            } else {
              return [
                vue.createTextVNode("Middle")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Right`);
            } else {
              return [
                vue.createTextVNode("Right")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButton, { variant: "warning" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Left")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButton, { variant: "danger" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Middle")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButton, { variant: "primary" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Right")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Basic mixed styles example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="outlined-styles" tabindex="-1"><a class="header-anchor" href="#outlined-styles" aria-hidden="true">#</a> Outlined styles</h3><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { "aria-label": "Basic outlined example" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, {
          variant: "primary",
          outline: ""
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Left`);
            } else {
              return [
                vue.createTextVNode("Left")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, {
          variant: "primary",
          outline: ""
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Middle`);
            } else {
              return [
                vue.createTextVNode("Middle")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, {
          variant: "primary",
          outline: ""
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Right`);
            } else {
              return [
                vue.createTextVNode("Right")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButton, {
            variant: "primary",
            outline: ""
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Left")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButton, {
            variant: "primary",
            outline: ""
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Middle")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButton, {
            variant: "primary",
            outline: ""
          }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Right")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Basic outlined example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>Left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>Right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>You can also make similar result by following way without using <code>outline</code> prop.</p><h2 id="basic-checkbox-toggle-button-group" tabindex="-1"><a class="header-anchor" href="#basic-checkbox-toggle-button-group" aria-hidden="true">#</a> Basic checkbox toggle button group</h2><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { "aria-label": "Basic checkbox toggle button group" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        serverRenderer.ssrRenderList(5, (x) => {
          _push2(serverRenderer.ssrRenderComponent(_component_WCheckbox, { button: "" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Checkbox ${serverRenderer.ssrInterpolate(x)}`);
              } else {
                return [
                  vue.createTextVNode("Checkbox " + vue.toDisplayString(x), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
      } else {
        return [
          (vue.openBlock(), vue.createBlock(vue.Fragment, null, vue.renderList(5, (x) => {
            return vue.createVNode(_component_WCheckbox, { button: "" }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Checkbox " + vue.toDisplayString(x), 1)
              ]),
              _: 2
            }, 1024);
          }), 64))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><h2 id="button-toolbar" tabindex="-1"><a class="header-anchor" href="#button-toolbar" aria-hidden="true">#</a> Button toolbar</h2><p>Combine sets of button groups into button toolbars for more complex components.</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonToolbar, { "aria-label": "Toolbar with button groups" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, {
          class: "me-2",
          "aria-label": "First group"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`1`);
                  } else {
                    return [
                      vue.createTextVNode("1")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`2`);
                  } else {
                    return [
                      vue.createTextVNode("2")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`3`);
                  } else {
                    return [
                      vue.createTextVNode("3")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`4`);
                  } else {
                    return [
                      vue.createTextVNode("4")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, { variant: "primary" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("1")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, { variant: "primary" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("2")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, { variant: "primary" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("3")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, { variant: "primary" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("4")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, {
          class: "me-2",
          "aria-label": "Second group"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "secondary" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`5`);
                  } else {
                    return [
                      vue.createTextVNode("5")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "secondary" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`6`);
                  } else {
                    return [
                      vue.createTextVNode("6")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "secondary" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`7`);
                  } else {
                    return [
                      vue.createTextVNode("7")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, { variant: "secondary" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("5")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, { variant: "secondary" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("6")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, { variant: "secondary" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("7")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { "aria-label": "Third group" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "info" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`8`);
                  } else {
                    return [
                      vue.createTextVNode("8")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, { variant: "info" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("8")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButtonGroup, {
            class: "me-2",
            "aria-label": "First group"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, { variant: "primary" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("1")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, { variant: "primary" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("2")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, { variant: "primary" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("3")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, { variant: "primary" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("4")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButtonGroup, {
            class: "me-2",
            "aria-label": "Second group"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, { variant: "secondary" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("5")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, { variant: "secondary" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("6")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, { variant: "secondary" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("7")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButtonGroup, { "aria-label": "Third group" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, { variant: "info" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("8")
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonToolbar</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Toolbar with button groups<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>me-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>First group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>me-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Second group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Third group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonToolbar</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Feel free to mix input groups with button groups in your toolbars. Similar to the example above, you\u2019ll likely need some utilities though to space things properly.</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonToolbar, {
    class: "mb-3",
    "aria-label": "Toolbar with button groups"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, {
          class: "me-2",
          "aria-label": "First group"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`1`);
                  } else {
                    return [
                      vue.createTextVNode("1")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`2`);
                  } else {
                    return [
                      vue.createTextVNode("2")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`3`);
                  } else {
                    return [
                      vue.createTextVNode("3")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`4`);
                  } else {
                    return [
                      vue.createTextVNode("4")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, {
                  variant: "secondary",
                  outline: ""
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("1")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, {
                  variant: "secondary",
                  outline: ""
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("2")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, {
                  variant: "secondary",
                  outline: ""
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("3")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, {
                  variant: "secondary",
                  outline: ""
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("4")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WInputGroup, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WInputGroupText, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`@`);
                  } else {
                    return [
                      vue.createTextVNode("@")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WInput, {
                placeholder: "Input group example",
                "aria-label": "Input group example",
                "aria-describedby": "btnGroupAddon"
              }, null, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WInputGroupText, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("@")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WInput, {
                  placeholder: "Input group example",
                  "aria-label": "Input group example",
                  "aria-describedby": "btnGroupAddon"
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButtonGroup, {
            class: "me-2",
            "aria-label": "First group"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("1")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("2")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("3")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("4")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WInputGroup, null, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WInputGroupText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("@")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WInput, {
                placeholder: "Input group example",
                "aria-label": "Input group example",
                "aria-describedby": "btnGroupAddon"
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonToolbar</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Toolbar with button groups<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>me-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>First group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InputGroup</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InputGroupText</span><span class="token punctuation">&gt;</span></span>@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InputGroupText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>
            <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Input group example<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Input group example<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnGroupAddon<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InputGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonToolbar</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="justified-toolbar" tabindex="-1"><a class="header-anchor" href="#justified-toolbar" aria-hidden="true">#</a> Justified Toolbar</h2><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonToolbar, {
    justified: "",
    "aria-label": "Toolbar with button groups"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { "aria-label": "First group" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`1`);
                  } else {
                    return [
                      vue.createTextVNode("1")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`2`);
                  } else {
                    return [
                      vue.createTextVNode("2")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`3`);
                  } else {
                    return [
                      vue.createTextVNode("3")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`4`);
                  } else {
                    return [
                      vue.createTextVNode("4")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, {
                  variant: "secondary",
                  outline: ""
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("1")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, {
                  variant: "secondary",
                  outline: ""
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("2")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, {
                  variant: "secondary",
                  outline: ""
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("3")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, {
                  variant: "secondary",
                  outline: ""
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("4")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WInputGroup, { class: "input-group" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WInputGroupText, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`@`);
                  } else {
                    return [
                      vue.createTextVNode("@")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WInput, {
                placeholder: "Input group example",
                "aria-label": "Input group example",
                "aria-describedby": "btnGroupAddon2"
              }, null, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WInputGroupText, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("@")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WInput, {
                  placeholder: "Input group example",
                  "aria-label": "Input group example",
                  "aria-describedby": "btnGroupAddon2"
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButtonGroup, { "aria-label": "First group" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("1")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("2")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("3")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                variant: "secondary",
                outline: ""
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("4")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WInputGroup, { class: "input-group" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WInputGroupText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("@")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WInput, {
                placeholder: "Input group example",
                "aria-label": "Input group example",
                "aria-describedby": "btnGroupAddon2"
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonToolbar</span> <span class="token attr-name">justified</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Toolbar with button groups<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>First group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InputGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InputGroupText</span><span class="token punctuation">&gt;</span></span>@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InputGroupText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>
            <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Input group example<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Input group example<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btnGroupAddon2<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InputGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonToolbar</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="sizing" tabindex="-1"><a class="header-anchor" href="#sizing" aria-hidden="true">#</a> Sizing</h2><p>Instead of applying button sizing to every button in a group, just add size to each button group, including each one when nesting multiple groups.</p><div class="bootstrap"><!--[-->`);
  serverRenderer.ssrRenderList(["lg", null, "sm"], (size) => {
    _push(`<div class="mb-2">`);
    _push(serverRenderer.ssrRenderComponent(_component_WButtonGroup, {
      size,
      "aria-label": "Button Group"
    }, {
      default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(serverRenderer.ssrRenderComponent(_component_WButton, { outline: "" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Left`);
              } else {
                return [
                  vue.createTextVNode("Left")
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_WButton, { outline: "" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Middle`);
              } else {
                return [
                  vue.createTextVNode("Middle")
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(serverRenderer.ssrRenderComponent(_component_WButton, { outline: "" }, {
            default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Right`);
              } else {
                return [
                  vue.createTextVNode("Right")
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        } else {
          return [
            vue.createVNode(_component_WButton, { outline: "" }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Left")
              ]),
              _: 1
            }),
            vue.createVNode(_component_WButton, { outline: "" }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Middle")
              ]),
              _: 1
            }),
            vue.createVNode(_component_WButton, { outline: "" }, {
              default: vue.withCtx(() => [
                vue.createTextVNode("Right")
              ]),
              _: 1
            })
          ];
        }
      }),
      _: 2
    }, _parent));
    _push(`</div>`);
  });
  _push(`<!--]--></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>size in [<span class="token punctuation">&#39;</span>lg<span class="token punctuation">&#39;</span>,null,<span class="token punctuation">&#39;</span>sm<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>size<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Button Group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>Left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span><span class="token punctuation">&gt;</span></span>Right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="vertical-variation" tabindex="-1"><a class="header-anchor" href="#vertical-variation" aria-hidden="true">#</a> Vertical variation</h2><p>Make a set of buttons appear vertically stacked rather than horizontally by setting the <code>vertical</code> prop. Split button dropdowns are not supported here.</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { vertical: "" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Top`);
            } else {
              return [
                vue.createTextVNode("Top")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Middle`);
            } else {
              return [
                vue.createTextVNode("Middle")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Bottom`);
            } else {
              return [
                vue.createTextVNode("Bottom")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Top")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Middle")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Bottom")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">vertical</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Top<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Bottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="dropdown-menu-support" tabindex="-1"><a class="header-anchor" href="#dropdown-menu-support" aria-hidden="true">#</a> Dropdown menu support</h2><p>Add <code>&lt;Dropdown&gt;</code> menus directly inside your <code>&lt;ButtonGroup&gt;</code>. Note that split dropdown menus are not supported when prop <code>vertical</code> is set.</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonGroup, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Button`);
            } else {
              return [
                vue.createTextVNode("Button")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdown, {
          right: "",
          text: "Menu"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 1`);
                  } else {
                    return [
                      vue.createTextVNode("Item 1")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 2`);
                  } else {
                    return [
                      vue.createTextVNode("Item 2")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownDivider, null, null, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 3`);
                  } else {
                    return [
                      vue.createTextVNode("Item 3")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 1")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 2")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WDropdownDivider),
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 3")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdown, {
          right: "",
          split: "",
          text: "Split Menu"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 1`);
                  } else {
                    return [
                      vue.createTextVNode("Item 1")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 2`);
                  } else {
                    return [
                      vue.createTextVNode("Item 2")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownDivider, null, null, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 3`);
                  } else {
                    return [
                      vue.createTextVNode("Item 3")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 1")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 2")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WDropdownDivider),
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 3")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Button")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdown, {
            right: "",
            text: "Menu"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 1")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 2")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WDropdownDivider),
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 3")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdown, {
            right: "",
            split: "",
            text: "Split Menu"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 1")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 2")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WDropdownDivider),
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 3")
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">right</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Menu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownDivider</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownDivider</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">right</span> <span class="token attr-name">split</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Split Menu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownDivider</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownDivider</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDataTable, {
    items: $setup.componentReference,
    fields: ["property", "type", "default", "description"]
  }, null, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$G = _sfc_main$G.setup;
_sfc_main$G.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/buttons/groups.html.vue");
  return _sfc_setup$G ? _sfc_setup$G(props, ctx) : void 0;
};
var groups_html$1 = /* @__PURE__ */ _export_sfc(_sfc_main$G, [["ssrRender", _sfc_ssrRender$g]]);
var groups_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": groups_html$1
});
var index_html_vue_vue_type_style_index_0_lang$1 = "";
const _sfc_main$F = {
  data() {
    return {
      componentReference: {
        header: [
          "Property",
          "Type",
          "Default",
          "Description"
        ],
        items: [
          [
            "tag",
            "string",
            "button",
            "Default Button Tag. Can be changed depending on requirements"
          ],
          [
            "variant",
            "string",
            "secondary",
            "Applies one of the Bootstrap theme color variants to the component"
          ],
          [
            "size",
            "string",
            "null",
            "Set the size of the component's appearance. 'sm', 'md' (default), or 'lg'"
          ],
          [
            "type",
            "string",
            "button",
            "Button Type. Applies only when tag is button"
          ],
          [
            "outline",
            "boolean",
            "false",
            "Outline Based Contextual Color Variants"
          ],
          [
            "block",
            "boolean",
            "false",
            "Full Width button. Adds w-full class to the button element"
          ],
          [
            "pill",
            "boolean",
            "false",
            "Renders the button with the pill style appearance when set to 'true'"
          ],
          [
            "squared",
            "boolean",
            "false",
            "Renders the button with non-rounded corners when set to 'true'"
          ],
          [
            "disabled",
            "boolean",
            "false",
            "When set to `true`, disables the component's functionality and places it in a disabled state"
          ],
          [
            "pressed",
            "boolean",
            "false",
            `When set to 'true', gives the button the appearance of
                        being pressed and adds attribute 'aria-pressed="true"'.
                        When set to \`false\` adds attribute 'aria-pressed="false"'.
                         Tri-state prop. Syncable with the .sync modifier`
          ],
          [
            "badge",
            "string,number",
            "null",
            "Appends Badge in Button Element"
          ],
          [
            "badgeVariant",
            "string",
            "primary",
            "Appended Badge's color variant"
          ]
        ]
      }
    };
  }
};
function _sfc_ssrRender$f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_w_button = vue.resolveComponent("w-button");
  const _component_WRow = vue.resolveComponent("WRow");
  const _component_WCol = vue.resolveComponent("WCol");
  const _component_WButton = vue.resolveComponent("WButton");
  const _component_WTable = vue.resolveComponent("WTable");
  const _component_WTHead = vue.resolveComponent("WTHead");
  const _component_WTr = vue.resolveComponent("WTr");
  const _component_WTh = vue.resolveComponent("WTh");
  const _component_WTBody = vue.resolveComponent("WTBody");
  const _component_WTd = vue.resolveComponent("WTd");
  _push(`<!--[--><h1 id="buttons" tabindex="-1"><a class="header-anchor" href="#buttons" aria-hidden="true">#</a> Buttons</h1><p>Use <code>Bootstrap&#39;s</code> custom <code>Button</code> component for actions in forms, dialogs, and more. Includes support for a handful of contextual variations, sizes, states, and more.</p><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p><code>&lt;Button&gt;</code> component generates either a native<code>button</code> element, <code>a</code> element, or <code>router-link</code> component with the styling of a button.</p><div class="child-m-2 bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_w_button, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_w_button, { variant: "danger" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_w_button, { variant: "success" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_w_button, { variant: "outline-primary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outline-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="element-type" tabindex="-1"><a class="header-anchor" href="#element-type" aria-hidden="true">#</a> Element type</h2><p>The <code>Button</code> component generally renders a <code>button</code> element. However, you can also render an <code>a</code> element by providing an <code>href</code> prop value. You may also generate vue-router <code>router-link</code> when providing a value for the to prop (vue-router is required).</p><h2 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> Type</h2><p>You can specify the button&#39;s type by setting the prop type to <code>&#39;button&#39;</code>, <code>&#39;submit&#39;</code> or <code>&#39;reset&#39;</code>. The default type is <code>&#39;button&#39;</code>.</p><p>Note the type prop has no effect when either href or to props are set.</p><h2 id="sizing" tabindex="-1"><a class="header-anchor" href="#sizing" aria-hidden="true">#</a> Sizing</h2><p>Fancy larger or smaller buttons? Specify <code>lg</code> or <code>sm</code> via the <code>size</code> prop.</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WRow, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WCol, {
          lg: "4",
          class: "pb-2"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { size: "sm" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Small Button`);
                  } else {
                    return [
                      vue.createTextVNode("Small Button")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, { size: "sm" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Small Button")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WCol, {
          lg: "4",
          class: "pb-2"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Default Button`);
                  } else {
                    return [
                      vue.createTextVNode("Default Button")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Default Button")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WCol, {
          lg: "4",
          class: "pb-2"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, { size: "lg" }, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Large Button`);
                  } else {
                    return [
                      vue.createTextVNode("Large Button")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, { size: "lg" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Large Button")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WCol, {
            lg: "4",
            class: "pb-2"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, { size: "sm" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Small Button")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WCol, {
            lg: "4",
            class: "pb-2"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Default Button")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WCol, {
            lg: "4",
            class: "pb-2"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, { size: "lg" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Large Button")
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">lg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Small Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">lg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Default Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">lg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Large Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="contextual-variants" tabindex="-1"><a class="header-anchor" href="#contextual-variants" aria-hidden="true">#</a> Contextual Variants</h2><p>Use the variant prop to generate the various Bootstrap contextual button variants. By default, <code>&lt;Button&gt;</code> will render with the secondary variant. The variant prop adds the Bootstrap v5 class .btn-<code>variant</code> on the rendered button.</p><h2 id="solid-color-variants" tabindex="-1"><a class="header-anchor" href="#solid-color-variants" aria-hidden="true">#</a> Solid color variants</h2><p><code>primary</code>, <code>secondary</code>, <code>success</code>, <code>danger</code>, <code>warning</code>, <code>info</code>, <code>light</code> , <code>dark</code></p><div class="child-m-2 bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "primary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Primary`);
      } else {
        return [
          vue.createTextVNode("Primary")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "secondary" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Secondary`);
      } else {
        return [
          vue.createTextVNode("Secondary")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "success" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Success`);
      } else {
        return [
          vue.createTextVNode("Success")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "danger" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Danger`);
      } else {
        return [
          vue.createTextVNode("Danger")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "warning" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Warning`);
      } else {
        return [
          vue.createTextVNode("Warning")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "info" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Info`);
      } else {
        return [
          vue.createTextVNode("Info")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "light" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Light`);
      } else {
        return [
          vue.createTextVNode("Light")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { variant: "dark" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Dark`);
      } else {
        return [
          vue.createTextVNode("Dark")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Primary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Secondary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Danger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Warning<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>light<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Light<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Dark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="outline-color-variants" tabindex="-1"><a class="header-anchor" href="#outline-color-variants" aria-hidden="true">#</a> Outline color variants</h2><p>Use Property <code>outline</code> to apply outlined color variants.</p><div class="child-m-2 bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    outline: "",
    variant: "primary"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Primary`);
      } else {
        return [
          vue.createTextVNode("Primary")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    outline: "",
    variant: "secondary"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Secondary`);
      } else {
        return [
          vue.createTextVNode("Secondary")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    outline: "",
    variant: "success"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Success`);
      } else {
        return [
          vue.createTextVNode("Success")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    outline: "",
    variant: "danger"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Danger`);
      } else {
        return [
          vue.createTextVNode("Danger")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    outline: "",
    variant: "warning"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Warning`);
      } else {
        return [
          vue.createTextVNode("Warning")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    outline: "",
    variant: "info"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Info`);
      } else {
        return [
          vue.createTextVNode("Info")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    outline: "",
    variant: "light"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Light`);
      } else {
        return [
          vue.createTextVNode("Light")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    outline: "",
    variant: "dark"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Dark`);
      } else {
        return [
          vue.createTextVNode("Dark")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Primary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Secondary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Danger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Warning<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>light<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Light<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">outline</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Dark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="block-level-buttons" tabindex="-1"><a class="header-anchor" href="#block-level-buttons" aria-hidden="true">#</a> Block level buttons</h2><p>Block Level button is a full width button of its container. Use prop <code>block</code> to make a block/full width button.</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    block: "",
    variant: "primary"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Block Level Button`);
      } else {
        return [
          vue.createTextVNode("Block Level Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">block</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Block Level Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="pill-style" tabindex="-1"><a class="header-anchor" href="#pill-style" aria-hidden="true">#</a> Pill style</h2><p>Prefer buttons with a more rounded-pill style? Just set the prop pill to <code>true</code>.</p><div class="child-m-2 bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { pill: "" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    pill: "",
    variant: "primary"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    pill: "",
    variant: "outline-secondary"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    pill: "",
    variant: "success"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    pill: "",
    variant: "outline-danger"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    pill: "",
    variant: "info"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">pill</span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">pill</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">pill</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outline-secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">pill</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">pill</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outline-danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">pill</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="squared-style" tabindex="-1"><a class="header-anchor" href="#squared-style" aria-hidden="true">#</a> Squared style</h2><p>Prefer buttons with a more square corner style? Just set the prop squared to <code>true</code>.</p><div class="child-m-2 bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButton, { squared: "" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    squared: "",
    variant: "primary"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    squared: "",
    variant: "outline-secondary"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    squared: "",
    variant: "success"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    squared: "",
    variant: "outline-danger"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WButton, {
    squared: "",
    variant: "info"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Button`);
      } else {
        return [
          vue.createTextVNode("Button")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">squared</span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">squared</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">squared</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outline-secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">squared</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">squared</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outline-danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">squared</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="disabled-state" tabindex="-1"><a class="header-anchor" href="#disabled-state" aria-hidden="true">#</a> Disabled state</h2><p>Set the <code>disabled</code> prop to <code>disabled</code> button default functionality. disabled also works with buttons rendered as <code>a</code> elements and \`router-link (i.e. with the href or to prop set).</p><p>The pressed prop can be set to one of three values:</p><ul><li><code>true</code>: Sets the .active class and adds the attribute <code>aria-pressed=&quot;true&quot;</code>.</li><li><code>false</code>: Clears the .active class and adds the attribute <code>aria-pressed=&quot;false&quot;</code>.</li><li><code>null</code>: (default) Neither the class .active nor the attribute <code>aria-pressed</code> will be set.</li></ul><h2 id="component-reference" tabindex="-1"><a class="header-anchor" href="#component-reference" aria-hidden="true">#</a> Component reference</h2>`);
  _push(serverRenderer.ssrRenderComponent(_component_WTable, {
    bordered: "",
    hover: "",
    striped: ""
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WTHead, { class: "bg-dark text-light" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WTr, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(serverRenderer.ssrRenderComponent(_component_WTh, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Property`);
                        } else {
                          return [
                            vue.createTextVNode("Property")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_WTh, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Type`);
                        } else {
                          return [
                            vue.createTextVNode("Type")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_WTh, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Default`);
                        } else {
                          return [
                            vue.createTextVNode("Default")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(serverRenderer.ssrRenderComponent(_component_WTh, null, {
                      default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`Description`);
                        } else {
                          return [
                            vue.createTextVNode("Description")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      vue.createVNode(_component_WTh, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Property")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_WTh, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Type")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_WTh, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Default")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_WTh, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Description")
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WTr, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_WTh, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Property")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WTh, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Type")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WTh, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Default")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WTh, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Description")
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WTBody, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<!--[-->`);
              serverRenderer.ssrRenderList($data.componentReference.items, (row) => {
                _push3(serverRenderer.ssrRenderComponent(_component_WTr, null, {
                  default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(serverRenderer.ssrRenderComponent(_component_WTd, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`<code${_scopeId4}>${serverRenderer.ssrInterpolate(row[0])}</code>`);
                          } else {
                            return [
                              vue.createVNode("code", null, vue.toDisplayString(row[0]), 1)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_WTd, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`<code${_scopeId4}>${serverRenderer.ssrInterpolate(row[1])}</code>`);
                          } else {
                            return [
                              vue.createVNode("code", null, vue.toDisplayString(row[1]), 1)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_WTd, null, {
                        default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`${serverRenderer.ssrInterpolate(row[2])}`);
                          } else {
                            return [
                              vue.createTextVNode(vue.toDisplayString(row[2]), 1)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent4, _scopeId3));
                      _push4(serverRenderer.ssrRenderComponent(_component_WTd, null, null, _parent4, _scopeId3));
                    } else {
                      return [
                        vue.createVNode(_component_WTd, null, {
                          default: vue.withCtx(() => [
                            vue.createVNode("code", null, vue.toDisplayString(row[0]), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_WTd, null, {
                          default: vue.withCtx(() => [
                            vue.createVNode("code", null, vue.toDisplayString(row[1]), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_WTd, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode(vue.toDisplayString(row[2]), 1)
                          ]),
                          _: 2
                        }, 1024),
                        vue.createVNode(_component_WTd, {
                          innerHTML: row[3]
                        }, null, 8, ["innerHTML"])
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
              });
              _push3(`<!--]-->`);
            } else {
              return [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.componentReference.items, (row) => {
                  return vue.openBlock(), vue.createBlock(_component_WTr, null, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_WTd, null, {
                        default: vue.withCtx(() => [
                          vue.createVNode("code", null, vue.toDisplayString(row[0]), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_WTd, null, {
                        default: vue.withCtx(() => [
                          vue.createVNode("code", null, vue.toDisplayString(row[1]), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_WTd, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode(vue.toDisplayString(row[2]), 1)
                        ]),
                        _: 2
                      }, 1024),
                      vue.createVNode(_component_WTd, {
                        innerHTML: row[3]
                      }, null, 8, ["innerHTML"])
                    ]),
                    _: 2
                  }, 1024);
                }), 256))
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WTHead, { class: "bg-dark text-light" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WTr, null, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WTh, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Property")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WTh, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Type")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WTh, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Default")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WTh, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Description")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WTBody, null, {
            default: vue.withCtx(() => [
              (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList($data.componentReference.items, (row) => {
                return vue.openBlock(), vue.createBlock(_component_WTr, null, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_WTd, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode("code", null, vue.toDisplayString(row[0]), 1)
                      ]),
                      _: 2
                    }, 1024),
                    vue.createVNode(_component_WTd, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode("code", null, vue.toDisplayString(row[1]), 1)
                      ]),
                      _: 2
                    }, 1024),
                    vue.createVNode(_component_WTd, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(vue.toDisplayString(row[2]), 1)
                      ]),
                      _: 2
                    }, 1024),
                    vue.createVNode(_component_WTd, {
                      innerHTML: row[3]
                    }, null, 8, ["innerHTML"])
                  ]),
                  _: 2
                }, 1024);
              }), 256))
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$F = _sfc_main$F.setup;
_sfc_main$F.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/buttons/index.html.vue");
  return _sfc_setup$F ? _sfc_setup$F(props, ctx) : void 0;
};
var index_html$x = /* @__PURE__ */ _export_sfc(_sfc_main$F, [["ssrRender", _sfc_ssrRender$f]]);
var index_html$y = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$x
});
const _sfc_main$E = {};
function _sfc_ssrRender$e(_ctx, _push, _parent, _attrs) {
  const _component_WCalendar = vue.resolveComponent("WCalendar");
  _push(`<!--[--><h1 id="calendar" tabindex="-1"><a class="header-anchor" href="#calendar" aria-hidden="true">#</a> Calendar</h1><p><em><strong><code>wovoui</code></strong></em>&#39;s custom <code>&lt;Calendar&gt;</code> component generates a WAI-ARIA compliant calendar style date selection widget, which can be used to control other components, or can be used to create customized date picker inputs.</p><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p><code>&lt;Calendar&gt;</code> is WAI-ARIA accessibility compliant, optimized for keyboard control (arrow, page up/down, home, and end keys). Internationalization is also supported, and default&#39;s to the browser&#39;s or page&#39;s locale, if no locale(s) are specified.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WCalendar, null, null, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Calendar</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><!--]-->`);
}
const _sfc_setup$E = _sfc_main$E.setup;
_sfc_main$E.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/calendar/index.html.vue");
  return _sfc_setup$E ? _sfc_setup$E(props, ctx) : void 0;
};
var index_html$v = /* @__PURE__ */ _export_sfc(_sfc_main$E, [["ssrRender", _sfc_ssrRender$e]]);
var index_html$w = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$v
});
const _sfc_main$D = {
  __ssrInlineRender: true,
  setup(__props) {
    const componentReference = [
      {
        property: "align",
        type: "String",
        default: "",
        description: "Text alignment for the card's content: 'left', 'center' or 'right'"
      },
      {
        property: "bg-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the background"
      },
      {
        property: "body-bg-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the body background"
      },
      {
        property: "body-border-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the body border"
      },
      {
        property: "body-class",
        type: "Array or Object or String",
        default: "",
        description: "CSS class (or classes) to apply to the body"
      },
      {
        property: "body-tag",
        type: "String",
        default: "'div'",
        description: "Specify the HTML tag to render instead of the default tag for the body"
      },
      {
        property: "body-text-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the body text"
      },
      {
        property: "border-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the border"
      },
      {
        property: "footer",
        type: "String",
        default: "",
        description: "Text content to place in the footer"
      },
      {
        property: "footer-bg-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the footer background"
      },
      {
        property: "footer-border-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the footer border"
      },
      {
        property: "footer-class",
        type: "Array or Object or String",
        default: "",
        description: "CSS class (or classes) to apply to the footer"
      },
      {
        property: "footer-tag",
        type: "String",
        default: "'div'",
        description: "Specify the HTML tag to render instead of the default tag for the footer"
      },
      {
        property: "footer-text-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the footer text"
      },
      {
        property: "header",
        type: "String",
        default: "",
        description: "Text content to place in the header"
      },
      {
        property: "header-bg-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the header background"
      },
      {
        property: "header-border-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the header border"
      },
      {
        property: "header-class",
        type: "Array or Object or String",
        default: "",
        description: "CSS class (or classes) to apply to the header"
      },
      {
        property: "header-tag",
        type: "String",
        default: "'div'",
        description: "Specify the HTML tag to render instead of the default tag for the header"
      },
      {
        property: "header-text-variant",
        type: "String",
        default: "",
        description: "Applies one of the Bootstrap theme color variants to the header text"
      },
      {
        property: "img-alt",
        type: "String",
        default: "",
        description: "Value to set the image attribute 'alt'"
      },
      {
        property: "img-bottom",
        type: "Boolean",
        default: "false",
        description: "Set if the image should appear at the bottom of the card"
      },
      {
        property: "img-end",
        type: "Boolean",
        default: "false",
        description: "Set if the image should appear at the end (right) of the card"
      },
      {
        property: "img-height",
        type: "String or Number",
        default: "",
        description: "The value to set on the image's 'height' attribute"
      },
      {
        property: "img-left",
        type: "Boolean",
        default: "false.",
        description: "Set if the image should appear at the start (left) of the card. Synonym for the 'left' prop"
      },
      {
        property: "img-right",
        type: "Boolean",
        default: "",
        description: "Set if the image should appear at the end (right) of the card. Synonym for the 'right' prop"
      },
      {
        property: "img-src",
        type: "String",
        default: "",
        description: "URL for the optional image"
      },
      {
        property: "img-start",
        type: "Boolean",
        default: "",
        description: "Set if the image should appear at the start (left) of the card"
      },
      {
        property: "img-top",
        type: "Boolean",
        default: "",
        description: "Set if the image should appear at the top of the card"
      }
    ];
    return (_ctx, _push, _parent, _attrs) => {
      const _component_ExternalLinkIcon = vue.resolveComponent("ExternalLinkIcon");
      const _component_WCard = vue.resolveComponent("WCard");
      const _component_WCardText = vue.resolveComponent("WCardText");
      const _component_WButton = vue.resolveComponent("WButton");
      const _component_WLink = vue.resolveComponent("WLink");
      const _component_WCardGroup = vue.resolveComponent("WCardGroup");
      const _component_WListGroup = vue.resolveComponent("WListGroup");
      const _component_WListGroupItem = vue.resolveComponent("WListGroupItem");
      const _component_WCardHeader = vue.resolveComponent("WCardHeader");
      const _component_WCardFooter = vue.resolveComponent("WCardFooter");
      const _component_WCardBody = vue.resolveComponent("WCardBody");
      const _component_WCardTitle = vue.resolveComponent("WCardTitle");
      const _component_WCardLink = vue.resolveComponent("WCardLink");
      const _component_WRow = vue.resolveComponent("WRow");
      const _component_WCol = vue.resolveComponent("WCol");
      const _component_WNav = vue.resolveComponent("WNav");
      const _component_WNavItem = vue.resolveComponent("WNavItem");
      const _component_CardText = vue.resolveComponent("CardText");
      const _component_WDataTable = vue.resolveComponent("WDataTable");
      _push(`<!--[--><h1 id="cards" tabindex="-1"><a class="header-anchor" href="#cards" aria-hidden="true">#</a> Cards</h1><p>A card is a flexible and extensible content container. It includes options for headers and footers, a wide variety of content, contextual background colors, and powerful display options. If you\u2019re familiar with Bootstrap 3, cards replace our old panels, wells, and thumbnails. Similar functionality to those components is available as modifier classes for cards.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p>Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components. They have no <code>margin</code> by default, so use <a href="https://getbootstrap.com/docs/5.1/utilities/spacing/" target="_blank" rel="noopener noreferrer">spacing utilities`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a> as needed.</p><p>Below is an example of a basic card with mixed content and a fixed width. Cards have no fixed width to start, so they\u2019ll naturally fill the full width of its parent element. This is easily customized with our various <a href="https://getbootstrap.com/docs/5.1/components/card/Index.vue#sizing" target="_blank" rel="noopener noreferrer">sizing options`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a>.</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        title: "Card Title",
        "img-src": "https://picsum.photos/600/300/?image=25",
        "img-alt": "Image",
        "img-top": "",
        tag: "article",
        style: { "max-width": "20rem" },
        class: "mb-2"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Some quick example text to build on the card title and make up the bulk of the card&#39;s content. `);
                } else {
                  return [
                    vue.createTextVNode(" Some quick example text to build on the card title and make up the bulk of the card's content. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WButton, {
              href: "#",
              variant: "primary"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Go somewhere`);
                } else {
                  return [
                    vue.createTextVNode("Go somewhere")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Some quick example text to build on the card title and make up the bulk of the card's content. ")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                href: "#",
                variant: "primary"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Go somewhere")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
    <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card Title<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://picsum.photos/600/300/?image=25<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">img-top</span>
    <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>article<span class="token punctuation">&quot;</span></span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">max-width</span><span class="token punctuation">:</span> 20rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
    Some quick example text to build on the card title and make up the bulk of the card&#39;s content.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="content-types" tabindex="-1"><a class="header-anchor" href="#content-types" aria-hidden="true">#</a> Content types</h2><p>Cards support a wide variety of content, including images, text, list groups, links and more. The following are examples of what&#39;s supported inside a <code>&lt;Card&gt;</code></p><h2 id="card-body" tabindex="-1"><a class="header-anchor" href="#card-body" aria-hidden="true">#</a> Card body</h2><p>The building block of a <code>&lt;Card&gt;</code> is the <code>&lt;CardBody&gt;</code> section which provides a padded section within a card.</p><p>By default the <code>&lt;Card&gt;</code> content is automatically placed in a <code>&lt;CardBody&gt;</code> section:</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { class: "text-center mb-3" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="bg-secondary text-light"${_scopeId}> This is some content within the default <code${_scopeId}>&lt;CardBody&gt;</code> block of the <code${_scopeId}>&lt;Card&gt;</code> component. Notice the padding between the card&#39;s border and this gray <samp${_scopeId}>&lt;div&gt;</samp>. </div>`);
          } else {
            return [
              vue.createVNode("div", { class: "bg-secondary text-light" }, [
                vue.createTextVNode(" This is some content within the default "),
                vue.createVNode("code", null, "<CardBody>"),
                vue.createTextVNode(" block of the "),
                vue.createVNode("code", null, "<Card>"),
                vue.createTextVNode(" component. Notice the padding between the card's border and this gray "),
                vue.createVNode("samp", null, "<div>"),
                vue.createTextVNode(". ")
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">no-body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-secondary text-light<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    This is some content without the default <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>samp</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>CardBody<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>samp</span><span class="token punctuation">&gt;</span></span> section. Notice the
    lack of padding between the card&#39;s border and this gray <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>samp</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>div<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>samp</span><span class="token punctuation">&gt;</span></span>.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Disable the automatic <code>&lt;CardBody&gt;</code> section (and associated padding) by setting the prop no-body on the <code>&lt;Card&gt;</code>.</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        "no-body": "",
        class: "text-center"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="bg-secondary text-light"${_scopeId}> This is some content without the default \`CardBody\` section. Notice the lack of padding between the card&#39;s border and this gray <samp${_scopeId}>&lt;div&gt;</samp>. </div>`);
          } else {
            return [
              vue.createVNode("div", { class: "bg-secondary text-light" }, [
                vue.createTextVNode(" This is some content without the default `CardBody` section. Notice the lack of padding between the card's border and this gray "),
                vue.createVNode("samp", null, "<div>"),
                vue.createTextVNode(". ")
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><p>Note that with <code>no-body</code> enabled, the content of the <code>title</code> and <code>sub-title</code> props will not be rendered.</p><p>Use the <code>&lt;CardBody&gt;</code> sub-component to place your own card body anywhere in a <code>&lt;Card&gt;</code> component that has <code>no-body</code> set.</p><h2 id="titles-text-and-links" tabindex="-1"><a class="header-anchor" href="#titles-text-and-links" aria-hidden="true">#</a> Titles, text, and links</h2><p>Card titles are adding via the <code>title</code> prop, and sub titles are added via the <code>sub-title</code> prop. The title is rendered using the sub-component <code>&lt;CardTitle&gt;</code> while the Sub Title is rendered using the sub-component <code>&lt;CardSubTitle&gt;</code>.</p><p>With sub-component <code>&lt;CardText&gt;</code>, paragraph text can be added to the card. The last <code>&lt;CardText&gt;</code> in the card body will have its bottom margin automatically removed (via CSS). Text within <code>&lt;CardText&gt;</code> can also be styled with the standard HTML tags.</p><p>Links can be added and placed next to each other by adding the .card-link class to a <code>&lt;a&gt;</code> tag (or <code>&lt;Link&gt;</code> component).</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        title: "Card title",
        "sub-title": "Card subtitle",
        class: "mb-3"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Some quick example text to build on the <em${_scopeId2}>card title</em> and make up the bulk of the card&#39;s content. `);
                } else {
                  return [
                    vue.createTextVNode(" Some quick example text to build on the "),
                    vue.createVNode("em", null, "card title"),
                    vue.createTextVNode(" and make up the bulk of the card's content. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` A second paragraph of text in the card. `);
                } else {
                  return [
                    vue.createTextVNode(" A second paragraph of text in the card. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="card-link"${_scopeId}>Card link</a>`);
            _push2(serverRenderer.ssrRenderComponent(_component_WLink, {
              href: "#",
              class: "card-link"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Another link`);
                } else {
                  return [
                    vue.createTextVNode("Another link")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Some quick example text to build on the "),
                  vue.createVNode("em", null, "card title"),
                  vue.createTextVNode(" and make up the bulk of the card's content. ")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" A second paragraph of text in the card. ")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "card-link"
              }, "Card link"),
              vue.createVNode(_component_WLink, {
                href: "#",
                class: "card-link"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Another link")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sub-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card subtitle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
    Some quick example text to build on the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>card title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span> and make up the bulk of the card&#39;s
    content.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>A second paragraph of text in the card.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-link<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Card link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-link<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="images" tabindex="-1"><a class="header-anchor" href="#images" aria-hidden="true">#</a> Images</h2><p>The <code>&lt;Card&gt;</code> prop <code>img-src</code> places an image on the top of the card, and use the <code>img-alt</code> prop to specify a string to be placed in the image&#39;s <code>alt</code> attribute. The image specified by the <code>img-src</code> prop will be responsive and will adjust its width when the width of the card is changed.</p><p>Alternatively you can manually place images inside <code>&lt;Card&gt;</code> using the sub-component <code>&lt;CardImg&gt;</code>. See the kitchen sink example below for usage.</p><div class="bootstrap"><div><h4>Top and Bottom</h4>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, { deck: "" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "img-src": "https://placekitten.com/1000/300",
              "img-alt": "Card image",
              "img-top": ""
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Some quick example text to build on the card and make up the bulk of the card&#39;s content. `);
                      } else {
                        return [
                          vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "img-src": "https://placekitten.com/1000/300",
              "img-alt": "Card image",
              "img-bottom": ""
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Some quick example text to build on the card and make up the bulk of the card&#39;s content. `);
                      } else {
                        return [
                          vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                "img-src": "https://placekitten.com/1000/300",
                "img-alt": "Card image",
                "img-top": ""
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "img-src": "https://placekitten.com/1000/300",
                "img-alt": "Card image",
                "img-bottom": ""
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="mt-4"><h4>Left and Right (or Start and End)</h4>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        "img-src": "https://placekitten.com/300/300",
        "img-alt": "Card image",
        "img-left": "",
        class: "mb-3"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Some quick example text to build on the card and make up the bulk of the card&#39;s content. `);
                } else {
                  return [
                    vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        "img-src": "https://placekitten.com/300/300",
        "img-alt": "Card image",
        "img-right": ""
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Some quick example text to build on the card and make up the bulk of the card&#39;s content. `);
                } else {
                  return [
                    vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Top and Bottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">deck</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/1000/300<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
                Some quick example text to build on the card and make up the bulk of the card&#39;s content.
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/1000/300<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-bottom</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
                Some quick example text to build on the card and make up the bulk of the card&#39;s content.
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Left and Right (or Start and End)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/300/300<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-left</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
            Some quick example text to build on the card and make up the bulk of the card&#39;s content.
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/300/300<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-right</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
            Some quick example text to build on the card and make up the bulk of the card&#39;s content.
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="overlay-image" tabindex="-1"><a class="header-anchor" href="#overlay-image" aria-hidden="true">#</a> Overlay image</h2><p>Place the image in the background of the card by setting the boolean prop <code>overlay</code>:</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        overlay: "",
        "img-src": "https://picsum.photos/900/250/?image=3",
        "img-alt": "Card Image",
        "text-variant": "white",
        title: "Image Overlay",
        "sub-title": "Subtitle"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Some quick example text to build on the card and make up the bulk of the card&#39;s content. `);
                } else {
                  return [
                    vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Some quick example text to build on the card and make up the bulk of the card's content. ")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
    <span class="token attr-name">overlay</span>
    <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://picsum.photos/900/250/?image=3<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card Image<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image Overlay<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">sub-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Subtitle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
    Some quick example text to build on the card and make up the bulk of the card&#39;s content.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="list-groups" tabindex="-1"><a class="header-anchor" href="#list-groups" aria-hidden="true">#</a> List groups</h2><p>Create lists of content in a card with a flush list group.</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        style: { "width": "18rem" },
        "body-class": "p-0"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WListGroup, { flush: "" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`An item`);
                      } else {
                        return [
                          vue.createTextVNode("An item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`A second item`);
                      } else {
                        return [
                          vue.createTextVNode("A second item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`A third item`);
                      } else {
                        return [
                          vue.createTextVNode("A third item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("An item")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("A second item")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("A third item")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WListGroup, { flush: "" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("An item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("A second item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("A third item")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">body-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroup</span> <span class="token attr-name">flush</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>An item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>A second item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>A third item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        style: { "width": "18rem" },
        "no-body": ""
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardHeader, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Card Header `);
                } else {
                  return [
                    vue.createTextVNode(" Card Header ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WListGroup, { flush: "" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`An item`);
                      } else {
                        return [
                          vue.createTextVNode("An item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`A second item`);
                      } else {
                        return [
                          vue.createTextVNode("A second item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`A third item`);
                      } else {
                        return [
                          vue.createTextVNode("A third item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("An item")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("A second item")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("A third item")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardHeader, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Card Header ")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WListGroup, { flush: "" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("An item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("A second item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("A third item")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">no-body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardHeader</span><span class="token punctuation">&gt;</span></span>
    Card Header
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardHeader</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroup</span> <span class="token attr-name">flush</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>An item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>A second item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>A third item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        style: { "width": "18rem" },
        "no-body": ""
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WListGroup, { flush: "" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`An item`);
                      } else {
                        return [
                          vue.createTextVNode("An item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`A second item`);
                      } else {
                        return [
                          vue.createTextVNode("A second item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`A third item`);
                      } else {
                        return [
                          vue.createTextVNode("A third item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("An item")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("A second item")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("A third item")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardFooter, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Card Footer`);
                } else {
                  return [
                    vue.createTextVNode("Card Footer")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WListGroup, { flush: "" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("An item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("A second item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("A third item")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardFooter, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Card Footer")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">no-body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroup</span> <span class="token attr-name">flush</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>An item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>A second item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>A third item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardFooter</span><span class="token punctuation">&gt;</span></span>Card Footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardFooter</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="kitchen-sink" tabindex="-1"><a class="header-anchor" href="#kitchen-sink" aria-hidden="true">#</a> Kitchen sink</h2><p>Mix and match multiple content types to create the card you need, or throw everything in there. Shown below are image styles, blocks, text styles, and a list group\u2014all wrapped in a fixed-width card.</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        style: { "width": "18rem" },
        "no-body": ""
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<img src="https://placekitten.com/380/200" class="card-img-top" alt="..."${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_WCardBody, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Card title`);
                      } else {
                        return [
                          vue.createTextVNode("Card title")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Some quick example text to build on the card title and make up the bulk of the card&#39;s content.`);
                      } else {
                        return [
                          vue.createTextVNode("Some quick example text to build on the card title and make up the bulk of the card's content.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardTitle, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Card title")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Some quick example text to build on the card title and make up the bulk of the card's content.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WListGroup, { flush: "" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`An item`);
                      } else {
                        return [
                          vue.createTextVNode("An item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`A second item`);
                      } else {
                        return [
                          vue.createTextVNode("A second item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`A third item`);
                      } else {
                        return [
                          vue.createTextVNode("A third item")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("An item")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("A second item")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WListGroupItem, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("A third item")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardBody, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardLink, { href: "#" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Card link`);
                      } else {
                        return [
                          vue.createTextVNode("Card link")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardLink, { href: "#" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Another link`);
                      } else {
                        return [
                          vue.createTextVNode("Another link")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardLink, { href: "#" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Card link")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WCardLink, { href: "#" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Another link")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode("img", {
                src: "https://placekitten.com/380/200",
                class: "card-img-top",
                alt: "..."
              }),
              vue.createVNode(_component_WCardBody, null, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardTitle, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Card title")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Some quick example text to build on the card title and make up the bulk of the card's content.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WListGroup, { flush: "" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("An item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("A second item")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WListGroupItem, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("A third item")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardBody, null, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardLink, { href: "#" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Card link")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WCardLink, { href: "#" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Another link")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">no-body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/380/200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-img-top<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardBody</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Card title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Some quick example text to build on the card title and make up the bulk of the card&#39;s content.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardBody</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroup</span> <span class="token attr-name">flush</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>An item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>A second item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>A third item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardBody</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardLink</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Card link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardLink</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardLink</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardLink</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardBody</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="header-and-footer" tabindex="-1"><a class="header-anchor" href="#header-and-footer" aria-hidden="true">#</a> Header and footer</h2><p>Add an optional header and/or footer within a card via the <code>header/footer</code> props or named slots. You can control the wrapper element tags used by setting the <code>header-tag</code> and <code>footer-tag</code> props (both default is <code>div</code>)</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        header: "featured",
        "header-tag": "header",
        footer: "Card Footer",
        "footer-tag": "footer",
        title: "Title"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Header and footers using props.`);
                } else {
                  return [
                    vue.createTextVNode("Header and footers using props.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WButton, {
              href: "#",
              variant: "primary"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Go somewhere`);
                } else {
                  return [
                    vue.createTextVNode("Go somewhere")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Header and footers using props.")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                href: "#",
                variant: "primary"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Go somewhere")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
    <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>featured<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">header-tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">footer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card Footer<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">footer-tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Header and footers using props.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        title: "Title",
        class: "mt-3",
        "header-tag": "header",
        "footer-tag": "footer"
      }, {
        header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<h6 class="mb-0"${_scopeId}>Header Slot</h6>`);
          } else {
            return [
              vue.createVNode("h6", { class: "mb-0" }, "Header Slot")
            ];
          }
        }),
        footer: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<em${_scopeId}>Footer Slot</em>`);
          } else {
            return [
              vue.createVNode("em", null, "Footer Slot")
            ];
          }
        }),
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Header and footers using slots.`);
                } else {
                  return [
                    vue.createTextVNode("Header and footers using slots.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WButton, {
              href: "#",
              variant: "primary"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Go somewhere`);
                } else {
                  return [
                    vue.createTextVNode("Go somewhere")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Header and footers using slots.")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, {
                href: "#",
                variant: "primary"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Go somewhere")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header-tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span> <span class="token attr-name">footer-tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Header Slot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Header and footers using slots.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#footer</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>Footer Slot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { header: "Quote" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<blockquote class="blockquote mb-0"${_scopeId}><p${_scopeId}>A well-known quote, contained in a blockquote element.</p><footer class="blockquote-footer"${_scopeId}>Someone famous in <cite title="Source Title"${_scopeId}>Source Title</cite></footer></blockquote>`);
          } else {
            return [
              vue.createVNode("blockquote", { class: "blockquote mb-0" }, [
                vue.createVNode("p", null, "A well-known quote, contained in a blockquote element."),
                vue.createVNode("footer", { class: "blockquote-footer" }, [
                  vue.createTextVNode("Someone famous in "),
                  vue.createVNode("cite", { title: "Source Title" }, "Source Title")
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Quote<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blockquote mb-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>A well-known quote, contained in a blockquote element.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blockquote-footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Someone famous in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Source Title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Source Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        class: "text-center",
        header: "Featured",
        footer: "2 days ago"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, { class: "card-title" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Special title treatment`);
                } else {
                  return [
                    vue.createTextVNode("Special title treatment")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, { class: "card-text" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Go somewhere</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, { class: "card-title" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Special title treatment")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, { class: "card-text" }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Go somewhere")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Featured<span class="token punctuation">&quot;</span></span> <span class="token attr-name">footer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2 days ago<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="sizing" tabindex="-1"><a class="header-anchor" href="#sizing" aria-hidden="true">#</a> Sizing</h2><p>Cards assume no specific <code>width</code> to start, so they\u2019ll be 100% wide unless otherwise stated. You can change this as needed with custom CSS, grid classes, grid Sass mixins, or utilities.</p><h2 id="using-grid-markup" tabindex="-1"><a class="header-anchor" href="#using-grid-markup" aria-hidden="true">#</a> Using grid markup</h2><p>Using the grid, wrap cards in columns and rows as needed.</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WRow, null, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCol, { sm: "6" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCard, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
                          default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Special title treatment`);
                            } else {
                              return [
                                vue.createTextVNode("Special title treatment")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                          default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`With supporting text below as a natural lead-in to additional content.`);
                            } else {
                              return [
                                vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(`<a href="#" class="btn btn-primary"${_scopeId3}>Go somewhere</a>`);
                      } else {
                        return [
                          vue.createVNode(_component_WCardTitle, null, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("Special title treatment")
                            ]),
                            _: 1
                          }),
                          vue.createVNode(_component_WCardText, null, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                            ]),
                            _: 1
                          }),
                          vue.createVNode("a", {
                            href: "#",
                            class: "btn btn-primary"
                          }, "Go somewhere")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCard, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode(_component_WCardTitle, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Special title treatment")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_WCardText, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                          ]),
                          _: 1
                        }),
                        vue.createVNode("a", {
                          href: "#",
                          class: "btn btn-primary"
                        }, "Go somewhere")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCol, { sm: "6" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCard, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
                          default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Special title treatment`);
                            } else {
                              return [
                                vue.createTextVNode("Special title treatment")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                          default: vue.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`With supporting text below as a natural lead-in to additional content.`);
                            } else {
                              return [
                                vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(`<a href="#" class="btn btn-primary"${_scopeId3}>Go somewhere</a>`);
                      } else {
                        return [
                          vue.createVNode(_component_WCardTitle, null, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("Special title treatment")
                            ]),
                            _: 1
                          }),
                          vue.createVNode(_component_WCardText, null, {
                            default: vue.withCtx(() => [
                              vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                            ]),
                            _: 1
                          }),
                          vue.createVNode("a", {
                            href: "#",
                            class: "btn btn-primary"
                          }, "Go somewhere")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCard, null, {
                      default: vue.withCtx(() => [
                        vue.createVNode(_component_WCardTitle, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("Special title treatment")
                          ]),
                          _: 1
                        }),
                        vue.createVNode(_component_WCardText, null, {
                          default: vue.withCtx(() => [
                            vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                          ]),
                          _: 1
                        }),
                        vue.createVNode("a", {
                          href: "#",
                          class: "btn btn-primary"
                        }, "Go somewhere")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCol, { sm: "6" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCard, null, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_WCardTitle, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Special title treatment")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_WCardText, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                        ]),
                        _: 1
                      }),
                      vue.createVNode("a", {
                        href: "#",
                        class: "btn btn-primary"
                      }, "Go somewhere")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCol, { sm: "6" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCard, null, {
                    default: vue.withCtx(() => [
                      vue.createVNode(_component_WCardTitle, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("Special title treatment")
                        ]),
                        _: 1
                      }),
                      vue.createVNode(_component_WCardText, null, {
                        default: vue.withCtx(() => [
                          vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                        ]),
                        _: 1
                      }),
                      vue.createVNode("a", {
                        href: "#",
                        class: "btn btn-primary"
                      }, "Go somewhere")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="using-utilities" tabindex="-1"><a class="header-anchor" href="#using-utilities" aria-hidden="true">#</a> Using utilities</h2>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { class: "w-75" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Card title`);
                } else {
                  return [
                    vue.createTextVNode("Card title")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Button</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Card title")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Button")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-75<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Card title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { class: "w-50" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Card title`);
                } else {
                  return [
                    vue.createTextVNode("Card title")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Button</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Card title")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Button")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-50<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Card title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="using-custom-css" tabindex="-1"><a class="header-anchor" href="#using-custom-css" aria-hidden="true">#</a> Using custom CSS</h2><p>Use custom CSS in your stylesheets or as inline styles to set a width.</p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { style: { "width": "18rem" } }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Special title treatment`);
                } else {
                  return [
                    vue.createTextVNode("Special title treatment")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Go somewhere</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Special title treatment")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Go somewhere")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="text-alignment" tabindex="-1"><a class="header-anchor" href="#text-alignment" aria-hidden="true">#</a> Text alignment</h2><p>You can quickly change the text alignment of any card\u2014in its entirety or specific parts\u2014with bootstrap&#39;s <a href="https://getbootstrap.com/docs/5.1/utilities/text/#text-alignment" target="_blank" rel="noopener noreferrer">text align classes`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a></p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { style: { "width": "18rem" } }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Special title treatment`);
                } else {
                  return [
                    vue.createTextVNode("Special title treatment")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Go somewhere</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Special title treatment")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Go somewhere")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        style: { "width": "18rem" },
        class: "text-center"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Special title treatment`);
                } else {
                  return [
                    vue.createTextVNode("Special title treatment")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Go somewhere</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Special title treatment")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Go somewhere")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        style: { "width": "18rem" },
        class: "text-end"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Special title treatment`);
                } else {
                  return [
                    vue.createTextVNode("Special title treatment")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Go somewhere</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Special title treatment")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Go somewhere")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-end<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="navigation" tabindex="-1"><a class="header-anchor" href="#navigation" aria-hidden="true">#</a> Navigation</h2>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { class: "text-center" }, {
        header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WNav, {
              tabs: "",
              class: "card-header-tabs"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WNavItem, {
                    active: "",
                    href: "#"
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Active`);
                      } else {
                        return [
                          vue.createTextVNode("Active")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WNavItem, { href: "#" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Link`);
                      } else {
                        return [
                          vue.createTextVNode("Link")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WNavItem, {
                    href: "#",
                    disabled: ""
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Disabled`);
                      } else {
                        return [
                          vue.createTextVNode("Disabled")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WNavItem, {
                      active: "",
                      href: "#"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Active")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WNavItem, { href: "#" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Link")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WNavItem, {
                      href: "#",
                      disabled: ""
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Disabled")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WNav, {
                tabs: "",
                class: "card-header-tabs"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WNavItem, {
                    active: "",
                    href: "#"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Active")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WNavItem, { href: "#" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Link")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WNavItem, {
                    href: "#",
                    disabled: ""
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Disabled")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Special title treatment`);
                } else {
                  return [
                    vue.createTextVNode("Special title treatment")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Go somewhere</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Special title treatment")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Go somewhere")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Nav</span> <span class="token attr-name">tabs</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-header-tabs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavItem</span> <span class="token attr-name">active</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Active<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span>Disabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Nav</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { class: "text-center" }, {
        header: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WNav, {
              pills: "",
              class: "card-header-pills"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WNavItem, {
                    active: "",
                    href: "#"
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Active`);
                      } else {
                        return [
                          vue.createTextVNode("Active")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WNavItem, { href: "#" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Link`);
                      } else {
                        return [
                          vue.createTextVNode("Link")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WNavItem, {
                    href: "#",
                    disabled: ""
                  }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Disabled`);
                      } else {
                        return [
                          vue.createTextVNode("Disabled")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WNavItem, {
                      active: "",
                      href: "#"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Active")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WNavItem, { href: "#" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Link")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WNavItem, {
                      href: "#",
                      disabled: ""
                    }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Disabled")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WNav, {
                pills: "",
                class: "card-header-pills"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WNavItem, {
                    active: "",
                    href: "#"
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Active")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WNavItem, { href: "#" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Link")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WNavItem, {
                    href: "#",
                    disabled: ""
                  }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Disabled")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Special title treatment`);
                } else {
                  return [
                    vue.createTextVNode("Special title treatment")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`With supporting text below as a natural lead-in to additional content.`);
                } else {
                  return [
                    vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<a href="#" class="btn btn-primary"${_scopeId}>Go somewhere</a>`);
          } else {
            return [
              vue.createVNode(_component_WCardTitle, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Special title treatment")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("With supporting text below as a natural lead-in to additional content.")
                ]),
                _: 1
              }),
              vue.createVNode("a", {
                href: "#",
                class: "btn btn-primary"
              }, "Go somewhere")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Nav</span> <span class="token attr-name">pills</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-header-pills<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavItem</span> <span class="token attr-name">active</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Active<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span>Disabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Nav</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Special title treatment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>With supporting text below as a natural lead-in to additional content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go somewhere<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="card-styles" tabindex="-1"><a class="header-anchor" href="#card-styles" aria-hidden="true">#</a> Card styles</h2><p>Cards include various options for customizing their backgrounds, borders, and color. <a href="https://getbootstrap.com/docs/5.1/utilities/colors/" target="_blank" rel="noopener noreferrer">text color`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a> and <a href="https://getbootstrap.com/docs/5.1/utilities/background/" target="_blank" rel="noopener noreferrer">background utilities`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a> are used under the hood to change the appearance of a card. You can directly use <a href="https://getbootstrap.com/docs/5.1/utilities/colors/" target="_blank" rel="noopener noreferrer">text color`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a> and <a href="https://getbootstrap.com/docs/5.1/utilities/background/" target="_blank" rel="noopener noreferrer">background utilities`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a> in this regard.</p><h2 id="solid" tabindex="-1"><a class="header-anchor" href="#solid" aria-hidden="true">#</a> Solid</h2>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, {
        deck: "",
        class: "mt-3"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "primary",
              "text-variant": "white",
              header: "Primary",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "secondary",
              "text-variant": "white",
              header: "Secondary",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "success",
              "text-variant": "white",
              header: "Success",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                "bg-variant": "primary",
                "text-variant": "white",
                header: "Primary",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "bg-variant": "secondary",
                "text-variant": "white",
                header: "Secondary",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "bg-variant": "success",
                "text-variant": "white",
                header: "Success",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, {
        deck: "",
        class: "mt-3"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "info",
              "text-variant": "white",
              header: "Info",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "warning",
              "text-variant": "white",
              header: "Warning",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "danger",
              "text-variant": "white",
              header: "Danger",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                "bg-variant": "info",
                "text-variant": "white",
                header: "Info",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "bg-variant": "warning",
                "text-variant": "white",
                header: "Warning",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "bg-variant": "danger",
                "text-variant": "white",
                header: "Danger",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, {
        deck: "",
        class: "mt-3"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "light",
              header: "Light",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "dark",
              header: "Dark",
              "text-variant": "white",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              header: "Default",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                "bg-variant": "light",
                header: "Light",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "bg-variant": "dark",
                header: "Dark",
                "text-variant": "white",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                header: "Default",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">deck</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Success<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">deck</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Warning<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">deck</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>light<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Light<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Dark<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Default<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="bordered" tabindex="-1"><a class="header-anchor" href="#bordered" aria-hidden="true">#</a> Bordered</h2><div><div>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, { deck: "" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "border-variant": "primary",
              header: "Primary",
              "header-bg-variant": "primary",
              "header-text-variant": "white",
              align: "center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "border-variant": "secondary",
              header: "Secondary",
              "header-border-variant": "secondary",
              align: "center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "border-variant": "success",
              header: "Success",
              align: "center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                "border-variant": "primary",
                header: "Primary",
                "header-bg-variant": "primary",
                "header-text-variant": "white",
                align: "center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "border-variant": "secondary",
                header: "Secondary",
                "header-border-variant": "secondary",
                align: "center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "border-variant": "success",
                header: "Success",
                align: "center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="mt-3">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, { deck: "" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "border-variant": "info",
              header: "Info",
              align: "center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "border-variant": "warning",
              header: "Warning",
              "header-bg-variant": "transparent",
              align: "center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_CardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_CardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "border-variant": "danger",
              header: "Danger",
              "header-border-variant": "danger",
              "header-text-variant": "danger",
              align: "center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_CardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_CardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                "border-variant": "info",
                header: "Info",
                align: "center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "border-variant": "warning",
                header: "Warning",
                "header-bg-variant": "transparent",
                align: "center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_CardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "border-variant": "danger",
                header: "Danger",
                "header-border-variant": "danger",
                "header-text-variant": "danger",
                align: "center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_CardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="mt-3">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, {
        deck: "",
        class: "mb-3"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "border-variant": "light",
              header: "Light",
              class: "text-center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "border-variant": "dark",
              header: "Dark",
              align: "center"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`);
                      } else {
                        return [
                          vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                "border-variant": "light",
                header: "Light",
                class: "text-center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "border-variant": "dark",
                header: "Dark",
                align: "center"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">deck</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
            <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Primary<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header-bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header-text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
            <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Secondary<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header-border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>secondary<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Success<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">deck</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
            <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>warning<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Warning<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header-bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
            <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Danger<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header-border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">header-text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">deck</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>light<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Light<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Dark<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><h2 id="header-and-footer-variants" tabindex="-1"><a class="header-anchor" href="#header-and-footer-variants" aria-hidden="true">#</a> Header and footer variants</h2><p>You can also apply the solid and border variants individually to card headers and footers via the <code>header-bg-variant</code>, <code>header-border-variant</code>, <code>header-text-variant</code>, <code>footer-bg-variant</code>, <code>footer-border-variant</code>, and <code>footer-text-variant</code> props.</p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        header: "Card Header",
        "header-text-variant": "white",
        "header-tag": "header",
        "header-bg-variant": "dark",
        footer: "Card Footer",
        "footer-tag": "footer",
        "footer-bg-variant": "success",
        "footer-border-variant": "dark",
        title: "Title",
        style: { "max-width": "20rem" }
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Header and footers variants.`);
                } else {
                  return [
                    vue.createTextVNode("Header and footers variants.")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Header and footers variants.")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
    <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card Header<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">header-text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">header-tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">header-bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">footer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card Footer<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">footer-tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">footer-bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">footer-border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">max-width</span><span class="token punctuation">:</span> 20rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>Header and footers variants.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        "border-variant": "success",
        "header-border-variant": "success",
        header: "Header",
        "header-bg-variant": "transparent",
        "body-text-variant": "success",
        title: "Success card title",
        footer: "Footer",
        "footer-bg-variant": "transparent",
        "footer-border-variant": "success",
        class: "mb-3",
        style: { "max-width": "18rem" }
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Some quick example text to build on the card title and make up the bulk of the card&#39;s content. `);
                } else {
                  return [
                    vue.createTextVNode(" Some quick example text to build on the card title and make up the bulk of the card's content. ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCardText, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode(" Some quick example text to build on the card title and make up the bulk of the card's content. ")
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">header-border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Header<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">header-bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">body-text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Success card title<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">footer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Footer<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">footer-bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">footer-border-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">max-width</span><span class="token punctuation">:</span> 18rem<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
    Some quick example text to build on the card title and make up the bulk of the card&#39;s content.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="card-groups" tabindex="-1"><a class="header-anchor" href="#card-groups" aria-hidden="true">#</a> Card groups</h2><p>In addition to styling the content within cards, wovoui includes a <code>&lt;CardGroup&gt;</code> component for laying out series of cards. For the time being, these layout options are not yet responsive.</p><h3 id="default-card-group" tabindex="-1"><a class="header-anchor" href="#default-card-group" aria-hidden="true">#</a> Default card group</h3><p>Use card groups to render cards as a single, attached element with equal width and height columns. Card groups use display: flex; to achieve their uniform sizing.</p><p>When using card groups with footers, their content will automatically line up.</p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, null, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              title: "Title",
              "img-src": "https://placekitten.com/g/300/200",
              "img-alt": "Image",
              "img-top": ""
            }, {
              footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<small class="text-muted"${_scopeId2}>Last updated 3 mins ago</small>`);
                } else {
                  return [
                    vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                  ];
                }
              }),
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. `);
                      } else {
                        return [
                          vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              title: "Title",
              "img-src": "https://placekitten.com/g/300/200",
              "img-alt": "Image",
              "img-top": ""
            }, {
              footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<small class="text-muted"${_scopeId2}>Last updated 3 mins ago</small>`);
                } else {
                  return [
                    vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                  ];
                }
              }),
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This card has supporting text below as a natural lead-in to additional content. `);
                      } else {
                        return [
                          vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              title: "Title",
              "img-src": "https://placekitten.com/g/300/200",
              "img-alt": "Image",
              "img-top": ""
            }, {
              footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<small class="text-muted"${_scopeId2}>Last updated 3 mins ago</small>`);
                } else {
                  return [
                    vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                  ];
                }
              }),
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action. `);
                      } else {
                        return [
                          vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                title: "Title",
                "img-src": "https://placekitten.com/g/300/200",
                "img-alt": "Image",
                "img-top": ""
              }, {
                footer: vue.withCtx(() => [
                  vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                ]),
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                title: "Title",
                "img-src": "https://placekitten.com/g/300/200",
                "img-alt": "Image",
                "img-top": ""
              }, {
                footer: vue.withCtx(() => [
                  vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                ]),
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                title: "Title",
                "img-src": "https://placekitten.com/g/300/200",
                "img-alt": "Image",
                "img-top": ""
              }, {
                footer: vue.withCtx(() => [
                  vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                ]),
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/g/300/200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This is a wider card with supporting text below as a natural lead-in to additional content.
        This content is a little bit longer.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#footer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last updated 3 mins ago<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/g/300/200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This card has supporting text below as a natural lead-in to additional content.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#footer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last updated 3 mins ago<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/g/300/200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This is a wider card with supporting text below as a natural lead-in to additional content.
        This card has even longer content than the first to show that equal height action.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#footer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last updated 3 mins ago<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="card-deck-groups" tabindex="-1"><a class="header-anchor" href="#card-deck-groups" aria-hidden="true">#</a> Card deck groups</h3><p>Need a set of equal width and height cards that aren&#39;t attached to one another? Use card decks by setting the <code>deck</code> prop. And just like with regular card groups, card footers in decks will automatically line up.</p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, { deck: "" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              title: "Title",
              "img-src": "https://picsum.photos/300/200/?image=41",
              "img-alt": "Image",
              "img-top": ""
            }, {
              footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<small class="text-muted"${_scopeId2}>Last updated 3 mins ago</small>`);
                } else {
                  return [
                    vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                  ];
                }
              }),
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. `);
                      } else {
                        return [
                          vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              title: "Title",
              "img-src": "https://picsum.photos/300/200/?image=41",
              "img-alt": "Image",
              "img-top": ""
            }, {
              footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<small class="text-muted"${_scopeId2}>Last updated 3 mins ago</small>`);
                } else {
                  return [
                    vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                  ];
                }
              }),
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This card has supporting text below as a natural lead-in to additional content. `);
                      } else {
                        return [
                          vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              title: "Title",
              "img-src": "https://picsum.photos/300/200/?image=41",
              "img-alt": "Image",
              "img-top": ""
            }, {
              footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<small class="text-muted"${_scopeId2}>Last updated 3 mins ago</small>`);
                } else {
                  return [
                    vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                  ];
                }
              }),
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action. `);
                      } else {
                        return [
                          vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                title: "Title",
                "img-src": "https://picsum.photos/300/200/?image=41",
                "img-alt": "Image",
                "img-top": ""
              }, {
                footer: vue.withCtx(() => [
                  vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                ]),
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                title: "Title",
                "img-src": "https://picsum.photos/300/200/?image=41",
                "img-alt": "Image",
                "img-top": ""
              }, {
                footer: vue.withCtx(() => [
                  vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                ]),
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                title: "Title",
                "img-src": "https://picsum.photos/300/200/?image=41",
                "img-alt": "Image",
                "img-top": ""
              }, {
                footer: vue.withCtx(() => [
                  vue.createVNode("small", { class: "text-muted" }, "Last updated 3 mins ago")
                ]),
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">deck</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://picsum.photos/300/200/?image=41<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This is a wider card with supporting text below as a natural lead-in to additional content.
        This content is a little bit longer.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#footer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last updated 3 mins ago<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://picsum.photos/300/200/?image=41<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This card has supporting text below as a natural lead-in to additional content.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#footer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last updated 3 mins ago<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://picsum.photos/300/200/?image=41<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This is a wider card with supporting text below as a natural lead-in to additional content.
        This card has even longer content than the first to show that equal height action.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#footer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last updated 3 mins ago<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="card-column-groups" tabindex="-1"><a class="header-anchor" href="#card-column-groups" aria-hidden="true">#</a> Card column groups</h3><p>Cards can be organized into Masonry-like columns with by wrapping them in a <code>CardGroup</code> with the prop <code>columns</code> set. Cards are built with CSS column properties instead of flexbox for easier alignment. Cards are ordered from top to bottom and left to right.</p><p>Heads up! Your mileage with card columns may vary. To prevent cards breaking across columns, we must set them to display: inline-block as column-break-inside: avoid isn&#39;t a bulletproof solution yet.</p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCardGroup, { columns: "" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              title: "Card title that wraps to a new line",
              "img-src": "https://placekitten.com/g/400/450",
              "img-alt": "Image",
              "img-top": ""
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. `);
                      } else {
                        return [
                          vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, { header: "Quote" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<blockquote class="blockquote mb-0"${_scopeId2}><p${_scopeId2}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p><footer class="blockquote-footer"${_scopeId2}> Someone famous in <cite title="Source Title"${_scopeId2}>Source Title</cite></footer></blockquote>`);
                } else {
                  return [
                    vue.createVNode("blockquote", { class: "blockquote mb-0" }, [
                      vue.createVNode("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."),
                      vue.createVNode("footer", { class: "blockquote-footer" }, [
                        vue.createTextVNode(" Someone famous in "),
                        vue.createVNode("cite", { title: "Source Title" }, "Source Title")
                      ])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              title: "Title",
              "img-src": "https://placekitten.com/500/350",
              "img-alt": "Image",
              "img-top": ""
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This card has supporting text below as a natural lead-in to additional content. `);
                      } else {
                        return [
                          vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, { class: "small text-muted" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Last updated 3 mins ago`);
                      } else {
                        return [
                          vue.createTextVNode("Last updated 3 mins ago")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WCardText, { class: "small text-muted" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Last updated 3 mins ago")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "bg-variant": "primary",
              "text-variant": "white"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<blockquote class="card-blockquote"${_scopeId2}><p${_scopeId2}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p><footer${_scopeId2}><small${_scopeId2}>Someone famous in <cite title="Source Title"${_scopeId2}>Source Title</cite></small></footer></blockquote>`);
                } else {
                  return [
                    vue.createVNode("blockquote", { class: "card-blockquote" }, [
                      vue.createVNode("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."),
                      vue.createVNode("footer", null, [
                        vue.createVNode("small", null, [
                          vue.createTextVNode("Someone famous in "),
                          vue.createVNode("cite", { title: "Source Title" }, "Source Title")
                        ])
                      ])
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardTitle, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Title`);
                      } else {
                        return [
                          vue.createTextVNode("Title")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This card has supporting text below as a natural lead-in to additional content. `);
                      } else {
                        return [
                          vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, { class: "small text-muted" }, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Last updated 3 mins ago`);
                      } else {
                        return [
                          vue.createTextVNode("Last updated 3 mins ago")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardTitle, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Title")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                      ]),
                      _: 1
                    }),
                    vue.createVNode(_component_WCardText, { class: "small text-muted" }, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode("Last updated 3 mins ago")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "img-src": "https://picsum.photos/400/400/?image=41",
              "img-alt": "Image",
              overlay: ""
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCard, {
              "img-src": "https://picsum.photos/400/200/?image=41",
              "img-alt": "Image",
              "img-top": ""
            }, {
              footer: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<small class="text-muted"${_scopeId2}>Footer Text</small>`);
                } else {
                  return [
                    vue.createVNode("small", { class: "text-muted" }, "Footer Text")
                  ];
                }
              }),
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WCardText, null, {
                    default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first. `);
                      } else {
                        return [
                          vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first. ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WCardText, null, {
                      default: vue.withCtx(() => [
                        vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first. ")
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCard, {
                title: "Card title that wraps to a new line",
                "img-src": "https://placekitten.com/g/400/450",
                "img-alt": "Image",
                "img-top": ""
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, { header: "Quote" }, {
                default: vue.withCtx(() => [
                  vue.createVNode("blockquote", { class: "blockquote mb-0" }, [
                    vue.createVNode("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."),
                    vue.createVNode("footer", { class: "blockquote-footer" }, [
                      vue.createTextVNode(" Someone famous in "),
                      vue.createVNode("cite", { title: "Source Title" }, "Source Title")
                    ])
                  ])
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                title: "Title",
                "img-src": "https://placekitten.com/500/350",
                "img-alt": "Image",
                "img-top": ""
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WCardText, { class: "small text-muted" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Last updated 3 mins ago")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "bg-variant": "primary",
                "text-variant": "white"
              }, {
                default: vue.withCtx(() => [
                  vue.createVNode("blockquote", { class: "card-blockquote" }, [
                    vue.createVNode("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante."),
                    vue.createVNode("footer", null, [
                      vue.createVNode("small", null, [
                        vue.createTextVNode("Someone famous in "),
                        vue.createVNode("cite", { title: "Source Title" }, "Source Title")
                      ])
                    ])
                  ])
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, null, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardTitle, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Title")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This card has supporting text below as a natural lead-in to additional content. ")
                    ]),
                    _: 1
                  }),
                  vue.createVNode(_component_WCardText, { class: "small text-muted" }, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode("Last updated 3 mins ago")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCard, {
                "img-src": "https://picsum.photos/400/400/?image=41",
                "img-alt": "Image",
                overlay: ""
              }),
              vue.createVNode(_component_WCard, {
                "img-src": "https://picsum.photos/400/200/?image=41",
                "img-alt": "Image",
                "img-top": ""
              }, {
                footer: vue.withCtx(() => [
                  vue.createVNode("small", { class: "text-muted" }, "Footer Text")
                ]),
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WCardText, null, {
                    default: vue.withCtx(() => [
                      vue.createTextVNode(" This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first. ")
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardGroup</span> <span class="token attr-name">columns</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span>
    <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Card title that wraps to a new line<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/g/400/450<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This is a wider card with supporting text below as a natural lead-in to additional content.
        This content is a little bit longer.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Quote<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blockquote mb-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blockquote-footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            Someone famous in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Source Title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Source Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Title<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://placekitten.com/500/350<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This card has supporting text below as a natural lead-in to additional content.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last updated 3 mins ago<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">bg-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-blockquote<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">&gt;</span></span>Someone famous in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Source Title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Source Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardTitle</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardTitle</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This card has supporting text below as a natural lead-in to additional content.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last updated 3 mins ago<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://picsum.photos/400/400/?image=41<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">overlay</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">img-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://picsum.photos/400/200/?image=41<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">img-top</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardText</span><span class="token punctuation">&gt;</span></span>
        This is a wider card with supporting text below as a natural lead-in to additional content.
        This card has even longer content than the first.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardText</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#footer</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Footer Text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CardGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h2 id="component-reference" tabindex="-1"><a class="header-anchor" href="#component-reference" aria-hidden="true">#</a> Component reference</h2>`);
      _push(serverRenderer.ssrRenderComponent(_component_WDataTable, {
        small: "",
        hover: "",
        bordered: "",
        "head-variant": "dark",
        fields: ["property", "type", "default", "description"],
        items: componentReference
      }, null, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$D = _sfc_main$D.setup;
_sfc_main$D.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/cards/index.html.vue");
  return _sfc_setup$D ? _sfc_setup$D(props, ctx) : void 0;
};
var index_html$u = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main$D
});
const _sfc_main$C = {};
function _sfc_ssrRender$d(_ctx, _push, _parent, _attrs) {
  const _component_WCarousel = vue.resolveComponent("WCarousel");
  const _component_WCarouselItem = vue.resolveComponent("WCarouselItem");
  _push(`<!--[--><h1 id="carousel" tabindex="-1"><a class="header-anchor" href="#carousel" aria-hidden="true">#</a> Carousel</h1><p>The carousel is a slideshow for cycling through a series of content, built with CSS 3D transforms. It works with a series of images, text, or custom markup. It also includes support for previous/next controls and indicators.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WCarousel, { "indicators-enabled": true }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WCarouselItem, {
          active: true,
          style: { "background": "red !important" },
          class: "bg-danger text-white",
          id: "one"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="py-5 text-center text-white" style="${serverRenderer.ssrRenderStyle({ "min-height": "250px", "color": "white !important" })}"${_scopeId2}> This is Caption 1 </div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-5 text-center text-white",
                  style: { "min-height": "250px", "color": "white !important" }
                }, " This is Caption 1 ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WCarouselItem, {
          style: { "background": "blue !important" },
          class: "bg-info text-white",
          id: "two"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="py-5 text-center text-white" style="${serverRenderer.ssrRenderStyle({ "min-height": "250px", "color": "white !important" })}"${_scopeId2}> This is Caption 2 </div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-5 text-center text-white",
                  style: { "min-height": "250px", "color": "white !important" }
                }, " This is Caption 2 ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WCarouselItem, {
          style: { "background": "#0c4128 !important" },
          class: "bg-warning text-white",
          id: "three"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="py-5 text-center text-white" style="${serverRenderer.ssrRenderStyle({ "min-height": "250px", "color": "white !important" })}"${_scopeId2}> This is Caption 3 </div>`);
            } else {
              return [
                vue.createVNode("div", {
                  class: "py-5 text-center text-white",
                  style: { "min-height": "250px", "color": "white !important" }
                }, " This is Caption 3 ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WCarouselItem, {
            active: true,
            style: { "background": "red !important" },
            class: "bg-danger text-white",
            id: "one"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode("div", {
                class: "py-5 text-center text-white",
                style: { "min-height": "250px", "color": "white !important" }
              }, " This is Caption 1 ")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WCarouselItem, {
            style: { "background": "blue !important" },
            class: "bg-info text-white",
            id: "two"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode("div", {
                class: "py-5 text-center text-white",
                style: { "min-height": "250px", "color": "white !important" }
              }, " This is Caption 2 ")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WCarouselItem, {
            style: { "background": "#0c4128 !important" },
            class: "bg-warning text-white",
            id: "three"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode("div", {
                class: "py-5 text-center text-white",
                style: { "min-height": "250px", "color": "white !important" }
              }, " This is Caption 3 ")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> <span class="token attr-name">:indicators-enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CarouselItem</span> <span class="token attr-name">:active</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> red <span class="token important">!important</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-danger text-white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>py-5 text-center text-white<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">min-height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> white <span class="token important">!important</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
        This is Caption 1
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CarouselItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CarouselItem</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> blue <span class="token important">!important</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-info text-white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>py-5 text-center text-white<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">min-height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> white <span class="token important">!important</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
        This is Caption 2
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CarouselItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CarouselItem</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> #0c4128 <span class="token important">!important</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-warning text-white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>three<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>py-5 text-center text-white<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">min-height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> white <span class="token important">!important</span><span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
        This is Caption 3
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CarouselItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Carousel</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><!--]-->`);
}
const _sfc_setup$C = _sfc_main$C.setup;
_sfc_main$C.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/carousel/index.html.vue");
  return _sfc_setup$C ? _sfc_setup$C(props, ctx) : void 0;
};
var index_html$s = /* @__PURE__ */ _export_sfc(_sfc_main$C, [["ssrRender", _sfc_ssrRender$d]]);
var index_html$t = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$s
});
const _sfc_main$B = {
  setup(props) {
    return {
      collapse1: vue.ref(false),
      collapse2: vue.ref(true)
    };
  }
};
function _sfc_ssrRender$c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_WButton = vue.resolveComponent("WButton");
  const _component_WCollapse = vue.resolveComponent("WCollapse");
  _push(`<!--[--><h1 id="collapse" tabindex="-1"><a class="header-anchor" href="#collapse" aria-hidden="true">#</a> Collapse</h1><p>Easily toggle visibility of almost any content on your pages in a vertically collapsing container. Includes support for making accordions. Visibility can be easily toggled with our v-b-toggle directive, or via v-model.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WButton, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Toggle Collapse`);
      } else {
        return [
          vue.createTextVNode("Toggle Collapse")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WCollapse, {
    modelValue: $setup.collapse1,
    "onUpdate:modelValue": ($event) => $setup.collapse1 = $event
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="border p-3"${_scopeId}> Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger. </div>`);
      } else {
        return [
          vue.createVNode("div", { class: "border p-3" }, " Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger. ")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>collapse1=!collapse1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Toggle Collapse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Collapse</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>collapse1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border p-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        Some placeholder content for the collapse component.
        This panel is hidden by default but revealed when the user activates the relevant trigger.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Collapse</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">collapse1</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="initial-visibility-start-expanded" tabindex="-1"><a class="header-anchor" href="#initial-visibility-start-expanded" aria-hidden="true">#</a> Initial visibility (start expanded)</h2>`);
  _push(serverRenderer.ssrRenderComponent(_component_WButton, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Toggle Collapse`);
      } else {
        return [
          vue.createTextVNode("Toggle Collapse")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WCollapse, {
    modelValue: $setup.collapse2,
    "onUpdate:modelValue": ($event) => $setup.collapse2 = $event
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="border p-3"${_scopeId}> Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger. </div>`);
      } else {
        return [
          vue.createVNode("div", { class: "border p-3" }, " Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger. ")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$B = _sfc_main$B.setup;
_sfc_main$B.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/collapse/index.html.vue");
  return _sfc_setup$B ? _sfc_setup$B(props, ctx) : void 0;
};
var index_html$q = /* @__PURE__ */ _export_sfc(_sfc_main$B, [["ssrRender", _sfc_ssrRender$c]]);
var index_html$r = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$q
});
const _sfc_main$A = {};
function _sfc_ssrRender$b(_ctx, _push, _parent, _attrs) {
  const _component_WDropdown = vue.resolveComponent("WDropdown");
  const _component_WDropdownItem = vue.resolveComponent("WDropdownItem");
  const _component_WDropdownDivider = vue.resolveComponent("WDropdownDivider");
  const _component_WDropdownButton = vue.resolveComponent("WDropdownButton");
  _push(`<!--[--><h1 id="dropdown" tabindex="-1"><a class="header-anchor" href="#dropdown" aria-hidden="true">#</a> Dropdown</h1><p>Dropdowns are toggleable, contextual overlays for displaying lists of links and actions in a dropdown menu format.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    text: "Dropdown Button",
    class: "m-md-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`First Action`);
            } else {
              return [
                vue.createTextVNode("First Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Second Action`);
            } else {
              return [
                vue.createTextVNode("Second Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Third Action`);
            } else {
              return [
                vue.createTextVNode("Third Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownDivider, null, null, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { active: "" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Active action`);
            } else {
              return [
                vue.createTextVNode("Active action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { disabled: "" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Disabled action`);
            } else {
              return [
                vue.createTextVNode("Disabled action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("First Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Second Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Third Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownDivider),
          vue.createVNode(_component_WDropdownItem, { active: "" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Active action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { disabled: "" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Disabled action")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Dropdown Button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-md-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>First Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Second Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Third Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownDivider</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownDivider</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">active</span><span class="token punctuation">&gt;</span></span>Active action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span>Disabled action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="button-content" tabindex="-1"><a class="header-anchor" href="#button-content" aria-hidden="true">#</a> Button content</h2><p>You can customize the text of the dropdown button by using either the <code>text</code> prop (shown in previous examples), or use the <code>button-content</code> slot instead of the text prop. The <code>button-content</code> slot allows you to use basic HTML and icons in the button content.</p><p>If both the prop text and slot button-content are present, the slot button-content will take precedence.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    text: "Button text via Prop",
    class: "me-3"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`An item`);
            } else {
              return [
                vue.createTextVNode("An item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another item`);
            } else {
              return [
                vue.createTextVNode("Another item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("An item")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another item")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, null, {
    "button-content": vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Custom <strong${_scopeId}>Content</strong> with <em${_scopeId}>HTML</em> via Slot `);
      } else {
        return [
          vue.createTextVNode(" Custom "),
          vue.createVNode("strong", null, "Content"),
          vue.createTextVNode(" with "),
          vue.createVNode("em", null, "HTML"),
          vue.createTextVNode(" via Slot ")
        ];
      }
    }),
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`An item`);
            } else {
              return [
                vue.createTextVNode("An item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another item`);
            } else {
              return [
                vue.createTextVNode("Another item")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("An item")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another item")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Button text via Prop<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>me-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>An item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#button-content</span><span class="token punctuation">&gt;</span></span>
        Custom <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>Content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> with <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span> via Slot
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>An item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="positioning-direction" tabindex="-1"><a class="header-anchor" href="#positioning-direction" aria-hidden="true">#</a> Positioning / Direction</h2><p>Dropdown supports various positioning such as left and right aligned, dropdown and dropup, and supports auto-flipping (dropdown to dropup, and vice-versa) when the menu would overflow off of the visible screen area.</p><h2 id="menu-alignment" tabindex="-1"><a class="header-anchor" href="#menu-alignment" aria-hidden="true">#</a> Menu alignment</h2><p>The dropdown menu can either be left aligned (default) or right aligned with respect to the button above it. To have the dropdown aligned on the right, set the <code>dir=&quot;right&quot;</code> prop.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    text: "Left align",
    variant: "primary",
    class: "m-2",
    dir: "left"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    dir: "right",
    text: "Right align",
    variant: "primary",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Left align<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Something else here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Right align<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Something else here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="dropup" tabindex="-1"><a class="header-anchor" href="#dropup" aria-hidden="true">#</a> Dropup</h3><p>Turn your dropdown menu into a drop-up menu by setting the <code>dir=&quot;top&quot;</code> prop.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    dropup: "",
    text: "Drop-Up",
    dir: "top",
    variant: "primary",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">dropup</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Drop-Up<span class="token punctuation">&quot;</span></span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Something else here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="sizing" tabindex="-1"><a class="header-anchor" href="#sizing" aria-hidden="true">#</a> Sizing</h2><p>Dropdowns work with trigger buttons of all sizes, including default and split dropdown buttons.</p><p>Set the <code>size</code> prop to either <code>sm</code> for small button(s), or <code>lg</code> for large button(s).</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    size: "lg",
    text: "Large",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    size: "lg",
    split: "",
    text: "Large Split",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here...`);
            } else {
              return [
                vue.createTextVNode("Something else here...")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here...")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    size: "sm",
    text: "Small",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here...`);
            } else {
              return [
                vue.createTextVNode("Something else here...")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here...")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    size: "sm",
    split: "",
    text: "Small Split",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownButton, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here...`);
            } else {
              return [
                vue.createTextVNode("Something else here...")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownButton, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here...")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Large<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Something else here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">split</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Large Split<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Something else here...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Small<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Something else here...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">split</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Small Split<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>Something else here...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownButton</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="dropdown-color-variants" tabindex="-1"><a class="header-anchor" href="#dropdown-color-variants" aria-hidden="true">#</a> Dropdown color variants</h2><p>The dropdown toggle button can have one of the standard Bootstrap contextual variants applied by setting the prop variant to <code>success</code>, <code>primary</code>,<code>info</code>, <code>danger</code>, <code>link</code>, <code>outline-dark</code>, etc. (or custom variants, if defined). The default variant is <code>secondary</code>.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    text: "Primary",
    variant: "primary",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    text: "Success",
    variant: "success",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    text: "Outline Danger",
    variant: "outline-danger",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<p>You can also apply arbitrary classes to the toggle button via the <code>toggle-class</code> prop. This prop accepts either a string or array of strings.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    split: "",
    "split-variant": "outline-primary",
    variant: "primary",
    text: "Split Variant Dropdown",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here...`);
            } else {
              return [
                vue.createTextVNode("Something else here...")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here...")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span>
    <span class="token attr-name">split</span>
    <span class="token attr-name">split-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outline-primary<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Split Variant Dropdown<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Something else here...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="block-level-dropdowns" tabindex="-1"><a class="header-anchor" href="#block-level-dropdowns" aria-hidden="true">#</a> Block level dropdowns</h2><p>By default dropdowns act like buttons and are displayed inline. To create block level dropdowns (that span to the full width of a parent) set the <code>block</code> prop. Both, regular and split button dropdowns are supported.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    text: "Block Level Dropdown",
    block: "",
    variant: "primary",
    class: "m-2"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Block Level Dropdown<span class="token punctuation">&quot;</span></span> <span class="token attr-name">block</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Something else here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>If you want the dropdown menu to span to the full width of the parent container too, add the <code>w-100</code> utility class to the <code>menu-class</code> prop.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WDropdown, {
    text: "Block Level Dropdown Menu",
    block: "",
    variant: "primary",
    class: "m-2",
    "menu-class": "w-100"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Action`);
            } else {
              return [
                vue.createTextVNode("Action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Another action`);
            } else {
              return [
                vue.createTextVNode("Another action")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdownItem, { href: "#" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Something else here`);
            } else {
              return [
                vue.createTextVNode("Something else here")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Another action")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdownItem, { href: "#" }, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Something else here")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span>
    <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Block Level Dropdown Menu<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">block</span>
    <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">menu-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Another action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Something else here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><!--]-->`);
}
const _sfc_setup$A = _sfc_main$A.setup;
_sfc_main$A.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/dropdowns/index.html.vue");
  return _sfc_setup$A ? _sfc_setup$A(props, ctx) : void 0;
};
var index_html$o = /* @__PURE__ */ _export_sfc(_sfc_main$A, [["ssrRender", _sfc_ssrRender$b]]);
var index_html$p = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$o
});
const _sfc_main$z = {};
function _sfc_ssrRender$a(_ctx, _push, _parent, _attrs) {
  _push(`<!--[--><h1 id="form-input" tabindex="-1"><a class="header-anchor" href="#form-input" aria-hidden="true">#</a> Form Input</h1><h2 id="textual-and-value-inputs" tabindex="-1"><a class="header-anchor" href="#textual-and-value-inputs" aria-hidden="true">#</a> Textual and Value inputs</h2><p>Create various type inputs such as: <code>text</code>, <code>password</code>, <code>number</code>, <code>url</code>, <code>email</code>, <code>search</code>, <code>range</code>, <code>date</code> and more.</p><!--]-->`);
}
const _sfc_setup$z = _sfc_main$z.setup;
_sfc_main$z.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/dropdowns/input.html.vue");
  return _sfc_setup$z ? _sfc_setup$z(props, ctx) : void 0;
};
var input_html$3 = /* @__PURE__ */ _export_sfc(_sfc_main$z, [["ssrRender", _sfc_ssrRender$a]]);
var input_html$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": input_html$3
});
const _sfc_main$y = {
  __ssrInlineRender: true,
  setup(__props) {
    const status = vue.ref("not_accepted");
    return (_ctx, _push, _parent, _attrs) => {
      const _component_WCheckbox = vue.resolveComponent("WCheckbox");
      _push(`<!--[--><h1 id="form-checkbox" tabindex="-1"><a class="header-anchor" href="#form-checkbox" aria-hidden="true">#</a> Form Checkbox</h1><p>For cross browser consistency, <code>&lt;CheckboxGroup&gt;</code> and <code>&lt;Checkbox&gt;</code> use wovoui&#39;s custom checkbox input to replace the browser default checkbox input. It is built on top of semantic and accessible markup, so it is a solid replacement for the default checkbox input.</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCheckbox, {
        id: "checkbox-1",
        modelValue: status.value,
        "onUpdate:modelValue": ($event) => status.value = $event,
        name: "checkbox-1",
        value: "accepted",
        "unchecked-value": "not_accepted"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` I accept the terms and use `);
          } else {
            return [
              vue.createTextVNode(" I accept the terms and use ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div>State: <strong>${serverRenderer.ssrInterpolate(status.value)}</strong></div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span>
            <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox-1<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>status<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox-1<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accepted<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">unchecked-value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>not_accepted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            I accept the terms and use
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>State: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>{{ status }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;not_accepted&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="control-sizing" tabindex="-1"><a class="header-anchor" href="#control-sizing" aria-hidden="true">#</a> Control sizing</h2><p>Use the <code>size</code> prop to control the size of the checkbox. The default size is medium. Supported size values are <code>sm</code> ( small) and <code>lg</code> (large).</p><div class="bootstrap">`);
      _push(serverRenderer.ssrRenderComponent(_component_WCheckbox, { size: "sm" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Small`);
          } else {
            return [
              vue.createTextVNode("Small")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WCheckbox, null, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Default`);
          } else {
            return [
              vue.createTextVNode("Default")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WCheckbox, { size: "lg" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Large`);
          } else {
            return [
              vue.createTextVNode("Large")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span><span class="token punctuation">&gt;</span></span>Default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Checkbox</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Large<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Checkbox</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Sizes can be set on individual <code>&lt;Checkbox&gt;</code> components, or inherited from the size setting of <code>&lt;CheckboxGroup&gt;</code>.</p><!--]-->`);
    };
  }
};
const _sfc_setup$y = _sfc_main$y.setup;
_sfc_main$y.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/checkbox.html.vue");
  return _sfc_setup$y ? _sfc_setup$y(props, ctx) : void 0;
};
var checkbox_html$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main$y
});
const _sfc_main$x = {};
function _sfc_ssrRender$9(_ctx, _push, _parent, _attrs) {
  const _component_WFormGroup = vue.resolveComponent("WFormGroup");
  const _component_WFormLabel = vue.resolveComponent("WFormLabel");
  const _component_WInput = vue.resolveComponent("WInput");
  _push(`<!--[--><h1 id="form-group" tabindex="-1"><a class="header-anchor" href="#form-group" aria-hidden="true">#</a> Form Group</h1><p>Bootstrap 5 actually doesn&#39;t have <code>form group</code> component. But to keep backward compatibility with previous Bootstrap versions, we have decided to make this component. This component adds a custom <code>form-group</code> class and also adds Bootstrap&#39;s utility class <code>mb-3</code> to keep a separation between two vertically adjacent form groups.</p><p>The custom <code>form-group</code> class doesn&#39;t have any default styling. It is just added to make it more semantic. You can use this class to apply styles to the component itself.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WFormGroup, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WFormLabel, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Name`);
            } else {
              return [
                vue.createTextVNode("Name")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WInput, {
          type: "text",
          placeholder: "User Name"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WFormLabel, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Name")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WInput, {
            type: "text",
            placeholder: "User Name"
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WFormGroup, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WFormLabel, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Email`);
            } else {
              return [
                vue.createTextVNode("Email")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WInput, {
          type: "email",
          placeholder: "User Email"
        }, null, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WFormLabel, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Email")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WInput, {
            type: "email",
            placeholder: "User Email"
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormLabel</span><span class="token punctuation">&gt;</span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormLabel</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User Name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormLabel</span><span class="token punctuation">&gt;</span></span>Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormLabel</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User Email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="label-prop" tabindex="-1"><a class="header-anchor" href="#label-prop" aria-hidden="true">#</a> <code>label</code> prop</h2><p><code>&lt;FormLabel&gt;</code> component can be used to make forms <code>label</code> in Bootstrap 5 styling. You can also use <code>label</code> prop to the <code>&lt;FormGroup&gt;</code> component. Output of the both is same. Example form <code>&lt;FormLabel&gt;</code> is the above one. Example for <code>label</code> prop is the below one:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User Name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User Email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="label-slot" tabindex="-1"><a class="header-anchor" href="#label-slot" aria-hidden="true">#</a> <code>label</code> slot</h2><p>You can use <code>label</code> slot too, to make form group&#39;s label. When You are using <code>label</code> slot, any HTML markup can be used.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#label</span><span class="token punctuation">&gt;</span></span>
    Name
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User Name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#label</span><span class="token punctuation">&gt;</span></span>
    Email
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User Email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="horizontal-layout" tabindex="-1"><a class="header-anchor" href="#horizontal-layout" aria-hidden="true">#</a> Horizontal layout</h2><p>By default, the label appears above the input element(s), but you may optionally render horizontal (label to the left of the input) at the various standard Bootstrap breakpoints.</p><p>The props <code>label-cols</code> and <code>label-cols-{breakpoint}</code> allow you to specify how many columns the label should occupy in the row. The input will fill the rest of the row width. The value must be a number greater than 0. Or you can set the prop to true to make the label and input(s) each occupy half of the width of the rendered row (handy if you have custom Bootstrap with an odd number of columns), or set the value to &#39;auto&#39; so that the label occupies only the width that is needed.</p><!--]-->`);
}
const _sfc_setup$x = _sfc_main$x.setup;
_sfc_main$x.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/group.html.vue");
  return _sfc_setup$x ? _sfc_setup$x(props, ctx) : void 0;
};
var group_html$1 = /* @__PURE__ */ _export_sfc(_sfc_main$x, [["ssrRender", _sfc_ssrRender$9]]);
var group_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": group_html$1
});
const _sfc_main$w = {
  __ssrInlineRender: true,
  setup(__props) {
    const form1 = vue.reactive({
      email: "",
      phone: ""
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_WCard = vue.resolveComponent("WCard");
      const _component_WFormGroup = vue.resolveComponent("WFormGroup");
      const _component_WInput = vue.resolveComponent("WInput");
      const _component_WButton = vue.resolveComponent("WButton");
      _push(`<!--[--><h1 id="form" tabindex="-1"><a class="header-anchor" href="#form" aria-hidden="true">#</a> Form</h1><p><code>wovoui&#39;s</code> form component and helper components that optionally support inline form styles and validation states. Pair them up with other BootstrapVue form control components for an easy customized, and responsive, layout with a consistent look and feel.</p><h2 id="introduction-to-forms-and-controls" tabindex="-1"><a class="header-anchor" href="#introduction-to-forms-and-controls" aria-hidden="true">#</a> Introduction to forms and controls</h2><p>Be sure to use an appropriate type on all inputs (e.g., email for email address or number for numerical information) to take advantage of newer input controls like email verification, number selection, and more.</p><p>Here&#39;s a quick example to demonstrate BootstrapVue&#39;s form styles. Keep reading for documentation on supported components, form layout, and more.</p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { header: "Form Example" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<form${_scopeId}>`);
            _push2(serverRenderer.ssrRenderComponent(_component_WFormGroup, { label: "Email" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WInput, {
                    type: "email",
                    modelValue: vue.unref(form1).email,
                    "onUpdate:modelValue": ($event) => vue.unref(form1).email = $event,
                    placeholder: "Email Address"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WInput, {
                      type: "email",
                      modelValue: vue.unref(form1).email,
                      "onUpdate:modelValue": ($event) => vue.unref(form1).email = $event,
                      placeholder: "Email Address"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WFormGroup, { label: "Phone" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WInput, {
                    type: "tel",
                    modelValue: vue.unref(form1).phone,
                    "onUpdate:modelValue": ($event) => vue.unref(form1).phone = $event,
                    placeholder: "Phone Number"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WInput, {
                      type: "tel",
                      modelValue: vue.unref(form1).phone,
                      "onUpdate:modelValue": ($event) => vue.unref(form1).phone = $event,
                      placeholder: "Phone Number"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WButton, {
              class: "w-100 mt-3",
              variant: "dark"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`SUBMIT`);
                } else {
                  return [
                    vue.createTextVNode("SUBMIT")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</form>`);
          } else {
            return [
              vue.createVNode("form", null, [
                vue.createVNode(_component_WFormGroup, { label: "Email" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_WInput, {
                      type: "email",
                      modelValue: vue.unref(form1).email,
                      "onUpdate:modelValue": ($event) => vue.unref(form1).email = $event,
                      placeholder: "Email Address"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WFormGroup, { label: "Phone" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_WInput, {
                      type: "tel",
                      modelValue: vue.unref(form1).phone,
                      "onUpdate:modelValue": ($event) => vue.unref(form1).phone = $event,
                      placeholder: "Phone Number"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, {
                  class: "w-100 mt-3",
                  variant: "dark"
                }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("SUBMIT")
                  ]),
                  _: 1
                })
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WCard, {
        header: "Form Data Result",
        class: "mt-3"
      }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<pre${_scopeId}>${serverRenderer.ssrInterpolate(JSON.parse(JSON.stringify(vue.unref(form1), null, "\n")))}</pre>`);
          } else {
            return [
              vue.createVNode("pre", null, vue.toDisplayString(JSON.parse(JSON.stringify(vue.unref(form1), null, "\n"))), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Form Example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form1.email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Email Address<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Phone<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tel<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form1.phone<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Phone Number<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-100 mt-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dark<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>SUBMIT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Card</span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Form Data Result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>{{JSON.parse(JSON.stringify(form1,null,&#39;\\n&#39;))}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Card</span><span class="token punctuation">&gt;</span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>reactive<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> form1 <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><!--]-->`);
    };
  }
};
const _sfc_setup$w = _sfc_main$w.setup;
_sfc_main$w.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/index.html.vue");
  return _sfc_setup$w ? _sfc_setup$w(props, ctx) : void 0;
};
var index_html$n = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main$w
});
const _sfc_main$v = {
  __ssrInlineRender: true,
  setup(__props) {
    const text1 = vue.ref("");
    const types = ["text", "password", "email", "number", "url", "tel", "search", "date", "datetime", "datetime-local", "month", "week", "time", "range", "color"];
    return (_ctx, _push, _parent, _attrs) => {
      const _component_WInput = vue.resolveComponent("WInput");
      const _component_WRow = vue.resolveComponent("WRow");
      const _component_WCol = vue.resolveComponent("WCol");
      _push(`<!--[--><h1 id="form-input" tabindex="-1"><a class="header-anchor" href="#form-input" aria-hidden="true">#</a> Form Input</h1><p>This component is used to create html <code>input</code> element, with bootstrap styling and Vue model bindings. It also has some other features like modifiers, input debouncing etc.</p><h2 id="textual-and-value-inputs" tabindex="-1"><a class="header-anchor" href="#textual-and-value-inputs" aria-hidden="true">#</a> Textual and Value inputs</h2><p>Create various type inputs such as:<code>text</code>, <code>password</code>, <code>number</code>, <code>url</code>, <code>email</code>, <code>search</code>, <code>range</code>, <code>date</code> and more.</p>`);
      _push(serverRenderer.ssrRenderComponent(_component_WInput, {
        modelValue: text1.value,
        "onUpdate:modelValue": ($event) => text1.value = $event,
        placeholder: "Enter your name"
      }, null, _parent));
      _push(`<div class="mt-2">Value: ${serverRenderer.ssrInterpolate(text1.value)}</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Value: {{ text1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>Input<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@wovosoft/wovoui&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> text1 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="input-type" tabindex="-1"><a class="header-anchor" href="#input-type" aria-hidden="true">#</a> Input Type</h2><p><code>Input</code> defaults to a text input, but you can set the type prop to one of the supported native browser HTML5 types:</p><!--[-->`);
      serverRenderer.ssrRenderList(types, (c, i) => {
        _push(`<!--[--><code>${serverRenderer.ssrInterpolate(c)}</code> ${serverRenderer.ssrInterpolate(i + 1 < types.length ? ", " : ".")}<!--]-->`);
      });
      _push(`<!--]--><div class="border p-2 mt-5"><!--[-->`);
      serverRenderer.ssrRenderList(types, (t) => {
        _push(serverRenderer.ssrRenderComponent(_component_WRow, { class: "mb-1" }, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(serverRenderer.ssrRenderComponent(_component_WCol, { md: "4" }, {
                default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`Type <code${_scopeId2}>${serverRenderer.ssrInterpolate(t)}</code> :`);
                  } else {
                    return [
                      vue.createTextVNode("Type "),
                      vue.createVNode("code", null, vue.toDisplayString(t), 1),
                      vue.createTextVNode(" :")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(serverRenderer.ssrRenderComponent(_component_WCol, { md: "8" }, {
                default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(serverRenderer.ssrRenderComponent(_component_WInput, { type: t }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      vue.createVNode(_component_WInput, { type: t }, null, 8, ["type"])
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
            } else {
              return [
                vue.createVNode(_component_WCol, { md: "4" }, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Type "),
                    vue.createVNode("code", null, vue.toDisplayString(t), 1),
                    vue.createTextVNode(" :")
                  ]),
                  _: 2
                }, 1024),
                vue.createVNode(_component_WCol, { md: "8" }, {
                  default: vue.withCtx(() => [
                    vue.createVNode(_component_WInput, { type: t }, null, 8, ["type"])
                  ]),
                  _: 2
                }, 1024)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border p-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t in [<span class="token punctuation">&#39;</span>text<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>password<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>email<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>number<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>url<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>tel<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>search<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>date<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>datetime<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>datetime-local<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>month<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>week<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>time<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>range<span class="token punctuation">&#39;</span>, <span class="token punctuation">&#39;</span>color<span class="token punctuation">&#39;</span>]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">md</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Type <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>{{ t }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> :<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">md</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">:type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="control-sizing" tabindex="-1"><a class="header-anchor" href="#control-sizing" aria-hidden="true">#</a> Control sizing</h2><p>Set heights using the <code>size</code> prop to <code>sm</code> or <code>lg</code> for small or large respectively. To control width, place the input inside standard Bootstrap grid column.</p><div class="border p-2">`);
      _push(serverRenderer.ssrRenderComponent(_component_WRow, { class: "my-1" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCol, { sm: "2" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<label for="input-small"${_scopeId2}>Small:</label>`);
                } else {
                  return [
                    vue.createVNode("label", { for: "input-small" }, "Small:")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCol, { sm: "10" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WInput, {
                    id: "input-small",
                    size: "sm",
                    placeholder: "Enter your name"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WInput, {
                      id: "input-small",
                      size: "sm",
                      placeholder: "Enter your name"
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCol, { sm: "2" }, {
                default: vue.withCtx(() => [
                  vue.createVNode("label", { for: "input-small" }, "Small:")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCol, { sm: "10" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WInput, {
                    id: "input-small",
                    size: "sm",
                    placeholder: "Enter your name"
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WRow, { class: "my-1" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCol, { sm: "2" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<label for="input-default"${_scopeId2}>Default:</label>`);
                } else {
                  return [
                    vue.createVNode("label", { for: "input-default" }, "Default:")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCol, { sm: "10" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WInput, {
                    id: "input-default",
                    placeholder: "Enter your name"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WInput, {
                      id: "input-default",
                      placeholder: "Enter your name"
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCol, { sm: "2" }, {
                default: vue.withCtx(() => [
                  vue.createVNode("label", { for: "input-default" }, "Default:")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCol, { sm: "10" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WInput, {
                    id: "input-default",
                    placeholder: "Enter your name"
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WRow, { class: "my-1" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WCol, { sm: "2" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<label for="input-large"${_scopeId2}>Large:</label>`);
                } else {
                  return [
                    vue.createVNode("label", { for: "input-large" }, "Large:")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WCol, { sm: "10" }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(serverRenderer.ssrRenderComponent(_component_WInput, {
                    id: "input-large",
                    size: "lg",
                    placeholder: "Enter your name"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vue.createVNode(_component_WInput, {
                      id: "input-large",
                      size: "lg",
                      placeholder: "Enter your name"
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WCol, { sm: "2" }, {
                default: vue.withCtx(() => [
                  vue.createVNode("label", { for: "input-large" }, "Large:")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WCol, { sm: "10" }, {
                default: vue.withCtx(() => [
                  vue.createVNode(_component_WInput, {
                    id: "input-large",
                    size: "lg",
                    placeholder: "Enter your name"
                  })
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border p-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Small:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-small<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Default:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-default<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-large<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Large:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">sm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-large<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Input</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><!--]-->`);
    };
  }
};
const _sfc_setup$v = _sfc_main$v.setup;
_sfc_main$v.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/input.html.vue");
  return _sfc_setup$v ? _sfc_setup$v(props, ctx) : void 0;
};
var input_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main$v
});
const _sfc_main$u = {
  __ssrInlineRender: true,
  setup(__props) {
    const selected = vue.ref("");
    return (_ctx, _push, _parent, _attrs) => {
      const _component_WFormGroup = vue.resolveComponent("WFormGroup");
      const _component_WRadio = vue.resolveComponent("WRadio");
      _push(`<!--[--><h1 id="form-radio" tabindex="-1"><a class="header-anchor" href="#form-radio" aria-hidden="true">#</a> Form Radio</h1><p>This component is used to create html <code>radio</code> elements with bootstrap styling and vue model bindings.</p><h2 id="form-radio-inputs" tabindex="-1"><a class="header-anchor" href="#form-radio-inputs" aria-hidden="true">#</a> Form Radio Inputs</h2>`);
      _push(serverRenderer.ssrRenderComponent(_component_WFormGroup, { label: "Individual radios" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WRadio, {
              modelValue: selected.value,
              "onUpdate:modelValue": ($event) => selected.value = $event,
              name: "some-radios",
              value: "A"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Option A`);
                } else {
                  return [
                    vue.createTextVNode("Option A")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_WRadio, {
              modelValue: selected.value,
              "onUpdate:modelValue": ($event) => selected.value = $event,
              name: "some-radios",
              value: "B"
            }, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Option B`);
                } else {
                  return [
                    vue.createTextVNode("Option B")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WRadio, {
                modelValue: selected.value,
                "onUpdate:modelValue": ($event) => selected.value = $event,
                name: "some-radios",
                value: "A"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Option A")
                ]),
                _: 1
              }, 8, ["modelValue", "onUpdate:modelValue"]),
              vue.createVNode(_component_WRadio, {
                modelValue: selected.value,
                "onUpdate:modelValue": ($event) => selected.value = $event,
                name: "some-radios",
                value: "B"
              }, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Option B")
                ]),
                _: 1
              }, 8, ["modelValue", "onUpdate:modelValue"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="mt-3">Selected: <strong>${serverRenderer.ssrInterpolate(selected.value)}</strong></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormGroup</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Individual radios<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selected<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>some-radios<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>A<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Option A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Radio</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selected<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>some-radios<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>B<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Option B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Radio</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormGroup</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Selected: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>{{ selected }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>Radio<span class="token punctuation">,</span> FormGroup<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@wovosoft/wovoui&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>Radio<span class="token punctuation">,</span> FormGroup<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">selected</span><span class="token operator">:</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><!--]-->`);
    };
  }
};
const _sfc_setup$u = _sfc_main$u.setup;
_sfc_main$u.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/radio.html.vue");
  return _sfc_setup$u ? _sfc_setup$u(props, ctx) : void 0;
};
var radio_html$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main$u
});
const _sfc_main$t = {};
function _sfc_ssrRender$8(_ctx, _push, _parent, _attrs) {
  const _component_WRating = vue.resolveComponent("WRating");
  const _component_WInput = vue.resolveComponent("WInput");
  _push(`<!--[--><h1 id="form-rating" tabindex="-1"><a class="header-anchor" href="#form-rating" aria-hidden="true">#</a> Form Rating</h1><p><code>&lt;Rating&gt;</code> is a custom rating component, built with Bootstrap&#39;s icon classes. Internally it uses <code>&lt;Icon&gt;</code> component.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WRating, {
    modelValue: _ctx.rating,
    "onUpdate:modelValue": ($event) => _ctx.rating = $event,
    class: "border p-1"
  }, null, _parent));
  _push(`<br>`);
  _push(serverRenderer.ssrRenderComponent(_component_WInput, {
    type: "number",
    modelValue: _ctx.rating,
    "onUpdate:modelValue": ($event) => _ctx.rating = $event
  }, null, _parent));
  _push(`<h2 id="variant-and-color" tabindex="-1"><a class="header-anchor" href="#variant-and-color" aria-hidden="true">#</a> Variant and color</h2><p>Easily apply one of the Bootstrap theme color variants to the rating icon via the <code>variant</code> prop. The default is to use the default form control text color.</p><div>`);
  _push(serverRenderer.ssrRenderComponent(_component_WRating, {
    modelValue: _ctx.rating2,
    "onUpdate:modelValue": ($event) => _ctx.rating2 = $event,
    variant: "warning",
    class: "mb-1 border p-2"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WRating, {
    modelValue: _ctx.rating2,
    "onUpdate:modelValue": ($event) => _ctx.rating2 = $event,
    variant: "success",
    class: "mb-1 border p-2"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WRating, {
    modelValue: _ctx.rating2,
    "onUpdate:modelValue": ($event) => _ctx.rating2 = $event,
    variant: "danger",
    class: "mb-1 border p-2"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WRating, {
    modelValue: _ctx.rating2,
    "onUpdate:modelValue": ($event) => _ctx.rating2 = $event,
    variant: "primary",
    class: "mb-1 border p-2"
  }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WRating, {
    modelValue: _ctx.rating2,
    "onUpdate:modelValue": ($event) => _ctx.rating2 = $event,
    variant: "info",
    class: "mb-1 border p-2"
  }, null, _parent));
  _push(`<p class="mt-2">Value: ${serverRenderer.ssrInterpolate(_ctx.rating2)}</p></div><!--]-->`);
}
const _sfc_setup$t = _sfc_main$t.setup;
_sfc_main$t.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/rating.html.vue");
  return _sfc_setup$t ? _sfc_setup$t(props, ctx) : void 0;
};
var rating_html$1 = /* @__PURE__ */ _export_sfc(_sfc_main$t, [["ssrRender", _sfc_ssrRender$8]]);
var rating_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": rating_html$1
});
const _sfc_main$s = {
  data() {
    return {
      options: [
        { value: null, text: "Please select an option" },
        { value: "a", text: "This is First option" },
        { value: "b", text: "Selected Option" },
        { value: { C: "3PO" }, text: "This is an option with object value" },
        { value: "d", text: "This one is disabled", disabled: true }
      ]
    };
  }
};
function _sfc_ssrRender$7(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_WSelect = vue.resolveComponent("WSelect");
  const _component_WTabs = vue.resolveComponent("WTabs");
  const _component_WTab = vue.resolveComponent("WTab");
  _push(`<!--[--><h1 id="form-select" tabindex="-1"><a class="header-anchor" href="#form-select" aria-hidden="true">#</a> Form Select</h1><p>Customize the native <code>&lt;select&gt;</code>&#39;s with custom CSS that changes the element\u2019s initial appearance.</p><h2 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> Default</h2>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSelect, { "aria-label": "Default select example" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<option selected${_scopeId}>Open this select menu</option><option value="1"${_scopeId}>One</option><option value="2"${_scopeId}>Two</option><option value="3"${_scopeId}>Three</option>`);
      } else {
        return [
          vue.createVNode("option", { selected: "" }, "Open this select menu"),
          vue.createVNode("option", { value: "1" }, "One"),
          vue.createVNode("option", { value: "2" }, "Two"),
          vue.createVNode("option", { value: "3" }, "Three")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Select</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Default select example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">&gt;</span></span>Open this select menu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>One<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Three<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="sizing" tabindex="-1"><a class="header-anchor" href="#sizing" aria-hidden="true">#</a> Sizing</h2>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSelect, {
    class: "mb-3",
    size: "lg",
    "aria-label": ".form-select-lg example"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<option selected${_scopeId}>Open this select menu</option><option value="1"${_scopeId}>One</option><option value="2"${_scopeId}>Two</option><option value="3"${_scopeId}>Three</option>`);
      } else {
        return [
          vue.createVNode("option", { selected: "" }, "Open this select menu"),
          vue.createVNode("option", { value: "1" }, "One"),
          vue.createVNode("option", { value: "2" }, "Two"),
          vue.createVNode("option", { value: "3" }, "Three")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WSelect, {
    size: "sm",
    "aria-label": ".form-select-sm example"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<option selected${_scopeId}>Open this select menu</option><option value="1"${_scopeId}>One</option><option value="2"${_scopeId}>Two</option><option value="3"${_scopeId}>Three</option>`);
      } else {
        return [
          vue.createVNode("option", { selected: "" }, "Open this select menu"),
          vue.createVNode("option", { value: "1" }, "One"),
          vue.createVNode("option", { value: "2" }, "Two"),
          vue.createVNode("option", { value: "3" }, "Three")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.form-select-lg example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">&gt;</span></span>Open this select menu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>One<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Three<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Select</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Select</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.form-select-sm example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">&gt;</span></span>Open this select menu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>One<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Three<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>The <code>multiple</code> attribute is also supported:</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSelect, {
    class: "form-select",
    multiple: "",
    "aria-label": "multiple select example"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<option selected${_scopeId}>Open this select menu</option><option value="1"${_scopeId}>One</option><option value="2"${_scopeId}>Two</option><option value="3"${_scopeId}>Three</option>`);
      } else {
        return [
          vue.createVNode("option", { selected: "" }, "Open this select menu"),
          vue.createVNode("option", { value: "1" }, "One"),
          vue.createVNode("option", { value: "2" }, "Two"),
          vue.createVNode("option", { value: "3" }, "Three")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Select</span> <span class="token attr-name">multiple</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multiple select example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">&gt;</span></span>Open this select menu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>One<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Three<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="disabled" tabindex="-1"><a class="header-anchor" href="#disabled" aria-hidden="true">#</a> Disabled</h2><p>Add the <code>disabled</code> boolean attribute on a select to give it a grayed out appearance and remove pointer events.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSelect, {
    "aria-label": "Disabled select example",
    disabled: ""
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<option selected${_scopeId}>Open this select menu</option><option value="1"${_scopeId}>One</option><option value="2"${_scopeId}>Two</option><option value="3"${_scopeId}>Three</option>`);
      } else {
        return [
          vue.createVNode("option", { selected: "" }, "Open this select menu"),
          vue.createVNode("option", { value: "1" }, "One"),
          vue.createVNode("option", { value: "2" }, "Two"),
          vue.createVNode("option", { value: "3" }, "Three")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Select</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Disabled select example<span class="token punctuation">&quot;</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token punctuation">&gt;</span></span>Open this select menu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>One<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Three<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="options-prop" tabindex="-1"><a class="header-anchor" href="#options-prop" aria-hidden="true">#</a> <code>options</code> prop</h2><p>You can define <code>options</code> prop; array of options.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSelect, { options: $data.options }, null, _parent));
  _push(serverRenderer.ssrRenderComponent(_component_WTabs, { class: "mt-3" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WTab, { title: "Markup" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="language-vue ext-vue line-numbers-mode"${_scopeId2}><pre class="language-vue"${_scopeId2}><code${_scopeId2}><span class="token tag"${_scopeId2}><span class="token tag"${_scopeId2}><span class="token punctuation"${_scopeId2}>&lt;</span>Select</span> <span class="token attr-name"${_scopeId2}>:options</span><span class="token attr-value"${_scopeId2}><span class="token punctuation attr-equals"${_scopeId2}>=</span><span class="token punctuation"${_scopeId2}>&quot;</span>options<span class="token punctuation"${_scopeId2}>&quot;</span></span><span class="token punctuation"${_scopeId2}>&gt;</span></span><span class="token tag"${_scopeId2}><span class="token tag"${_scopeId2}><span class="token punctuation"${_scopeId2}>&lt;/</span>Select</span><span class="token punctuation"${_scopeId2}>&gt;</span></span>
</code></pre><div class="line-numbers"${_scopeId2}><span class="line-number"${_scopeId2}>1</span><br${_scopeId2}></div></div>`);
            } else {
              return [
                vue.createVNode("div", { class: "language-vue ext-vue line-numbers-mode" }, [
                  vue.createVNode("pre", { class: "language-vue" }, [
                    vue.createVNode("code", null, [
                      vue.createVNode("span", { class: "token tag" }, [
                        vue.createVNode("span", { class: "token tag" }, [
                          vue.createVNode("span", { class: "token punctuation" }, "<"),
                          vue.createTextVNode("Select")
                        ]),
                        vue.createTextVNode(),
                        vue.createVNode("span", { class: "token attr-name" }, ":options"),
                        vue.createVNode("span", { class: "token attr-value" }, [
                          vue.createVNode("span", { class: "token punctuation attr-equals" }, "="),
                          vue.createVNode("span", { class: "token punctuation" }, '"'),
                          vue.createTextVNode("options"),
                          vue.createVNode("span", { class: "token punctuation" }, '"')
                        ]),
                        vue.createVNode("span", { class: "token punctuation" }, ">")
                      ]),
                      vue.createVNode("span", { class: "token tag" }, [
                        vue.createVNode("span", { class: "token tag" }, [
                          vue.createVNode("span", { class: "token punctuation" }, "</"),
                          vue.createTextVNode("Select")
                        ]),
                        vue.createVNode("span", { class: "token punctuation" }, ">")
                      ]),
                      vue.createTextVNode("\n")
                    ])
                  ]),
                  vue.createVNode("div", { class: "line-numbers" }, [
                    vue.createVNode("span", { class: "line-number" }, "1"),
                    vue.createVNode("br")
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WTab, { title: "script" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="language-javascript ext-js line-numbers-mode"${_scopeId2}><pre class="language-javascript"${_scopeId2}><code${_scopeId2}><span class="token keyword"${_scopeId2}>const</span> options <span class="token operator"${_scopeId2}>=</span> <span class="token punctuation"${_scopeId2}>[</span>
    <span class="token punctuation"${_scopeId2}>{</span><span class="token literal-property property"${_scopeId2}>value</span><span class="token operator"${_scopeId2}>:</span> <span class="token keyword"${_scopeId2}>null</span><span class="token punctuation"${_scopeId2}>,</span> <span class="token literal-property property"${_scopeId2}>text</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;Please select an option&#39;</span><span class="token punctuation"${_scopeId2}>}</span><span class="token punctuation"${_scopeId2}>,</span>
    <span class="token punctuation"${_scopeId2}>{</span><span class="token literal-property property"${_scopeId2}>value</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;a&#39;</span><span class="token punctuation"${_scopeId2}>,</span> <span class="token literal-property property"${_scopeId2}>text</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;This is First option&#39;</span><span class="token punctuation"${_scopeId2}>}</span><span class="token punctuation"${_scopeId2}>,</span>
    <span class="token punctuation"${_scopeId2}>{</span><span class="token literal-property property"${_scopeId2}>value</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;b&#39;</span><span class="token punctuation"${_scopeId2}>,</span> <span class="token literal-property property"${_scopeId2}>text</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;Selected Option&#39;</span><span class="token punctuation"${_scopeId2}>}</span><span class="token punctuation"${_scopeId2}>,</span>
    <span class="token punctuation"${_scopeId2}>{</span><span class="token literal-property property"${_scopeId2}>value</span><span class="token operator"${_scopeId2}>:</span> <span class="token punctuation"${_scopeId2}>{</span><span class="token constant"${_scopeId2}>C</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;3PO&#39;</span><span class="token punctuation"${_scopeId2}>}</span><span class="token punctuation"${_scopeId2}>,</span> <span class="token literal-property property"${_scopeId2}>text</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;This is an option with object value&#39;</span><span class="token punctuation"${_scopeId2}>}</span><span class="token punctuation"${_scopeId2}>,</span>
    <span class="token punctuation"${_scopeId2}>{</span><span class="token literal-property property"${_scopeId2}>value</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;d&#39;</span><span class="token punctuation"${_scopeId2}>,</span> <span class="token literal-property property"${_scopeId2}>text</span><span class="token operator"${_scopeId2}>:</span> <span class="token string"${_scopeId2}>&#39;This one is disabled&#39;</span><span class="token punctuation"${_scopeId2}>,</span> <span class="token literal-property property"${_scopeId2}>disabled</span><span class="token operator"${_scopeId2}>:</span> <span class="token boolean"${_scopeId2}>true</span><span class="token punctuation"${_scopeId2}>}</span>
<span class="token punctuation"${_scopeId2}>]</span><span class="token punctuation"${_scopeId2}>;</span>
</code></pre><div class="line-numbers"${_scopeId2}><span class="line-number"${_scopeId2}>1</span><br${_scopeId2}><span class="line-number"${_scopeId2}>2</span><br${_scopeId2}><span class="line-number"${_scopeId2}>3</span><br${_scopeId2}><span class="line-number"${_scopeId2}>4</span><br${_scopeId2}><span class="line-number"${_scopeId2}>5</span><br${_scopeId2}><span class="line-number"${_scopeId2}>6</span><br${_scopeId2}><span class="line-number"${_scopeId2}>7</span><br${_scopeId2}></div></div>`);
            } else {
              return [
                vue.createVNode("div", { class: "language-javascript ext-js line-numbers-mode" }, [
                  vue.createVNode("pre", { class: "language-javascript" }, [
                    vue.createVNode("code", null, [
                      vue.createVNode("span", { class: "token keyword" }, "const"),
                      vue.createTextVNode(" options "),
                      vue.createVNode("span", { class: "token operator" }, "="),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token punctuation" }, "["),
                      vue.createTextVNode("\n    "),
                      vue.createVNode("span", { class: "token punctuation" }, "{"),
                      vue.createVNode("span", { class: "token literal-property property" }, "value"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token keyword" }, "null"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token literal-property property" }, "text"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'Please select an option'"),
                      vue.createVNode("span", { class: "token punctuation" }, "}"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode("\n    "),
                      vue.createVNode("span", { class: "token punctuation" }, "{"),
                      vue.createVNode("span", { class: "token literal-property property" }, "value"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'a'"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token literal-property property" }, "text"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'This is First option'"),
                      vue.createVNode("span", { class: "token punctuation" }, "}"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode("\n    "),
                      vue.createVNode("span", { class: "token punctuation" }, "{"),
                      vue.createVNode("span", { class: "token literal-property property" }, "value"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'b'"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token literal-property property" }, "text"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'Selected Option'"),
                      vue.createVNode("span", { class: "token punctuation" }, "}"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode("\n    "),
                      vue.createVNode("span", { class: "token punctuation" }, "{"),
                      vue.createVNode("span", { class: "token literal-property property" }, "value"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token punctuation" }, "{"),
                      vue.createVNode("span", { class: "token constant" }, "C"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'3PO'"),
                      vue.createVNode("span", { class: "token punctuation" }, "}"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token literal-property property" }, "text"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'This is an option with object value'"),
                      vue.createVNode("span", { class: "token punctuation" }, "}"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode("\n    "),
                      vue.createVNode("span", { class: "token punctuation" }, "{"),
                      vue.createVNode("span", { class: "token literal-property property" }, "value"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'d'"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token literal-property property" }, "text"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token string" }, "'This one is disabled'"),
                      vue.createVNode("span", { class: "token punctuation" }, ","),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token literal-property property" }, "disabled"),
                      vue.createVNode("span", { class: "token operator" }, ":"),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token boolean" }, "true"),
                      vue.createVNode("span", { class: "token punctuation" }, "}"),
                      vue.createTextVNode("\n"),
                      vue.createVNode("span", { class: "token punctuation" }, "]"),
                      vue.createVNode("span", { class: "token punctuation" }, ";"),
                      vue.createTextVNode("\n")
                    ])
                  ]),
                  vue.createVNode("div", { class: "line-numbers" }, [
                    vue.createVNode("span", { class: "line-number" }, "1"),
                    vue.createVNode("br"),
                    vue.createVNode("span", { class: "line-number" }, "2"),
                    vue.createVNode("br"),
                    vue.createVNode("span", { class: "line-number" }, "3"),
                    vue.createVNode("br"),
                    vue.createVNode("span", { class: "line-number" }, "4"),
                    vue.createVNode("br"),
                    vue.createVNode("span", { class: "line-number" }, "5"),
                    vue.createVNode("br"),
                    vue.createVNode("span", { class: "line-number" }, "6"),
                    vue.createVNode("br"),
                    vue.createVNode("span", { class: "line-number" }, "7"),
                    vue.createVNode("br")
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WTab, { title: "Markup" }, {
            default: vue.withCtx(() => [
              vue.createVNode("div", { class: "language-vue ext-vue line-numbers-mode" }, [
                vue.createVNode("pre", { class: "language-vue" }, [
                  vue.createVNode("code", null, [
                    vue.createVNode("span", { class: "token tag" }, [
                      vue.createVNode("span", { class: "token tag" }, [
                        vue.createVNode("span", { class: "token punctuation" }, "<"),
                        vue.createTextVNode("Select")
                      ]),
                      vue.createTextVNode(),
                      vue.createVNode("span", { class: "token attr-name" }, ":options"),
                      vue.createVNode("span", { class: "token attr-value" }, [
                        vue.createVNode("span", { class: "token punctuation attr-equals" }, "="),
                        vue.createVNode("span", { class: "token punctuation" }, '"'),
                        vue.createTextVNode("options"),
                        vue.createVNode("span", { class: "token punctuation" }, '"')
                      ]),
                      vue.createVNode("span", { class: "token punctuation" }, ">")
                    ]),
                    vue.createVNode("span", { class: "token tag" }, [
                      vue.createVNode("span", { class: "token tag" }, [
                        vue.createVNode("span", { class: "token punctuation" }, "</"),
                        vue.createTextVNode("Select")
                      ]),
                      vue.createVNode("span", { class: "token punctuation" }, ">")
                    ]),
                    vue.createTextVNode("\n")
                  ])
                ]),
                vue.createVNode("div", { class: "line-numbers" }, [
                  vue.createVNode("span", { class: "line-number" }, "1"),
                  vue.createVNode("br")
                ])
              ])
            ]),
            _: 1
          }),
          vue.createVNode(_component_WTab, { title: "script" }, {
            default: vue.withCtx(() => [
              vue.createVNode("div", { class: "language-javascript ext-js line-numbers-mode" }, [
                vue.createVNode("pre", { class: "language-javascript" }, [
                  vue.createVNode("code", null, [
                    vue.createVNode("span", { class: "token keyword" }, "const"),
                    vue.createTextVNode(" options "),
                    vue.createVNode("span", { class: "token operator" }, "="),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token punctuation" }, "["),
                    vue.createTextVNode("\n    "),
                    vue.createVNode("span", { class: "token punctuation" }, "{"),
                    vue.createVNode("span", { class: "token literal-property property" }, "value"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token keyword" }, "null"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token literal-property property" }, "text"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'Please select an option'"),
                    vue.createVNode("span", { class: "token punctuation" }, "}"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode("\n    "),
                    vue.createVNode("span", { class: "token punctuation" }, "{"),
                    vue.createVNode("span", { class: "token literal-property property" }, "value"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'a'"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token literal-property property" }, "text"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'This is First option'"),
                    vue.createVNode("span", { class: "token punctuation" }, "}"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode("\n    "),
                    vue.createVNode("span", { class: "token punctuation" }, "{"),
                    vue.createVNode("span", { class: "token literal-property property" }, "value"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'b'"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token literal-property property" }, "text"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'Selected Option'"),
                    vue.createVNode("span", { class: "token punctuation" }, "}"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode("\n    "),
                    vue.createVNode("span", { class: "token punctuation" }, "{"),
                    vue.createVNode("span", { class: "token literal-property property" }, "value"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token punctuation" }, "{"),
                    vue.createVNode("span", { class: "token constant" }, "C"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'3PO'"),
                    vue.createVNode("span", { class: "token punctuation" }, "}"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token literal-property property" }, "text"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'This is an option with object value'"),
                    vue.createVNode("span", { class: "token punctuation" }, "}"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode("\n    "),
                    vue.createVNode("span", { class: "token punctuation" }, "{"),
                    vue.createVNode("span", { class: "token literal-property property" }, "value"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'d'"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token literal-property property" }, "text"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token string" }, "'This one is disabled'"),
                    vue.createVNode("span", { class: "token punctuation" }, ","),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token literal-property property" }, "disabled"),
                    vue.createVNode("span", { class: "token operator" }, ":"),
                    vue.createTextVNode(),
                    vue.createVNode("span", { class: "token boolean" }, "true"),
                    vue.createVNode("span", { class: "token punctuation" }, "}"),
                    vue.createTextVNode("\n"),
                    vue.createVNode("span", { class: "token punctuation" }, "]"),
                    vue.createVNode("span", { class: "token punctuation" }, ";"),
                    vue.createTextVNode("\n")
                  ])
                ]),
                vue.createVNode("div", { class: "line-numbers" }, [
                  vue.createVNode("span", { class: "line-number" }, "1"),
                  vue.createVNode("br"),
                  vue.createVNode("span", { class: "line-number" }, "2"),
                  vue.createVNode("br"),
                  vue.createVNode("span", { class: "line-number" }, "3"),
                  vue.createVNode("br"),
                  vue.createVNode("span", { class: "line-number" }, "4"),
                  vue.createVNode("br"),
                  vue.createVNode("span", { class: "line-number" }, "5"),
                  vue.createVNode("br"),
                  vue.createVNode("span", { class: "line-number" }, "6"),
                  vue.createVNode("br"),
                  vue.createVNode("span", { class: "line-number" }, "7"),
                  vue.createVNode("br")
                ])
              ])
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<h2 id="text-value-props" tabindex="-1"><a class="header-anchor" href="#text-value-props" aria-hidden="true">#</a> <code>text</code> &amp; <code>value</code> props</h2><p>Each item of options should have properties <code>value</code> &amp; <code>text</code>. Value of property can be any of type.</p><!--]-->`);
}
const _sfc_setup$s = _sfc_main$s.setup;
_sfc_main$s.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/select.html.vue");
  return _sfc_setup$s ? _sfc_setup$s(props, ctx) : void 0;
};
var select_html$1 = /* @__PURE__ */ _export_sfc(_sfc_main$s, [["ssrRender", _sfc_ssrRender$7]]);
var select_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": select_html$1
});
const _sfc_main$r = {};
function _sfc_ssrRender$6(_ctx, _push, _parent, _attrs) {
  const _component_WSpinButton = vue.resolveComponent("WSpinButton");
  _push(`<!--[--><h1 id="spin-button" tabindex="-1"><a class="header-anchor" href="#spin-button" aria-hidden="true">#</a> Spin Button</h1><p>Spin buttons are a <code>wovoui</code>&#39;s custom numerical range form control. Spin buttons allow for incrementing or decrementing a numerical value within a range of a minimum and maximum number, with optional step value.</p><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p>The component <code>&lt;SpinButton&gt;</code> is WAI-ARIA compliant, allowing for keyboard control, and supports both horizontal ( default) and vertical layout.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSpinButton, null, null, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SpinButton</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SpinButton</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="v-model-value" tabindex="-1"><a class="header-anchor" href="#v-model-value" aria-hidden="true">#</a> <code>v-model</code> value</h2><p>The <code>v-model</code> always returns the value as a number. The <code>v-model</code> can be <code>null</code> if no <code>initial</code> value is set.</p><h2 id="min-max-and-step" tabindex="-1"><a class="header-anchor" href="#min-max-and-step" aria-hidden="true">#</a> <code>min</code>, <code>max</code>, and <code>step</code></h2><p>Spinbuttons have a default range from 1 to 100, which can be changed by setting the <code>min</code> and <code>max</code> props. The default <code>step</code> increment is 1, and can be changed via the <code>step</code> prop (decimal values allowed).</p><p>When <code>step</code> is set, the value will always be a multiple of the step size plus the minimum value.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSpinButton, { step: 0.25 }, null, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SpinButton</span> <span class="token attr-name">:step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.25<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SpinButton</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> Size</h2><p>As with other form controls, <code>&lt;SpinButton&gt;</code> supports <code>small</code> and <code>large</code> sizing via setting the <code>size</code> prop to either <code>sm</code> or <code>lg</code>, respectively.</p><div><label for="sb-small">Spin button - Small size</label>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSpinButton, {
    id: "sb-small",
    size: "sm",
    placeholder: "--",
    class: "mb-2"
  }, null, _parent));
  _push(`<label for="sb-default">Spin button - Default size</label>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSpinButton, {
    id: "sb-default",
    placeholder: "--",
    class: "mb-2"
  }, null, _parent));
  _push(`<label for="sb-large">Spin button - Large size</label>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSpinButton, {
    id: "sb-large",
    size: "lg",
    placeholder: "--",
    class: "mb-2"
  }, null, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Spin button - Small size<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SpinButton</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-small<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>--<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SpinButton</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-default<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Spin button - Default size<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SpinButton</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-default<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>--<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SpinButton</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-large<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Spin button - Large size<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SpinButton</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sb-large<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>--<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SpinButton</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="inline" tabindex="-1"><a class="header-anchor" href="#inline" aria-hidden="true">#</a> Inline</h2><div><label for="sb-inline">Inline spin button</label>`);
  _push(serverRenderer.ssrRenderComponent(_component_WSpinButton, {
    id: "sb-inline",
    inline: ""
  }, null, _parent));
  _push(`</div><!--]-->`);
}
const _sfc_setup$r = _sfc_main$r.setup;
_sfc_main$r.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/spinbutton.html.vue");
  return _sfc_setup$r ? _sfc_setup$r(props, ctx) : void 0;
};
var spinbutton_html$1 = /* @__PURE__ */ _export_sfc(_sfc_main$r, [["ssrRender", _sfc_ssrRender$6]]);
var spinbutton_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": spinbutton_html$1
});
const _sfc_main$q = {
  setup(props, context) {
    return {
      tag_values: vue.reactive(["one", "two"])
    };
  }
};
function _sfc_ssrRender$5(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_WTags = vue.resolveComponent("WTags");
  _push(`<!--[--><h1 id="form-tags" tabindex="-1"><a class="header-anchor" href="#form-tags" aria-hidden="true">#</a> Form Tags</h1><p>Lightweight custom tagged input form control, with options for customized interface rendering, duplicate tag detection and optional tag validation.</p><p>Tags are arrays of short strings, used in various ways such as assigning categories. Use the default user interface, or create your own custom interface via the use of the default scoped slot.</p><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic usage</h2><p>Tags will have any leading and tailing whitespace removed, and duplicate tags are not permitted. Tags that contain spaces are permitted by default.</p><p>Tags are added by clicking the Add button, pressing the Enter key or optionally when the change event fires on the new tag input (i.e. when focus moves from the input). The Add button will only appear when the user has entered a new tag value.</p><p><strong>Default render:</strong></p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WTags, {
    modelValue: $setup.tag_values,
    "onUpdate:modelValue": ($event) => $setup.tag_values = $event,
    "remove-on-delete": ""
  }, null, _parent));
  _push(`<p>${serverRenderer.ssrInterpolate($setup.tag_values)}</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Tags</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag_values<span class="token punctuation">&quot;</span></span> <span class="token attr-name">remove-on-delete</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Tags</span><span class="token punctuation">&gt;</span></span>

    {{tag_values}}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>reactive<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>Tags<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@wovosoft/wovoui&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>Tags<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">tag_values</span><span class="token operator">:</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>ou can disable adding a new tag when pressing Enter via the no-add-on-enter prop, and enable adding a tag on the input&#39;s change event via the add-on-change prop.</p><h2 id="tag-creation-using-separators" tabindex="-1"><a class="header-anchor" href="#tag-creation-using-separators" aria-hidden="true">#</a> Tag creation using separators</h2><p>To auto create tags when a <code>separator</code> character is typed (i.e. Space, ,, etc.), set the <code>separator</code> prop to the character that will trigger the tag to be added. If multiple separator characters are needed, then include them as a single string (i.e. <code> ,;</code>), or an array of characters (i.e. <code>[&#39; &#39;, &#39;,&#39;, &#39;;&#39;]</code>), which will trigger a new tag to be added when Space, ,, or ; are typed). Separators must be a single character.</p><p>The following example will auto create a tag when Space, ,, or ; are typed:</p><!--]-->`);
}
const _sfc_setup$q = _sfc_main$q.setup;
_sfc_main$q.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/form/tags.html.vue");
  return _sfc_setup$q ? _sfc_setup$q(props, ctx) : void 0;
};
var tags_html$1 = /* @__PURE__ */ _export_sfc(_sfc_main$q, [["ssrRender", _sfc_ssrRender$5]]);
var tags_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": tags_html$1
});
const _sfc_main$p = {};
function _sfc_ssrRender$4(_ctx, _push, _parent, _attrs) {
  const _component_ExternalLinkIcon = vue.resolveComponent("ExternalLinkIcon");
  _push(`<!--[--><h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><p>Get started with <em><strong><code>wovoui</code></strong></em> which is based on the world&#39;s one of the most famous design framework <a href="https://getbootstrap.com/" target="_blank" rel="noopener noreferrer">Bootstrap 5`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> and Progressive JavaScript Framework <a href="https://v3.vuejs.org/" target="_blank" rel="noopener noreferrer">Vue 3`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>. <em><strong><code>wovoui</code></strong></em> is fully responsive, mobile-first design approached as it uses <a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/" target="_blank" rel="noopener noreferrer">Bootstrap 5`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a>&#39;s design styles.</p><p>All the components provided by <a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/" target="_blank" rel="noopener noreferrer">Bootstrap 5`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> is available in the library, as well as it has some extra component to meet your requirements.</p><p><em><strong><code>wovoui</code></strong></em> can be used in Server <a href="https://en.wikipedia.org/wiki/Server-side_scripting" target="_blank" rel="noopener noreferrer">Side Rendered (SSR)`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> applications, in <a href="https://jamstack.org/generators/" target="_blank" rel="noopener noreferrer">Static Site Generated (SSG)`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> applications, in <a href="https://en.wikipedia.org/wiki/Single-page_application" target="_blank" rel="noopener noreferrer">Single Page Applications (SPA)`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> as well as in <a href="https://www.electronjs.org/" target="_blank" rel="noopener noreferrer">Electronjs`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> based applications.</p><h2 id="using-npm" tabindex="-1"><a class="header-anchor" href="#using-npm" aria-hidden="true">#</a> Using NPM</h2><p>To install it using <a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener noreferrer">Node Package Manage (NPM)`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> use the following command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @wovosoft/wovoui
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="using-yarn" tabindex="-1"><a class="header-anchor" href="#using-yarn" aria-hidden="true">#</a> Using Yarn</h2><p>To install it using <a href="https://yarnpkg.com/" target="_blank" rel="noopener noreferrer">YARN`);
  _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
  _push(`</a> use the following command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @wovosoft/wovoui
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><!--]-->`);
}
const _sfc_setup$p = _sfc_main$p.setup;
_sfc_main$p.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/getting-started/index.html.vue");
  return _sfc_setup$p ? _sfc_setup$p(props, ctx) : void 0;
};
var index_html$l = /* @__PURE__ */ _export_sfc(_sfc_main$p, [["ssrRender", _sfc_ssrRender$4]]);
var index_html$m = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$l
});
var index_html_vue_vue_type_style_index_0_lang = "";
const _sfc_main$o = {
  __ssrInlineRender: true,
  setup(__props) {
    const icons2 = vue.ref({});
    Object.entries(icons__namespace).map((i) => i[0]).forEach((i) => icons2.value[i] = false);
    const filter = vue.ref("");
    const theIcons = vue.computed(() => Object.keys(icons2.value).filter((icon) => icon.toLowerCase().includes(filter.value.toLowerCase())));
    const toggleVisibility = (el) => {
      Object.keys(icons2.value).filter((i) => !!icons2.value[i]).forEach((i) => icons2.value[i] = false);
      icons2.value[el] = true;
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_ExternalLinkIcon = vue.resolveComponent("ExternalLinkIcon");
      const _component_WCard = vue.resolveComponent("WCard");
      const _component_IconActivity = vue.resolveComponent("IconActivity");
      const _component_IconAlarm = vue.resolveComponent("IconAlarm");
      const _component_WInput = vue.resolveComponent("WInput");
      const _component_WContainer = vue.resolveComponent("WContainer");
      const _component_WRow = vue.resolveComponent("WRow");
      const _component_WCol = vue.resolveComponent("WCol");
      _push(`<!--[--><h1 id="bootstrap-icons" tabindex="-1"><a class="header-anchor" href="#bootstrap-icons" aria-hidden="true">#</a> Bootstrap Icons</h1><p><a href="https://github.com/wovosoft/wovoui-icons" target="_blank" rel="noopener noreferrer">wovoui-icons`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a> are imported from <a href="https://icons.getbootstrap.com" target="_blank" rel="noopener noreferrer">Bootstrap 5 icons`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a>. There are almost 1522 icons. And in the future, if Bootstrap provides some more icons, those will be available too as soon as possible.</p><p><a href="https://github.com/wovosoft/wovoui-icons" target="_blank" rel="noopener noreferrer">wovoui-icons`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a> are wrapped in a separate package so that it&#39;s dependency can be optional.</p><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h2><p>Of-course You can use the icons using the provided <a href="https://icons.getbootstrap.com/#install" target="_blank" rel="noopener noreferrer">methods`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a> of <a href="https://icons.getbootstrap.com" target="_blank" rel="noopener noreferrer">Bootstrap 5`);
      _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
      _push(`</a>. For example,</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&quot;https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;bootstrap-icons&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><h3 id="using-npm" tabindex="-1"><a class="header-anchor" href="#using-npm" aria-hidden="true">#</a> Using NPM</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @wovosoft/wovoui-icons 
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="using-yarn" tabindex="-1"><a class="header-anchor" href="#using-yarn" aria-hidden="true">#</a> Using yarn</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @wovosoft/wovoui-icons
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a> How to Use</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Activity</span> <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alarm</span> <span class="token attr-name">:size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>Activity<span class="token punctuation">,</span> Alarm<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@wovosoft/wovoui-icons&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>Activity<span class="token punctuation">,</span> Alarm<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`);
      _push(serverRenderer.ssrRenderComponent(_component_WCard, { "body-class": "text-center" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_IconActivity, {
              size: 5,
              class: "me-5"
            }, null, _parent2, _scopeId));
            _push2(serverRenderer.ssrRenderComponent(_component_IconAlarm, { size: 5 }, null, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_IconActivity, {
                size: 5,
                class: "me-5"
              }),
              vue.createVNode(_component_IconAlarm, { size: 5 })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<h2 id="list-of-suppoerted-icons" tabindex="-1"><a class="header-anchor" href="#list-of-suppoerted-icons" aria-hidden="true">#</a> List of Suppoerted Icons</h2>`);
      _push(serverRenderer.ssrRenderComponent(_component_WInput, {
        type: "search",
        modelValue: filter.value,
        "onUpdate:modelValue": ($event) => filter.value = $event,
        placeholder: "Search Icons..."
      }, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_component_WContainer, { class: "container" }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(_component_WRow, null, {
              default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<!--[-->`);
                  serverRenderer.ssrRenderList(vue.unref(theIcons), (icon) => {
                    _push3(serverRenderer.ssrRenderComponent(_component_WCol, {
                      class: "p-1 text-center",
                      md: icons2.value[icon] ? 8 : 3,
                      "offset-md": icons2.value[icon] ? 2 : null,
                      sm: "12"
                    }, {
                      default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div tabindex="0" class="${serverRenderer.ssrRenderClass([!!icons2.value[icon] ? "p-3" : "p-1", "border icon-box"])}" style="${serverRenderer.ssrRenderStyle({ "cursor": "pointer" })}"${_scopeId3}>`);
                          serverRenderer.ssrRenderVNode(_push4, vue.createVNode(vue.resolveDynamicComponent("Icon" + icon), { size: 2 }, null), _parent4, _scopeId3);
                          if (icons2.value[icon]) {
                            _push4(`<div class="mt-2"${_scopeId3}><code${_scopeId3}>&lt;${serverRenderer.ssrInterpolate(icon)} /&gt;</code> or <code${_scopeId3}>&lt;${serverRenderer.ssrInterpolate(vue.unref(kebabCase__default["default"])(icon))} /&gt;</code></div>`);
                          } else {
                            _push4(`<div class="mt-2"${_scopeId3}>${serverRenderer.ssrInterpolate(icon)}</div>`);
                          }
                          if (icon.startsWith("_") && icons2.value[icon]) {
                            _push4(`<p${_scopeId3}> Because ${serverRenderer.ssrInterpolate(icon.replace("_", ""))}&#39;s type is &#39;number&#39;, underscore (_) symbol is used. </p>`);
                          } else {
                            _push4(`<!---->`);
                          }
                          _push4(`</div>`);
                          if (icons2.value[icon]) {
                            _push4(`<div class="language-javascript ext-js line-numbers-mode"${_scopeId3}><pre class="language-javascript"${_scopeId3}><code${_scopeId3}><span class="token keyword"${_scopeId3}>import</span> { ${serverRenderer.ssrInterpolate(icon)} } <span class="token keyword"${_scopeId3}>from</span> <span class="token string"${_scopeId3}>&quot;@wovosoft/wovoui-icons&quot;</span><span class="token punctuation"${_scopeId3}>;</span>
<span class="token keyword"${_scopeId3}>export</span> <span class="token keyword"${_scopeId3}>default</span><span class="token punctuation"${_scopeId3}>{</span>
    <span class="token literal-property property"${_scopeId3}>components</span><span class="token operator"${_scopeId3}>:</span><span class="token punctuation"${_scopeId3}>{</span>${serverRenderer.ssrInterpolate(icon)}<span class="token punctuation"${_scopeId3}>}</span>
<span class="token punctuation"${_scopeId3}>}</span>
</code>
</pre><div class="line-numbers"${_scopeId3}><span class="line-number"${_scopeId3}>1</span><br${_scopeId3}><span class="line-number"${_scopeId3}>2</span><br${_scopeId3}><span class="line-number"${_scopeId3}>3</span><br${_scopeId3}><span class="line-number"${_scopeId3}>4</span></div></div>`);
                          } else {
                            _push4(`<!---->`);
                          }
                        } else {
                          return [
                            vue.createVNode("div", {
                              class: ["border icon-box", !!icons2.value[icon] ? "p-3" : "p-1"],
                              tabindex: "0",
                              style: { "cursor": "pointer" },
                              onFocus: ($event) => toggleVisibility(icon),
                              onClick: ($event) => toggleVisibility(icon)
                            }, [
                              (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent("Icon" + icon), { size: 2 })),
                              icons2.value[icon] ? (vue.openBlock(), vue.createBlock("div", {
                                key: 0,
                                class: "mt-2"
                              }, [
                                vue.createVNode("code", null, "<" + vue.toDisplayString(icon) + " />", 1),
                                vue.createTextVNode(" or "),
                                vue.createVNode("code", null, "<" + vue.toDisplayString(vue.unref(kebabCase__default["default"])(icon)) + " />", 1)
                              ])) : (vue.openBlock(), vue.createBlock("div", {
                                key: 1,
                                class: "mt-2"
                              }, vue.toDisplayString(icon), 1)),
                              icon.startsWith("_") && icons2.value[icon] ? (vue.openBlock(), vue.createBlock("p", { key: 2 }, " Because " + vue.toDisplayString(icon.replace("_", "")) + "'s type is 'number', underscore (_) symbol is used. ", 1)) : vue.createCommentVNode("", true)
                            ], 42, ["onFocus", "onClick"]),
                            icons2.value[icon] ? (vue.openBlock(), vue.createBlock("div", {
                              key: 0,
                              class: "language-javascript ext-js line-numbers-mode"
                            }, [
                              vue.createVNode("pre", { class: "language-javascript" }, [
                                vue.createVNode("code", null, [
                                  vue.createVNode("span", { class: "token keyword" }, "import"),
                                  vue.createTextVNode(" { " + vue.toDisplayString(icon) + " } ", 1),
                                  vue.createVNode("span", { class: "token keyword" }, "from"),
                                  vue.createTextVNode(),
                                  vue.createVNode("span", { class: "token string" }, '"@wovosoft/wovoui-icons"'),
                                  vue.createVNode("span", { class: "token punctuation" }, ";"),
                                  vue.createTextVNode("\n"),
                                  vue.createVNode("span", { class: "token keyword" }, "export"),
                                  vue.createTextVNode(),
                                  vue.createVNode("span", { class: "token keyword" }, "default"),
                                  vue.createVNode("span", { class: "token punctuation" }, "{"),
                                  vue.createTextVNode("\n    "),
                                  vue.createVNode("span", { class: "token literal-property property" }, "components"),
                                  vue.createVNode("span", { class: "token operator" }, ":"),
                                  vue.createVNode("span", { class: "token punctuation" }, "{"),
                                  vue.createTextVNode(vue.toDisplayString(icon), 1),
                                  vue.createVNode("span", { class: "token punctuation" }, "}"),
                                  vue.createTextVNode("\n"),
                                  vue.createVNode("span", { class: "token punctuation" }, "}"),
                                  vue.createTextVNode("\n")
                                ]),
                                vue.createTextVNode("\n")
                              ]),
                              vue.createVNode("div", { class: "line-numbers" }, [
                                vue.createVNode("span", { class: "line-number" }, "1"),
                                vue.createVNode("br"),
                                vue.createVNode("span", { class: "line-number" }, "2"),
                                vue.createVNode("br"),
                                vue.createVNode("span", { class: "line-number" }, "3"),
                                vue.createVNode("br"),
                                vue.createVNode("span", { class: "line-number" }, "4")
                              ])
                            ])) : vue.createCommentVNode("", true)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(theIcons), (icon) => {
                      return vue.openBlock(), vue.createBlock(_component_WCol, {
                        class: "p-1 text-center",
                        md: icons2.value[icon] ? 8 : 3,
                        "offset-md": icons2.value[icon] ? 2 : null,
                        sm: "12"
                      }, {
                        default: vue.withCtx(() => [
                          vue.createVNode("div", {
                            class: ["border icon-box", !!icons2.value[icon] ? "p-3" : "p-1"],
                            tabindex: "0",
                            style: { "cursor": "pointer" },
                            onFocus: ($event) => toggleVisibility(icon),
                            onClick: ($event) => toggleVisibility(icon)
                          }, [
                            (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent("Icon" + icon), { size: 2 })),
                            icons2.value[icon] ? (vue.openBlock(), vue.createBlock("div", {
                              key: 0,
                              class: "mt-2"
                            }, [
                              vue.createVNode("code", null, "<" + vue.toDisplayString(icon) + " />", 1),
                              vue.createTextVNode(" or "),
                              vue.createVNode("code", null, "<" + vue.toDisplayString(vue.unref(kebabCase__default["default"])(icon)) + " />", 1)
                            ])) : (vue.openBlock(), vue.createBlock("div", {
                              key: 1,
                              class: "mt-2"
                            }, vue.toDisplayString(icon), 1)),
                            icon.startsWith("_") && icons2.value[icon] ? (vue.openBlock(), vue.createBlock("p", { key: 2 }, " Because " + vue.toDisplayString(icon.replace("_", "")) + "'s type is 'number', underscore (_) symbol is used. ", 1)) : vue.createCommentVNode("", true)
                          ], 42, ["onFocus", "onClick"]),
                          icons2.value[icon] ? (vue.openBlock(), vue.createBlock("div", {
                            key: 0,
                            class: "language-javascript ext-js line-numbers-mode"
                          }, [
                            vue.createVNode("pre", { class: "language-javascript" }, [
                              vue.createVNode("code", null, [
                                vue.createVNode("span", { class: "token keyword" }, "import"),
                                vue.createTextVNode(" { " + vue.toDisplayString(icon) + " } ", 1),
                                vue.createVNode("span", { class: "token keyword" }, "from"),
                                vue.createTextVNode(),
                                vue.createVNode("span", { class: "token string" }, '"@wovosoft/wovoui-icons"'),
                                vue.createVNode("span", { class: "token punctuation" }, ";"),
                                vue.createTextVNode("\n"),
                                vue.createVNode("span", { class: "token keyword" }, "export"),
                                vue.createTextVNode(),
                                vue.createVNode("span", { class: "token keyword" }, "default"),
                                vue.createVNode("span", { class: "token punctuation" }, "{"),
                                vue.createTextVNode("\n    "),
                                vue.createVNode("span", { class: "token literal-property property" }, "components"),
                                vue.createVNode("span", { class: "token operator" }, ":"),
                                vue.createVNode("span", { class: "token punctuation" }, "{"),
                                vue.createTextVNode(vue.toDisplayString(icon), 1),
                                vue.createVNode("span", { class: "token punctuation" }, "}"),
                                vue.createTextVNode("\n"),
                                vue.createVNode("span", { class: "token punctuation" }, "}"),
                                vue.createTextVNode("\n")
                              ]),
                              vue.createTextVNode("\n")
                            ]),
                            vue.createVNode("div", { class: "line-numbers" }, [
                              vue.createVNode("span", { class: "line-number" }, "1"),
                              vue.createVNode("br"),
                              vue.createVNode("span", { class: "line-number" }, "2"),
                              vue.createVNode("br"),
                              vue.createVNode("span", { class: "line-number" }, "3"),
                              vue.createVNode("br"),
                              vue.createVNode("span", { class: "line-number" }, "4")
                            ])
                          ])) : vue.createCommentVNode("", true)
                        ]),
                        _: 2
                      }, 1032, ["md", "offset-md"]);
                    }), 256))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            return [
              vue.createVNode(_component_WRow, null, {
                default: vue.withCtx(() => [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(theIcons), (icon) => {
                    return vue.openBlock(), vue.createBlock(_component_WCol, {
                      class: "p-1 text-center",
                      md: icons2.value[icon] ? 8 : 3,
                      "offset-md": icons2.value[icon] ? 2 : null,
                      sm: "12"
                    }, {
                      default: vue.withCtx(() => [
                        vue.createVNode("div", {
                          class: ["border icon-box", !!icons2.value[icon] ? "p-3" : "p-1"],
                          tabindex: "0",
                          style: { "cursor": "pointer" },
                          onFocus: ($event) => toggleVisibility(icon),
                          onClick: ($event) => toggleVisibility(icon)
                        }, [
                          (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent("Icon" + icon), { size: 2 })),
                          icons2.value[icon] ? (vue.openBlock(), vue.createBlock("div", {
                            key: 0,
                            class: "mt-2"
                          }, [
                            vue.createVNode("code", null, "<" + vue.toDisplayString(icon) + " />", 1),
                            vue.createTextVNode(" or "),
                            vue.createVNode("code", null, "<" + vue.toDisplayString(vue.unref(kebabCase__default["default"])(icon)) + " />", 1)
                          ])) : (vue.openBlock(), vue.createBlock("div", {
                            key: 1,
                            class: "mt-2"
                          }, vue.toDisplayString(icon), 1)),
                          icon.startsWith("_") && icons2.value[icon] ? (vue.openBlock(), vue.createBlock("p", { key: 2 }, " Because " + vue.toDisplayString(icon.replace("_", "")) + "'s type is 'number', underscore (_) symbol is used. ", 1)) : vue.createCommentVNode("", true)
                        ], 42, ["onFocus", "onClick"]),
                        icons2.value[icon] ? (vue.openBlock(), vue.createBlock("div", {
                          key: 0,
                          class: "language-javascript ext-js line-numbers-mode"
                        }, [
                          vue.createVNode("pre", { class: "language-javascript" }, [
                            vue.createVNode("code", null, [
                              vue.createVNode("span", { class: "token keyword" }, "import"),
                              vue.createTextVNode(" { " + vue.toDisplayString(icon) + " } ", 1),
                              vue.createVNode("span", { class: "token keyword" }, "from"),
                              vue.createTextVNode(),
                              vue.createVNode("span", { class: "token string" }, '"@wovosoft/wovoui-icons"'),
                              vue.createVNode("span", { class: "token punctuation" }, ";"),
                              vue.createTextVNode("\n"),
                              vue.createVNode("span", { class: "token keyword" }, "export"),
                              vue.createTextVNode(),
                              vue.createVNode("span", { class: "token keyword" }, "default"),
                              vue.createVNode("span", { class: "token punctuation" }, "{"),
                              vue.createTextVNode("\n    "),
                              vue.createVNode("span", { class: "token literal-property property" }, "components"),
                              vue.createVNode("span", { class: "token operator" }, ":"),
                              vue.createVNode("span", { class: "token punctuation" }, "{"),
                              vue.createTextVNode(vue.toDisplayString(icon), 1),
                              vue.createVNode("span", { class: "token punctuation" }, "}"),
                              vue.createTextVNode("\n"),
                              vue.createVNode("span", { class: "token punctuation" }, "}"),
                              vue.createTextVNode("\n")
                            ]),
                            vue.createTextVNode("\n")
                          ]),
                          vue.createVNode("div", { class: "line-numbers" }, [
                            vue.createVNode("span", { class: "line-number" }, "1"),
                            vue.createVNode("br"),
                            vue.createVNode("span", { class: "line-number" }, "2"),
                            vue.createVNode("br"),
                            vue.createVNode("span", { class: "line-number" }, "3"),
                            vue.createVNode("br"),
                            vue.createVNode("span", { class: "line-number" }, "4")
                          ])
                        ])) : vue.createCommentVNode("", true)
                      ]),
                      _: 2
                    }, 1032, ["md", "offset-md"]);
                  }), 256))
                ]),
                _: 1
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$o = _sfc_main$o.setup;
_sfc_main$o.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/icons/index.html.vue");
  return _sfc_setup$o ? _sfc_setup$o(props, ctx) : void 0;
};
var index_html$k = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main$o
});
const _sfc_main$n = {};
function _sfc_ssrRender$3(_ctx, _push, _parent, _attrs) {
  const _component_WListGroup = vue.resolveComponent("WListGroup");
  const _component_WListGroupItem = vue.resolveComponent("WListGroupItem");
  _push(`<!--[--><h1 id="list-group" tabindex="-1"><a class="header-anchor" href="#list-group" aria-hidden="true">#</a> List Group</h1><p>List groups are a flexible and powerful component for displaying a series of content. List group items can be modified to support just about any content within. They can also be used as navigation via various props.</p>`);
  _push(serverRenderer.ssrRenderComponent(_component_WListGroup, null, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Cras justo odio`);
            } else {
              return [
                vue.createTextVNode("Cras justo odio")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Dapibus ac facilisis in`);
            } else {
              return [
                vue.createTextVNode("Dapibus ac facilisis in")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Morbi leo risus`);
            } else {
              return [
                vue.createTextVNode("Morbi leo risus")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Porta ac consectetur ac`);
            } else {
              return [
                vue.createTextVNode("Porta ac consectetur ac")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WListGroupItem, null, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Vestibulum at eros`);
            } else {
              return [
                vue.createTextVNode("Vestibulum at eros")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WListGroupItem, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Cras justo odio")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WListGroupItem, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Dapibus ac facilisis in")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WListGroupItem, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Morbi leo risus")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WListGroupItem, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Porta ac consectetur ac")
            ]),
            _: 1
          }),
          vue.createVNode(_component_WListGroupItem, null, {
            default: vue.withCtx(() => [
              vue.createTextVNode("Vestibulum at eros")
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroup</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>Cras justo odio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>Dapibus ac facilisis in<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>Morbi leo risus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>Porta ac consectetur ac<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>Vestibulum at eros<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroupItem</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><!--]-->`);
}
const _sfc_setup$n = _sfc_main$n.setup;
_sfc_main$n.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/list-group/index.html.vue");
  return _sfc_setup$n ? _sfc_setup$n(props, ctx) : void 0;
};
var index_html$i = /* @__PURE__ */ _export_sfc(_sfc_main$n, [["ssrRender", _sfc_ssrRender$3]]);
var index_html$j = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$i
});
const _sfc_main$m = {};
function _sfc_ssrRender$2(_ctx, _push, _parent, _attrs) {
  const _component_WButtonToolbar = vue.resolveComponent("WButtonToolbar");
  const _component_WButtonGroup = vue.resolveComponent("WButtonGroup");
  const _component_WButton = vue.resolveComponent("WButton");
  const _component_WInputGroup = vue.resolveComponent("WInputGroup");
  const _component_WInput = vue.resolveComponent("WInput");
  const _component_WDropdown = vue.resolveComponent("WDropdown");
  const _component_WDropdownItem = vue.resolveComponent("WDropdownItem");
  _push(`<!--[--><h1 id="button-toolbar" tabindex="-1"><a class="header-anchor" href="#button-toolbar" aria-hidden="true">#</a> Button Toolbar</h1><p>Group a series of button-groups and/or input-groups together on a single line, with optional keyboard navigation</p><p><strong>Example 1:</strong> with button groups &amp; Keyboard navigation</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonToolbar, {
    "key-nav": "",
    "aria-label": "Toolbar with button groups"
  }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { class: "mx-1" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`\xAB`);
                  } else {
                    return [
                      vue.createTextVNode("\xAB")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`\u2039`);
                  } else {
                    return [
                      vue.createTextVNode("\u2039")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("\xAB")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("\u2039")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { class: "mx-1" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Edit`);
                  } else {
                    return [
                      vue.createTextVNode("Edit")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Undo`);
                  } else {
                    return [
                      vue.createTextVNode("Undo")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Redo`);
                  } else {
                    return [
                      vue.createTextVNode("Redo")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Edit")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Undo")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Redo")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { class: "mx-1" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`\u203A`);
                  } else {
                    return [
                      vue.createTextVNode("\u203A")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`\xBB`);
                  } else {
                    return [
                      vue.createTextVNode("\xBB")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("\u203A")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("\xBB")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButtonGroup, { class: "mx-1" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("\xAB")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("\u2039")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButtonGroup, { class: "mx-1" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Edit")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Undo")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Redo")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButtonGroup, { class: "mx-1" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("\u203A")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("\xBB")
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonToolbar</span> <span class="token attr-name">key-nav</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Toolbar with button groups<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="\xAB">&amp;laquo;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="\u2039">&amp;lsaquo;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Undo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Redo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="\u203A">&amp;rsaquo;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="\xBB">&amp;raquo;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonToolbar</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>Example 2:</strong> with mixture of small button group and small input group</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonToolbar, { "aria-label": "Toolbar with button groups and input groups" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, {
          size: "sm",
          class: "me-1"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Save`);
                  } else {
                    return [
                      vue.createTextVNode("Save")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Cancel`);
                  } else {
                    return [
                      vue.createTextVNode("Cancel")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Save")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Cancel")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WInputGroup, {
          size: "sm",
          prepend: "$",
          append: ".00"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WInput, {
                value: "100",
                class: "text-right"
              }, null, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WInput, {
                  value: "100",
                  class: "text-right"
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButtonGroup, {
            size: "sm",
            class: "me-1"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Cancel")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WInputGroup, {
            size: "sm",
            prepend: "$",
            append: ".00"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WInput, {
                value: "100",
                class: "text-right"
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonToolbar</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Toolbar with button groups and input groups<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>me-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Save<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InputGroup</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prepend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$<span class="token punctuation">&quot;</span></span> <span class="token attr-name">append</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.00<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-right<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>InputGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonToolbar</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>Example 3:</strong> with button groups and dropdown menu</p><div class="bootstrap">`);
  _push(serverRenderer.ssrRenderComponent(_component_WButtonToolbar, { "aria-label": "Toolbar with button groups and dropdown menu" }, {
    default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { class: "mx-1" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`New`);
                  } else {
                    return [
                      vue.createTextVNode("New")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Edit`);
                  } else {
                    return [
                      vue.createTextVNode("Edit")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Undo`);
                  } else {
                    return [
                      vue.createTextVNode("Undo")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("New")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Edit")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Undo")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WDropdown, {
          class: "mx-1",
          right: "",
          text: "menu"
        }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 1`);
                  } else {
                    return [
                      vue.createTextVNode("Item 1")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 2`);
                  } else {
                    return [
                      vue.createTextVNode("Item 2")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WDropdownItem, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Item 3`);
                  } else {
                    return [
                      vue.createTextVNode("Item 3")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 1")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 2")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WDropdownItem, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Item 3")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(serverRenderer.ssrRenderComponent(_component_WButtonGroup, { class: "mx-1" }, {
          default: vue.withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Save`);
                  } else {
                    return [
                      vue.createTextVNode("Save")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(serverRenderer.ssrRenderComponent(_component_WButton, null, {
                default: vue.withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`Cancel`);
                  } else {
                    return [
                      vue.createTextVNode("Cancel")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Save")
                  ]),
                  _: 1
                }),
                vue.createVNode(_component_WButton, null, {
                  default: vue.withCtx(() => [
                    vue.createTextVNode("Cancel")
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          vue.createVNode(_component_WButtonGroup, { class: "mx-1" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("New")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Edit")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Undo")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WDropdown, {
            class: "mx-1",
            right: "",
            text: "menu"
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 1")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 2")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WDropdownItem, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Item 3")
                ]),
                _: 1
              })
            ]),
            _: 1
          }),
          vue.createVNode(_component_WButtonGroup, { class: "mx-1" }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Save")
                ]),
                _: 1
              }),
              vue.createVNode(_component_WButton, null, {
                default: vue.withCtx(() => [
                  vue.createTextVNode("Cancel")
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonToolbar</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Toolbar with button groups and dropdown menu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>New<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Undo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Dropdown</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">right</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>menu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DropdownItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dropdown</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ButtonGroup</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mx-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Save<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">&gt;</span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ButtonToolbar</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Feel free to mix input groups and dropdowns with button groups in your toolbars. Similar to the example above, you&#39;ll likely need some utility classes though to space things properly.</p><h2 id="sizing" tabindex="-1"><a class="header-anchor" href="#sizing" aria-hidden="true">#</a> Sizing</h2><p>Note, if you want smaller or larger buttons or controls, set the <code>size</code> prop directly on the <code>&lt;ButtonGroup&gt;</code>, <code>&lt;InputGroup&gt;</code>, and <code>&lt;Dropdown&gt;</code> components.</p><h2 id="justify" tabindex="-1"><a class="header-anchor" href="#justify" aria-hidden="true">#</a> Justify</h2><p>Make the toolbar span the maximum available width, by increasing spacing between the button groups, input groups and dropdowns, by setting the prop <code>justify</code>.</p><h2 id="keyboard-navigation" tabindex="-1"><a class="header-anchor" href="#keyboard-navigation" aria-hidden="true">#</a> Keyboard navigation</h2><p>Enable optional keyboard navigation by setting the prop <code>key-nav</code>.</p><!--]-->`);
}
const _sfc_setup$m = _sfc_main$m.setup;
_sfc_main$m.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/buttons/toolbars/index.html.vue");
  return _sfc_setup$m ? _sfc_setup$m(props, ctx) : void 0;
};
var index_html$g = /* @__PURE__ */ _export_sfc(_sfc_main$m, [["ssrRender", _sfc_ssrRender$2]]);
var index_html$h = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": index_html$g
});
const _sfc_main$l = {};
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs) {
}
const _sfc_setup$l = _sfc_main$l.setup;
_sfc_main$l.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../pages/404.html.vue");
  return _sfc_setup$l ? _sfc_setup$l(props, ctx) : void 0;
};
var _404_html$1 = /* @__PURE__ */ _export_sfc(_sfc_main$l, [["ssrRender", _sfc_ssrRender$1]]);
var _404_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _404_html$1
});
const data$q = {
  "key": "v-8daa1a0e",
  "path": "/",
  "title": "Introduction",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Developer Information",
      "slug": "developer-information",
      "children": []
    },
    {
      "level": 2,
      "title": "We are seeking for Sponsor",
      "slug": "we-are-seeking-for-sponsor",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "index.md"
};
var index_html$f = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$q
});
const data$p = {
  "key": "v-caf798c0",
  "path": "/accordion/",
  "title": "Accordion",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Default Accordion",
      "slug": "default-accordion",
      "children": []
    },
    {
      "level": 2,
      "title": "Flush",
      "slug": "flush",
      "children": []
    },
    {
      "level": 2,
      "title": "Always open",
      "slug": "always-open",
      "children": []
    },
    {
      "level": 2,
      "title": "openAll, collapseAll, toggleAll exposed methods",
      "slug": "openall-collapseall-toggleall-exposed-methods",
      "children": []
    },
    {
      "level": 2,
      "title": "modelValue",
      "slug": "modelvalue",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 164415825e4,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "accordion/index.md"
};
var index_html$e = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$p
});
const data$o = {
  "key": "v-3352235f",
  "path": "/alerts/",
  "title": "Alerts",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Overview",
      "slug": "overview",
      "children": []
    },
    {
      "level": 2,
      "title": "Dismissible Alert",
      "slug": "dismissible-alert",
      "children": []
    },
    {
      "level": 2,
      "title": "Auto Dismiss",
      "slug": "auto-dismiss",
      "children": []
    },
    {
      "level": 2,
      "title": "Countdown step",
      "slug": "countdown-step",
      "children": []
    },
    {
      "level": 2,
      "title": "Scoped Slot Support",
      "slug": "scoped-slot-support",
      "children": []
    },
    {
      "level": 2,
      "title": "Exposed Methods",
      "slug": "exposed-methods",
      "children": []
    },
    {
      "level": 2,
      "title": "Events",
      "slug": "events",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642513682e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "alerts/index.md"
};
var index_html$d = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$o
});
const data$n = {
  "key": "v-555fbfe6",
  "path": "/badges/",
  "title": "Badges",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Examples",
      "slug": "examples",
      "children": []
    },
    {
      "level": 2,
      "title": "Buttons",
      "slug": "buttons",
      "children": []
    },
    {
      "level": 2,
      "title": "Positioned",
      "slug": "positioned",
      "children": []
    },
    {
      "level": 2,
      "title": "Background colors",
      "slug": "background-colors",
      "children": []
    },
    {
      "level": 2,
      "title": "Pill badges",
      "slug": "pill-badges",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "badges/index.md"
};
var index_html$c = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$n
});
const data$m = {
  "key": "v-76a6e250",
  "path": "/breadcrumbs/",
  "title": "Breadcrumbs",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Breadcrumb items",
      "slug": "breadcrumb-items",
      "children": []
    },
    {
      "level": 2,
      "title": "Manually placed items",
      "slug": "manually-placed-items",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "breadcrumbs/index.md"
};
var index_html$b = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$m
});
const data$l = {
  "key": "v-62839e5e",
  "path": "/buttons/groups.html",
  "title": "Button Groups",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Basic example",
      "slug": "basic-example",
      "children": []
    },
    {
      "level": 2,
      "title": "Mixed styles",
      "slug": "mixed-styles",
      "children": [
        {
          "level": 3,
          "title": "Outlined styles",
          "slug": "outlined-styles",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Basic checkbox toggle button group",
      "slug": "basic-checkbox-toggle-button-group",
      "children": []
    },
    {
      "level": 2,
      "title": "Button toolbar",
      "slug": "button-toolbar",
      "children": []
    },
    {
      "level": 2,
      "title": "Justified Toolbar",
      "slug": "justified-toolbar",
      "children": []
    },
    {
      "level": 2,
      "title": "Sizing",
      "slug": "sizing",
      "children": []
    },
    {
      "level": 2,
      "title": "Vertical variation",
      "slug": "vertical-variation",
      "children": []
    },
    {
      "level": 2,
      "title": "Dropdown menu support",
      "slug": "dropdown-menu-support",
      "children": []
    },
    {
      "level": 2,
      "title": "Properties",
      "slug": "properties",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "buttons/groups.md"
};
var groups_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$l
});
const data$k = {
  "key": "v-d6c3ca72",
  "path": "/buttons/",
  "title": "Buttons",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Overview",
      "slug": "overview",
      "children": []
    },
    {
      "level": 2,
      "title": "Element type",
      "slug": "element-type",
      "children": []
    },
    {
      "level": 2,
      "title": "Type",
      "slug": "type",
      "children": []
    },
    {
      "level": 2,
      "title": "Sizing",
      "slug": "sizing",
      "children": []
    },
    {
      "level": 2,
      "title": "Contextual Variants",
      "slug": "contextual-variants",
      "children": []
    },
    {
      "level": 2,
      "title": "Solid color variants",
      "slug": "solid-color-variants",
      "children": []
    },
    {
      "level": 2,
      "title": "Outline color variants",
      "slug": "outline-color-variants",
      "children": []
    },
    {
      "level": 2,
      "title": "Block level buttons",
      "slug": "block-level-buttons",
      "children": []
    },
    {
      "level": 2,
      "title": "Pill style",
      "slug": "pill-style",
      "children": []
    },
    {
      "level": 2,
      "title": "Squared style",
      "slug": "squared-style",
      "children": []
    },
    {
      "level": 2,
      "title": "Disabled state",
      "slug": "disabled-state",
      "children": []
    },
    {
      "level": 2,
      "title": "Component reference",
      "slug": "component-reference",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "buttons/index.md"
};
var index_html$a = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$k
});
const data$j = {
  "key": "v-96167c50",
  "path": "/calendar/",
  "title": "Calendar",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Overview",
      "slug": "overview",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 164294512e4,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "calendar/index.md"
};
var index_html$9 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$j
});
const data$i = {
  "key": "v-78191965",
  "path": "/cards/",
  "title": "Cards",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Example",
      "slug": "example",
      "children": []
    },
    {
      "level": 2,
      "title": "Content types",
      "slug": "content-types",
      "children": []
    },
    {
      "level": 2,
      "title": "Card body",
      "slug": "card-body",
      "children": []
    },
    {
      "level": 2,
      "title": "Titles, text, and links",
      "slug": "titles-text-and-links",
      "children": []
    },
    {
      "level": 2,
      "title": "Images",
      "slug": "images",
      "children": []
    },
    {
      "level": 2,
      "title": "Overlay image",
      "slug": "overlay-image",
      "children": []
    },
    {
      "level": 2,
      "title": "List groups",
      "slug": "list-groups",
      "children": []
    },
    {
      "level": 2,
      "title": "Kitchen sink",
      "slug": "kitchen-sink",
      "children": []
    },
    {
      "level": 2,
      "title": "Header and footer",
      "slug": "header-and-footer",
      "children": []
    },
    {
      "level": 2,
      "title": "Sizing",
      "slug": "sizing",
      "children": []
    },
    {
      "level": 2,
      "title": "Using grid markup",
      "slug": "using-grid-markup",
      "children": []
    },
    {
      "level": 2,
      "title": "Using utilities",
      "slug": "using-utilities",
      "children": []
    },
    {
      "level": 2,
      "title": "Using custom CSS",
      "slug": "using-custom-css",
      "children": []
    },
    {
      "level": 2,
      "title": "Text alignment",
      "slug": "text-alignment",
      "children": []
    },
    {
      "level": 2,
      "title": "Navigation",
      "slug": "navigation",
      "children": []
    },
    {
      "level": 2,
      "title": "Card styles",
      "slug": "card-styles",
      "children": []
    },
    {
      "level": 2,
      "title": "Solid",
      "slug": "solid",
      "children": []
    },
    {
      "level": 2,
      "title": "Bordered",
      "slug": "bordered",
      "children": []
    },
    {
      "level": 2,
      "title": "Header and footer variants",
      "slug": "header-and-footer-variants",
      "children": []
    },
    {
      "level": 2,
      "title": "Card groups",
      "slug": "card-groups",
      "children": [
        {
          "level": 3,
          "title": "Default card group",
          "slug": "default-card-group",
          "children": []
        },
        {
          "level": 3,
          "title": "Card deck groups",
          "slug": "card-deck-groups",
          "children": []
        },
        {
          "level": 3,
          "title": "Card column groups",
          "slug": "card-column-groups",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Component reference",
      "slug": "component-reference",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "cards/index.md"
};
var index_html$8 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$i
});
const data$h = {
  "key": "v-03d41ff6",
  "path": "/carousel/",
  "title": "Carousel",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [],
  "git": {
    "updatedTime": 1643550905e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "carousel/index.md"
};
var index_html$7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$h
});
const data$g = {
  "key": "v-6e85a749",
  "path": "/collapse/",
  "title": "Collapse",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Initial visibility (start expanded)",
      "slug": "initial-visibility-start-expanded",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1643550905e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "collapse/index.md"
};
var index_html$6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$g
});
const data$f = {
  "key": "v-2394e1a6",
  "path": "/dropdowns/",
  "title": "Dropdown",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Button content",
      "slug": "button-content",
      "children": []
    },
    {
      "level": 2,
      "title": "Positioning / Direction",
      "slug": "positioning-direction",
      "children": []
    },
    {
      "level": 2,
      "title": "Menu alignment",
      "slug": "menu-alignment",
      "children": [
        {
          "level": 3,
          "title": "Dropup",
          "slug": "dropup",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Sizing",
      "slug": "sizing",
      "children": []
    },
    {
      "level": 2,
      "title": "Dropdown color variants",
      "slug": "dropdown-color-variants",
      "children": []
    },
    {
      "level": 2,
      "title": "Block level dropdowns",
      "slug": "block-level-dropdowns",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642513682e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "dropdowns/index.md"
};
var index_html$5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$f
});
const data$e = {
  "key": "v-d02a7d16",
  "path": "/dropdowns/input.html",
  "title": "Form Input",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Textual and Value inputs",
      "slug": "textual-and-value-inputs",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642513682e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "dropdowns/input.md"
};
var input_html$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$e
});
const data$d = {
  "key": "v-2643f7a4",
  "path": "/form/checkbox.html",
  "title": "Form Checkbox",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Control sizing",
      "slug": "control-sizing",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "form/checkbox.md"
};
var checkbox_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$d
});
const data$c = {
  "key": "v-9d060068",
  "path": "/form/group.html",
  "title": "Form Group",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "label prop",
      "slug": "label-prop",
      "children": []
    },
    {
      "level": 2,
      "title": "label slot",
      "slug": "label-slot",
      "children": []
    },
    {
      "level": 2,
      "title": "Horizontal layout",
      "slug": "horizontal-layout",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1643730891e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "form/group.md"
};
var group_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$c
});
const data$b = {
  "key": "v-14948c92",
  "path": "/form/",
  "title": "Form",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Introduction to forms and controls",
      "slug": "introduction-to-forms-and-controls",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 164278276e4,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "form/index.md"
};
var index_html$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$b
});
const data$a = {
  "key": "v-909a953e",
  "path": "/form/input.html",
  "title": "Form Input",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Textual and Value inputs",
      "slug": "textual-and-value-inputs",
      "children": []
    },
    {
      "level": 2,
      "title": "Input Type",
      "slug": "input-type",
      "children": []
    },
    {
      "level": 2,
      "title": "Control sizing",
      "slug": "control-sizing",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "form/input.md"
};
var input_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$a
});
const data$9 = {
  "key": "v-64ecefd0",
  "path": "/form/radio.html",
  "title": "Form Radio",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Form Radio Inputs",
      "slug": "form-radio-inputs",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "form/radio.md"
};
var radio_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$9
});
const data$8 = {
  "key": "v-b3c164ec",
  "path": "/form/rating.html",
  "title": "Form Rating",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Variant and color",
      "slug": "variant-and-color",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "form/rating.md"
};
var rating_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$8
});
const data$7 = {
  "key": "v-ca67e4ea",
  "path": "/form/select.html",
  "title": "Form Select",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Default",
      "slug": "default",
      "children": []
    },
    {
      "level": 2,
      "title": "Sizing",
      "slug": "sizing",
      "children": []
    },
    {
      "level": 2,
      "title": "Disabled",
      "slug": "disabled",
      "children": []
    },
    {
      "level": 2,
      "title": "options prop",
      "slug": "options-prop",
      "children": []
    },
    {
      "level": 2,
      "title": "text & value props",
      "slug": "text-value-props",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1643550905e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "form/select.md"
};
var select_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$7
});
const data$6 = {
  "key": "v-0087f093",
  "path": "/form/spinbutton.html",
  "title": "Spin Button",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Overview",
      "slug": "overview",
      "children": []
    },
    {
      "level": 2,
      "title": "v-model value",
      "slug": "v-model-value",
      "children": []
    },
    {
      "level": 2,
      "title": "min, max, and step",
      "slug": "min-max-and-step",
      "children": []
    },
    {
      "level": 2,
      "title": "Size",
      "slug": "size",
      "children": []
    },
    {
      "level": 2,
      "title": "Inline",
      "slug": "inline",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1643730891e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "form/spinbutton.md"
};
var spinbutton_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$6
});
const data$5 = {
  "key": "v-2ecfa7e4",
  "path": "/form/tags.html",
  "title": "Form Tags",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Basic usage",
      "slug": "basic-usage",
      "children": []
    },
    {
      "level": 2,
      "title": "Tag creation using separators",
      "slug": "tag-creation-using-separators",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 164415825e4,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "form/tags.md"
};
var tags_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$5
});
const data$4 = {
  "key": "v-ccdc4da0",
  "path": "/getting-started/",
  "title": "Getting Started",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Using NPM",
      "slug": "using-npm",
      "children": []
    },
    {
      "level": 2,
      "title": "Using Yarn",
      "slug": "using-yarn",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "getting-started/index.md"
};
var index_html$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$4
});
const data$3 = {
  "key": "v-fb1db6e4",
  "path": "/icons/",
  "title": "Bootstrap Icons",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Getting Started",
      "slug": "getting-started",
      "children": []
    },
    {
      "level": 2,
      "title": "Installation",
      "slug": "installation",
      "children": [
        {
          "level": 3,
          "title": "Using NPM",
          "slug": "using-npm",
          "children": []
        },
        {
          "level": 3,
          "title": "Using yarn",
          "slug": "using-yarn",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "How to Use",
      "slug": "how-to-use",
      "children": []
    },
    {
      "level": 2,
      "title": "List of Suppoerted Icons",
      "slug": "list-of-suppoerted-icons",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 164294512e4,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "icons/index.md"
};
var index_html$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$3
});
const data$2 = {
  "key": "v-366a25f4",
  "path": "/list-group/",
  "title": "List Group",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [],
  "git": {
    "updatedTime": 164415825e4,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 1
      }
    ]
  },
  "filePathRelative": "list-group/index.md"
};
var index_html$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$2
});
const data$1 = {
  "key": "v-01e68820",
  "path": "/buttons/toolbars/",
  "title": "Button Toolbar",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Usage",
      "slug": "usage",
      "children": []
    },
    {
      "level": 2,
      "title": "Sizing",
      "slug": "sizing",
      "children": []
    },
    {
      "level": 2,
      "title": "Justify",
      "slug": "justify",
      "children": []
    },
    {
      "level": 2,
      "title": "Keyboard navigation",
      "slug": "keyboard-navigation",
      "children": []
    }
  ],
  "git": {
    "updatedTime": 1642782083e3,
    "contributors": [
      {
        "name": "Narayan Adhikary",
        "email": "wovosoft@gmail.com",
        "commits": 2
      }
    ]
  },
  "filePathRelative": "buttons/toolbars/index.md"
};
var index_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data: data$1
});
const data = {
  "key": "v-3706649a",
  "path": "/404.html",
  "title": "",
  "lang": "en-US",
  "frontmatter": {
    "layout": "404"
  },
  "excerpt": "",
  "headers": [],
  "git": {},
  "filePathRelative": null
};
var _404_html = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  data
});
const _sfc_main$k = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    var _a, _b, _c;
    const routeLocale = useRouteLocale();
    const themeLocale = useThemeLocaleData();
    const messages = (_a = themeLocale.value.notFound) != null ? _a : ["Not Found"];
    const getMsg = () => messages[Math.floor(Math.random() * messages.length)];
    const homeLink = (_b = themeLocale.value.home) != null ? _b : routeLocale.value;
    const homeText = (_c = themeLocale.value.backToHome) != null ? _c : "Back to home";
    return (_ctx, _push, _parent, _attrs) => {
      const _component_RouterLink = vue.resolveComponent("RouterLink");
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "theme-container" }, _attrs))}><div class="theme-default-content"><h1>404</h1><blockquote>${serverRenderer.ssrInterpolate(getMsg())}</blockquote>`);
      _push(serverRenderer.ssrRenderComponent(_component_RouterLink, { to: vue.unref(homeLink) }, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${serverRenderer.ssrInterpolate(vue.unref(homeText))}`);
          } else {
            return [
              vue.createTextVNode(vue.toDisplayString(vue.unref(homeText)), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$k = _sfc_main$k.setup;
_sfc_main$k.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/layouts/404.vue");
  return _sfc_setup$k ? _sfc_setup$k(props, ctx) : void 0;
};
var _404 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main$k
});
const _sfc_main$j = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_Content = vue.resolveComponent("Content");
  _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "theme-default-content custom" }, _attrs))}>`);
  _push(serverRenderer.ssrRenderComponent(_component_Content, null, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$j = _sfc_main$j.setup;
_sfc_main$j.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/HomeContent.vue");
  return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
};
var HomeContent = /* @__PURE__ */ _export_sfc(_sfc_main$j, [["ssrRender", _sfc_ssrRender]]);
const _sfc_main$i = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const frontmatter = usePageFrontmatter();
    const features = vue.computed(() => {
      if (isArray(frontmatter.value.features)) {
        return frontmatter.value.features;
      }
      return [];
    });
    return (_ctx, _push, _parent, _attrs) => {
      if (vue.unref(features).length) {
        _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "features" }, _attrs))}><!--[-->`);
        serverRenderer.ssrRenderList(vue.unref(features), (feature) => {
          _push(`<div class="feature"><h2>${serverRenderer.ssrInterpolate(feature.title)}</h2><p>${serverRenderer.ssrInterpolate(feature.details)}</p></div>`);
        });
        _push(`<!--]--></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/HomeFeatures.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
const _sfc_main$h = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const frontmatter = usePageFrontmatter();
    const footer = vue.computed(() => frontmatter.value.footer);
    const footerHtml = vue.computed(() => frontmatter.value.footerHtml);
    return (_ctx, _push, _parent, _attrs) => {
      if (vue.unref(footer)) {
        _push(`<!--[-->`);
        if (vue.unref(footerHtml)) {
          _push(`<div class="footer">${vue.unref(footer)}</div>`);
        } else {
          _push(`<div class="footer">${serverRenderer.ssrInterpolate(vue.unref(footer))}</div>`);
        }
        _push(`<!--]-->`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/HomeFooter.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
const __default__ = vue.defineComponent({
  inheritAttrs: false
});
const _sfc_main$g = /* @__PURE__ */ vue.defineComponent(__spreadProps(__spreadValues({}, __default__), {
  __ssrInlineRender: true,
  props: {
    item: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const route = vueRouter.useRoute();
    const site = useSiteData();
    const { item } = vue.toRefs(props);
    const hasHttpProtocol = vue.computed(() => isLinkHttp(item.value.link));
    const hasNonHttpProtocol = vue.computed(() => isLinkMailto(item.value.link) || isLinkTel(item.value.link));
    const linkTarget = vue.computed(() => {
      if (hasNonHttpProtocol.value)
        return void 0;
      if (item.value.target)
        return item.value.target;
      if (hasHttpProtocol.value)
        return "_blank";
      return void 0;
    });
    const isBlankTarget = vue.computed(() => linkTarget.value === "_blank");
    const isRouterLink = vue.computed(() => !hasHttpProtocol.value && !hasNonHttpProtocol.value && !isBlankTarget.value);
    const linkRel = vue.computed(() => {
      if (hasNonHttpProtocol.value)
        return void 0;
      if (item.value.rel)
        return item.value.rel;
      if (isBlankTarget.value)
        return "noopener noreferrer";
      return void 0;
    });
    const linkAriaLabel = vue.computed(() => item.value.ariaLabel || item.value.text);
    const shouldBeActiveInSubpath = vue.computed(() => {
      const localeKeys = Object.keys(site.value.locales);
      if (localeKeys.length) {
        return !localeKeys.some((key) => key === item.value.link);
      }
      return item.value.link !== "/";
    });
    const isActiveInSubpath = vue.computed(() => {
      if (!shouldBeActiveInSubpath.value) {
        return false;
      }
      return route.path.startsWith(item.value.link);
    });
    const isActive = vue.computed(() => {
      if (!isRouterLink.value) {
        return false;
      }
      if (item.value.activeMatch) {
        return new RegExp(item.value.activeMatch).test(route.path);
      }
      return isActiveInSubpath.value;
    });
    return (_ctx, _push, _parent, _attrs) => {
      const _component_RouterLink = vue.resolveComponent("RouterLink");
      const _component_ExternalLinkIcon = vue.resolveComponent("ExternalLinkIcon");
      if (vue.unref(isRouterLink)) {
        _push(serverRenderer.ssrRenderComponent(_component_RouterLink, vue.mergeProps({
          class: { "router-link-active": vue.unref(isActive) },
          to: vue.unref(item).link,
          "aria-label": vue.unref(linkAriaLabel)
        }, _ctx.$attrs, _attrs), {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "before", {}, null, _push2, _parent2, _scopeId);
              _push2(` ${serverRenderer.ssrInterpolate(vue.unref(item).text)} `);
              serverRenderer.ssrRenderSlot(_ctx.$slots, "after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "before"),
                vue.createTextVNode(" " + vue.toDisplayString(vue.unref(item).text) + " ", 1),
                vue.renderSlot(_ctx.$slots, "after")
              ];
            }
          }),
          _: 3
        }, _parent));
      } else {
        _push(`<a${serverRenderer.ssrRenderAttrs(vue.mergeProps({
          class: "external-link",
          href: vue.unref(item).link,
          rel: vue.unref(linkRel),
          target: vue.unref(linkTarget),
          "aria-label": vue.unref(linkAriaLabel)
        }, _ctx.$attrs, _attrs))}>`);
        serverRenderer.ssrRenderSlot(_ctx.$slots, "before", {}, null, _push, _parent);
        _push(` ${serverRenderer.ssrInterpolate(vue.unref(item).text)} `);
        if (vue.unref(isBlankTarget)) {
          _push(serverRenderer.ssrRenderComponent(_component_ExternalLinkIcon, null, null, _parent));
        } else {
          _push(`<!---->`);
        }
        serverRenderer.ssrRenderSlot(_ctx.$slots, "after", {}, null, _push, _parent);
        _push(`</a>`);
      }
    };
  }
}));
const _sfc_setup$g = _sfc_main$g.setup;
_sfc_main$g.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/AutoLink.vue");
  return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
};
const _sfc_main$f = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const frontmatter = usePageFrontmatter();
    const siteLocale = useSiteLocaleData();
    const isDarkMode = useDarkMode();
    const heroImage = vue.computed(() => {
      if (isDarkMode.value && frontmatter.value.heroImageDark !== void 0) {
        return frontmatter.value.heroImageDark;
      }
      return frontmatter.value.heroImage;
    });
    const heroText = vue.computed(() => {
      if (frontmatter.value.heroText === null) {
        return null;
      }
      return frontmatter.value.heroText || siteLocale.value.title || "Hello";
    });
    const heroAlt = vue.computed(() => frontmatter.value.heroAlt || heroText.value || "hero");
    const tagline = vue.computed(() => {
      if (frontmatter.value.tagline === null) {
        return null;
      }
      return frontmatter.value.tagline || siteLocale.value.description || "Welcome to your VuePress site";
    });
    const actions = vue.computed(() => {
      if (!isArray(frontmatter.value.actions)) {
        return [];
      }
      return frontmatter.value.actions.map(({ text, link, type = "primary" }) => ({
        text,
        link,
        type
      }));
    });
    const HomeHeroImage = () => {
      if (!heroImage.value)
        return null;
      const img = vue.h("img", {
        src: withBase(heroImage.value),
        alt: heroAlt.value
      });
      if (frontmatter.value.heroImageDark === void 0) {
        return img;
      }
      return vue.h(ClientOnly, img);
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<header${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "hero" }, _attrs))}>`);
      _push(serverRenderer.ssrRenderComponent(HomeHeroImage, null, null, _parent));
      if (vue.unref(heroText)) {
        _push(`<h1 id="main-title">${serverRenderer.ssrInterpolate(vue.unref(heroText))}</h1>`);
      } else {
        _push(`<!---->`);
      }
      if (vue.unref(tagline)) {
        _push(`<p class="description">${serverRenderer.ssrInterpolate(vue.unref(tagline))}</p>`);
      } else {
        _push(`<!---->`);
      }
      if (vue.unref(actions).length) {
        _push(`<p class="actions"><!--[-->`);
        serverRenderer.ssrRenderList(vue.unref(actions), (action) => {
          _push(serverRenderer.ssrRenderComponent(_sfc_main$g, {
            key: action.text,
            class: ["action-button", [action.type]],
            item: action
          }, null, _parent));
        });
        _push(`<!--]--></p>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</header>`);
    };
  }
});
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/HomeHero.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
const _sfc_main$e = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<main${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "home" }, _attrs))}>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$f, null, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_sfc_main$i, null, null, _parent));
      _push(serverRenderer.ssrRenderComponent(HomeContent, null, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_sfc_main$h, null, null, _parent));
      _push(`</main>`);
    };
  }
});
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/Home.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
const _sfc_main$d = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const routeLocale = useRouteLocale();
    const siteLocale = useSiteLocaleData();
    const themeLocale = useThemeLocaleData();
    const isDarkMode = useDarkMode();
    const navbarBrandLink = vue.computed(() => themeLocale.value.home || routeLocale.value);
    const navbarBrandTitle = vue.computed(() => siteLocale.value.title);
    const navbarBrandLogo = vue.computed(() => {
      if (isDarkMode.value && themeLocale.value.logoDark !== void 0) {
        return themeLocale.value.logoDark;
      }
      return themeLocale.value.logo;
    });
    const NavbarBrandLogo = () => {
      if (!navbarBrandLogo.value)
        return null;
      const img = vue.h("img", {
        class: "logo",
        src: withBase(navbarBrandLogo.value),
        alt: navbarBrandTitle.value
      });
      if (themeLocale.value.logoDark === void 0) {
        return img;
      }
      return vue.h(ClientOnly, img);
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_RouterLink = vue.resolveComponent("RouterLink");
      _push(serverRenderer.ssrRenderComponent(_component_RouterLink, vue.mergeProps({ to: vue.unref(navbarBrandLink) }, _attrs), {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(serverRenderer.ssrRenderComponent(NavbarBrandLogo, null, null, _parent2, _scopeId));
            if (vue.unref(navbarBrandTitle)) {
              _push2(`<span class="site-name"${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(navbarBrandTitle))}</span>`);
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              vue.createVNode(NavbarBrandLogo),
              vue.unref(navbarBrandTitle) ? (vue.openBlock(), vue.createBlock("span", {
                key: 0,
                class: "site-name"
              }, vue.toDisplayString(vue.unref(navbarBrandTitle)), 1)) : vue.createCommentVNode("", true)
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/NavbarBrand.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
const _sfc_main$c = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      serverRenderer.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    };
  }
});
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/DropdownTransition.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
const _sfc_main$b = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  props: {
    item: {
      type: Object,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const { item } = vue.toRefs(props);
    const dropdownAriaLabel = vue.computed(() => item.value.ariaLabel || item.value.text);
    const open = vue.ref(false);
    const route = vueRouter.useRoute();
    vue.watch(() => route.path, () => {
      open.value = false;
    });
    const isLastItemOfArray = (item2, arr) => arr[arr.length - 1] === item2;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
        class: ["navbar-dropdown-wrapper", { open: open.value }]
      }, _attrs))}><button class="navbar-dropdown-title" type="button"${serverRenderer.ssrRenderAttr("aria-label", vue.unref(dropdownAriaLabel))}><span class="title">${serverRenderer.ssrInterpolate(vue.unref(item).text)}</span><span class="arrow down"></span></button><button class="navbar-dropdown-title-mobile" type="button"${serverRenderer.ssrRenderAttr("aria-label", vue.unref(dropdownAriaLabel))}><span class="title">${serverRenderer.ssrInterpolate(vue.unref(item).text)}</span><span class="${serverRenderer.ssrRenderClass([open.value ? "down" : "right", "arrow"])}"></span></button>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$c, null, {
        default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<ul style="${serverRenderer.ssrRenderStyle(open.value ? null : { display: "none" })}" class="navbar-dropdown"${_scopeId}><!--[-->`);
            serverRenderer.ssrRenderList(vue.unref(item).children, (child) => {
              _push2(`<li class="navbar-dropdown-item"${_scopeId}>`);
              if (child.children) {
                _push2(`<!--[--><h4 class="navbar-dropdown-subtitle"${_scopeId}>`);
                if (child.link) {
                  _push2(serverRenderer.ssrRenderComponent(_sfc_main$g, { item: child }, null, _parent2, _scopeId));
                } else {
                  _push2(`<span${_scopeId}>${serverRenderer.ssrInterpolate(child.text)}</span>`);
                }
                _push2(`</h4><ul class="navbar-dropdown-subitem-wrapper"${_scopeId}><!--[-->`);
                serverRenderer.ssrRenderList(child.children, (grandchild) => {
                  _push2(`<li class="navbar-dropdown-subitem"${_scopeId}>`);
                  _push2(serverRenderer.ssrRenderComponent(_sfc_main$g, { item: grandchild }, null, _parent2, _scopeId));
                  _push2(`</li>`);
                });
                _push2(`<!--]--></ul><!--]-->`);
              } else {
                _push2(serverRenderer.ssrRenderComponent(_sfc_main$g, { item: child }, null, _parent2, _scopeId));
              }
              _push2(`</li>`);
            });
            _push2(`<!--]--></ul>`);
          } else {
            return [
              vue.withDirectives(vue.createVNode("ul", { class: "navbar-dropdown" }, [
                (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(item).children, (child) => {
                  return vue.openBlock(), vue.createBlock("li", {
                    key: child.text,
                    class: "navbar-dropdown-item"
                  }, [
                    child.children ? (vue.openBlock(), vue.createBlock(vue.Fragment, { key: 0 }, [
                      vue.createVNode("h4", { class: "navbar-dropdown-subtitle" }, [
                        child.link ? (vue.openBlock(), vue.createBlock(_sfc_main$g, {
                          key: 0,
                          item: child,
                          onFocusout: ($event) => isLastItemOfArray(child, vue.unref(item).children) && child.children.length === 0 && (open.value = false)
                        }, null, 8, ["item", "onFocusout"])) : (vue.openBlock(), vue.createBlock("span", { key: 1 }, vue.toDisplayString(child.text), 1))
                      ]),
                      vue.createVNode("ul", { class: "navbar-dropdown-subitem-wrapper" }, [
                        (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(child.children, (grandchild) => {
                          return vue.openBlock(), vue.createBlock("li", {
                            key: grandchild.link,
                            class: "navbar-dropdown-subitem"
                          }, [
                            vue.createVNode(_sfc_main$g, {
                              item: grandchild,
                              onFocusout: ($event) => isLastItemOfArray(grandchild, child.children) && isLastItemOfArray(child, vue.unref(item).children) && (open.value = false)
                            }, null, 8, ["item", "onFocusout"])
                          ]);
                        }), 128))
                      ])
                    ], 64)) : (vue.openBlock(), vue.createBlock(_sfc_main$g, {
                      key: 1,
                      item: child,
                      onFocusout: ($event) => isLastItemOfArray(child, vue.unref(item).children) && (open.value = false)
                    }, null, 8, ["item", "onFocusout"]))
                  ]);
                }), 128))
              ], 512), [
                [vue.vShow, open.value]
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup$b = _sfc_main$b.setup;
_sfc_main$b.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/NavbarDropdown.vue");
  return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
};
const normalizePath = (path) => decodeURI(path).replace(/#.*$/, "").replace(/(index)?\.(md|html)$/, "");
const isActiveLink = (link, route) => {
  if (route.hash === link) {
    return true;
  }
  const currentPath = normalizePath(route.path);
  const targetPath = normalizePath(link);
  return currentPath === targetPath;
};
const isActiveSidebarItem = (item, route) => {
  if (item.link && isActiveLink(item.link, route)) {
    return true;
  }
  if (item.children) {
    return item.children.some((child) => isActiveSidebarItem(child, route));
  }
  return false;
};
const resolveRepoType = (repo) => {
  if (!isLinkHttp(repo) || /github\.com/.test(repo))
    return "GitHub";
  if (/bitbucket\.org/.test(repo))
    return "Bitbucket";
  if (/gitlab\.com/.test(repo))
    return "GitLab";
  if (/gitee\.com/.test(repo))
    return "Gitee";
  return null;
};
const editLinkPatterns = {
  GitHub: ":repo/edit/:branch/:path",
  GitLab: ":repo/-/edit/:branch/:path",
  Gitee: ":repo/edit/:branch/:path",
  Bitbucket: ":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"
};
const resolveEditLinkPatterns = ({ docsRepo, editLinkPattern }) => {
  if (editLinkPattern) {
    return editLinkPattern;
  }
  const repoType = resolveRepoType(docsRepo);
  if (repoType !== null) {
    return editLinkPatterns[repoType];
  }
  return null;
};
const resolveEditLink = ({ docsRepo, docsBranch, docsDir, filePathRelative, editLinkPattern }) => {
  if (!filePathRelative)
    return null;
  const pattern = resolveEditLinkPatterns({ docsRepo, editLinkPattern });
  if (!pattern)
    return null;
  return pattern.replace(/:repo/, isLinkHttp(docsRepo) ? docsRepo : `https://github.com/${docsRepo}`).replace(/:branch/, docsBranch).replace(/:path/, removeLeadingSlash(`${removeEndingSlash(docsDir)}/${filePathRelative}`));
};
const _sfc_main$a = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const useNavbarSelectLanguage = () => {
      const router = vueRouter.useRouter();
      const routeLocale = useRouteLocale();
      const siteLocale = useSiteLocaleData();
      const themeLocale = useThemeLocaleData();
      return vue.computed(() => {
        var _a, _b;
        const localePaths = Object.keys(siteLocale.value.locales);
        if (localePaths.length < 2) {
          return [];
        }
        const currentPath = router.currentRoute.value.path;
        const currentFullPath = router.currentRoute.value.fullPath;
        const languageDropdown = {
          text: (_a = themeLocale.value.selectLanguageText) != null ? _a : "unknown language",
          ariaLabel: (_b = themeLocale.value.selectLanguageAriaLabel) != null ? _b : "unkown language",
          children: localePaths.map((targetLocalePath) => {
            var _a2, _b2, _c, _d, _e, _f;
            const targetSiteLocale = (_b2 = (_a2 = siteLocale.value.locales) == null ? void 0 : _a2[targetLocalePath]) != null ? _b2 : {};
            const targetThemeLocale = (_d = (_c = themeLocale.value.locales) == null ? void 0 : _c[targetLocalePath]) != null ? _d : {};
            const targetLang = `${targetSiteLocale.lang}`;
            const text = (_e = targetThemeLocale.selectLanguageName) != null ? _e : targetLang;
            let link;
            if (targetLang === siteLocale.value.lang) {
              link = currentFullPath;
            } else {
              const targetLocalePage = currentPath.replace(routeLocale.value, targetLocalePath);
              if (router.getRoutes().some((item) => item.path === targetLocalePage)) {
                link = targetLocalePage;
              } else {
                link = (_f = targetThemeLocale.home) != null ? _f : targetLocalePath;
              }
            }
            return {
              text,
              link
            };
          })
        };
        return [languageDropdown];
      });
    };
    const useNavbarRepo = () => {
      const themeLocale = useThemeLocaleData();
      const repo = vue.computed(() => themeLocale.value.repo);
      const repoType = vue.computed(() => repo.value ? resolveRepoType(repo.value) : null);
      const repoLink = vue.computed(() => {
        if (repo.value && !isLinkHttp(repo.value)) {
          return `https://github.com/${repo.value}`;
        }
        return repo.value;
      });
      const repoLabel = vue.computed(() => {
        if (!repoLink.value)
          return null;
        if (themeLocale.value.repoLabel)
          return themeLocale.value.repoLabel;
        if (repoType.value === null)
          return "Source";
        return repoType.value;
      });
      return vue.computed(() => {
        if (!repoLink.value || !repoLabel.value) {
          return [];
        }
        return [
          {
            text: repoLabel.value,
            link: repoLink.value
          }
        ];
      });
    };
    const resolveNavbarItem = (item) => {
      if (isString(item)) {
        return useNavLink(item);
      }
      if (item.children) {
        return __spreadProps(__spreadValues({}, item), {
          children: item.children.map(resolveNavbarItem)
        });
      }
      return item;
    };
    const useNavbarConfig = () => {
      const themeLocale = useThemeLocaleData();
      return vue.computed(() => (themeLocale.value.navbar || []).map(resolveNavbarItem));
    };
    const navbarConfig = useNavbarConfig();
    const navbarSelectLanguage = useNavbarSelectLanguage();
    const navbarRepo = useNavbarRepo();
    const navbarLinks = vue.computed(() => [
      ...navbarConfig.value,
      ...navbarSelectLanguage.value,
      ...navbarRepo.value
    ]);
    return (_ctx, _push, _parent, _attrs) => {
      if (vue.unref(navbarLinks).length) {
        _push(`<nav${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "navbar-items" }, _attrs))}><!--[-->`);
        serverRenderer.ssrRenderList(vue.unref(navbarLinks), (item) => {
          _push(`<div class="navbar-item">`);
          if (item.children) {
            _push(serverRenderer.ssrRenderComponent(_sfc_main$b, { item }, null, _parent));
          } else {
            _push(serverRenderer.ssrRenderComponent(_sfc_main$g, { item }, null, _parent));
          }
          _push(`</div>`);
        });
        _push(`<!--]--></nav>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/NavbarItems.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
const _sfc_main$9 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const themeLocale = useThemeLocaleData();
    const isDarkMode = useDarkMode();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<button${serverRenderer.ssrRenderAttrs(vue.mergeProps({
        class: "toggle-dark-button",
        title: vue.unref(themeLocale).toggleDarkMode
      }, _attrs))}>`);
      if (!vue.unref(isDarkMode)) {
        _push(serverRenderer.ssrRenderComponent(vue.unref(icons.BrightnessHighFill), null, null, _parent));
      } else {
        _push(serverRenderer.ssrRenderComponent(vue.unref(icons.BrightnessHigh), null, null, _parent));
      }
      _push(`</button>`);
    };
  }
});
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/ToggleDarkModeButton.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
const _sfc_main$8 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  emits: ["toggle"],
  setup(__props) {
    const themeLocale = useThemeLocaleData();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
        class: "toggle-sidebar-button",
        title: vue.unref(themeLocale).toggleSidebar,
        "aria-expanded": "false",
        role: "button",
        tabindex: "0"
      }, _attrs))}><span class="navbar-toggler-icon" aria-hidden="true"></span></div>`);
    };
  }
});
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/ToggleSidebarButton.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
const _sfc_main$7 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  emits: ["toggle-sidebar"],
  setup(__props) {
    const themeLocale = useThemeLocaleData();
    const navbar = vue.ref(null);
    const navbarBrand = vue.ref(null);
    const linksWrapperMaxWidth = vue.ref(0);
    const linksWrapperStyle = vue.computed(() => {
      if (!linksWrapperMaxWidth.value) {
        return {};
      }
      return {
        maxWidth: linksWrapperMaxWidth.value + "px"
      };
    });
    const enableDarkMode = vue.computed(() => themeLocale.value.darkMode);
    vue.onMounted(() => {
      const MOBILE_DESKTOP_BREAKPOINT = 719;
      const navbarHorizontalPadding = getCssValue(navbar.value, "paddingLeft") + getCssValue(navbar.value, "paddingRight");
      const handleLinksWrapWidth = () => {
        var _a;
        if (window.innerWidth <= MOBILE_DESKTOP_BREAKPOINT) {
          linksWrapperMaxWidth.value = 0;
        } else {
          linksWrapperMaxWidth.value = navbar.value.offsetWidth - navbarHorizontalPadding - (((_a = navbarBrand.value) == null ? void 0 : _a.offsetWidth) || 0);
        }
      };
      handleLinksWrapWidth();
      window.addEventListener("resize", handleLinksWrapWidth, false);
      window.addEventListener("orientationchange", handleLinksWrapWidth, false);
    });
    function getCssValue(el, property) {
      var _a, _b, _c;
      const val = (_c = (_b = (_a = el == null ? void 0 : el.ownerDocument) == null ? void 0 : _a.defaultView) == null ? void 0 : _b.getComputedStyle(el, null)) == null ? void 0 : _c[property];
      const num = Number.parseInt(val, 10);
      return Number.isNaN(num) ? 0 : num;
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_NavbarSearch = vue.resolveComponent("NavbarSearch");
      _push(`<header${serverRenderer.ssrRenderAttrs(vue.mergeProps({
        ref_key: "navbar",
        ref: navbar,
        class: "navbar navbar-expand-lg navbar-light bg-light fixed-top"
      }, _attrs))}>`);
      if (vue.unref(enableDarkMode)) {
        _push(serverRenderer.ssrRenderComponent(_sfc_main$9, null, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="container">`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$8, { class: "navbar-toggler" }, null, _parent));
      _push(`<div>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$d, { class: "navbar-brand" }, null, _parent));
      _push(`</div><div class="navbar-items-wrapper" style="${serverRenderer.ssrRenderStyle(vue.unref(linksWrapperStyle))}">`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "before", {}, null, _push, _parent);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$a, { class: "can-hide" }, null, _parent));
      serverRenderer.ssrRenderSlot(_ctx.$slots, "after", {}, null, _push, _parent);
      if (vue.unref(enableDarkMode)) {
        _push(serverRenderer.ssrRenderComponent(_sfc_main$9, null, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(serverRenderer.ssrRenderComponent(_component_NavbarSearch, null, null, _parent));
      _push(`</div></div></header>`);
    };
  }
});
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/Navbar.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
const _sfc_main$6 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const useEditNavLink = () => {
      const themeLocale2 = useThemeLocaleData();
      const page = usePageData();
      const frontmatter = usePageFrontmatter();
      return vue.computed(() => {
        var _a, _b, _c;
        const showEditLink = (_b = (_a = frontmatter.value.editLink) != null ? _a : themeLocale2.value.editLink) != null ? _b : true;
        if (!showEditLink) {
          return null;
        }
        const {
          repo,
          docsRepo = repo,
          docsBranch = "main",
          docsDir = "",
          editLinkText
        } = themeLocale2.value;
        if (!docsRepo)
          return null;
        const editLink = resolveEditLink({
          docsRepo,
          docsBranch,
          docsDir,
          filePathRelative: page.value.filePathRelative,
          editLinkPattern: (_c = frontmatter.value.editLinkPattern) != null ? _c : themeLocale2.value.editLinkPattern
        });
        if (!editLink)
          return null;
        return {
          text: editLinkText != null ? editLinkText : "Edit this page",
          link: editLink
        };
      });
    };
    const useLastUpdated = () => {
      const themeLocale2 = useThemeLocaleData();
      const page = usePageData();
      const frontmatter = usePageFrontmatter();
      return vue.computed(() => {
        var _a, _b, _c, _d;
        const showLastUpdated = (_b = (_a = frontmatter.value.lastUpdated) != null ? _a : themeLocale2.value.lastUpdated) != null ? _b : true;
        if (!showLastUpdated)
          return null;
        if (!((_c = page.value.git) == null ? void 0 : _c.updatedTime))
          return null;
        const updatedDate = new Date((_d = page.value.git) == null ? void 0 : _d.updatedTime);
        return updatedDate.toLocaleString();
      });
    };
    const useContributors = () => {
      const themeLocale2 = useThemeLocaleData();
      const page = usePageData();
      const frontmatter = usePageFrontmatter();
      return vue.computed(() => {
        var _a, _b, _c, _d;
        const showContributors = (_b = (_a = frontmatter.value.contributors) != null ? _a : themeLocale2.value.contributors) != null ? _b : true;
        if (!showContributors)
          return null;
        return (_d = (_c = page.value.git) == null ? void 0 : _c.contributors) != null ? _d : null;
      });
    };
    const themeLocale = useThemeLocaleData();
    const editNavLink = useEditNavLink();
    const lastUpdated = useLastUpdated();
    const contributors = useContributors();
    return (_ctx, _push, _parent, _attrs) => {
      const _component_ClientOnly = vue.resolveComponent("ClientOnly");
      _push(`<footer${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "page-meta" }, _attrs))}>`);
      if (vue.unref(editNavLink)) {
        _push(`<div class="meta-item edit-link">`);
        _push(serverRenderer.ssrRenderComponent(_sfc_main$g, {
          class: "meta-item-label",
          item: vue.unref(editNavLink)
        }, null, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      if (vue.unref(lastUpdated)) {
        _push(`<div class="meta-item last-updated"><span class="meta-item-label">${serverRenderer.ssrInterpolate(vue.unref(themeLocale).lastUpdatedText)}: </span>`);
        _push(serverRenderer.ssrRenderComponent(_component_ClientOnly, null, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<span class="meta-item-info"${_scopeId}>${serverRenderer.ssrInterpolate(vue.unref(lastUpdated))}</span>`);
            } else {
              return [
                vue.createVNode("span", { class: "meta-item-info" }, vue.toDisplayString(vue.unref(lastUpdated)), 1)
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      if (vue.unref(contributors) && vue.unref(contributors).length) {
        _push(`<div class="meta-item contributors"><span class="meta-item-label">${serverRenderer.ssrInterpolate(vue.unref(themeLocale).contributorsText)}: </span><span class="meta-item-info"><!--[-->`);
        serverRenderer.ssrRenderList(vue.unref(contributors), (contributor, index2) => {
          _push(`<!--[--><span class="contributor"${serverRenderer.ssrRenderAttr("title", `email: ${contributor.email}`)}>${serverRenderer.ssrInterpolate(contributor.name)}</span>`);
          if (index2 !== vue.unref(contributors).length - 1) {
            _push(`<!--[-->, <!--]-->`);
          } else {
            _push(`<!---->`);
          }
          _push(`<!--]-->`);
        });
        _push(`<!--]--></span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</footer>`);
    };
  }
});
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/PageMeta.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const _sfc_main$5 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const resolveFromFrontmatterConfig = (conf) => {
      if (conf === false) {
        return null;
      }
      if (isString(conf)) {
        return useNavLink(conf);
      }
      if (isPlainObject(conf)) {
        return conf;
      }
      return false;
    };
    const resolveFromSidebarItems = (sidebarItems2, currentPath, offset) => {
      const index2 = sidebarItems2.findIndex((item) => item.link === currentPath);
      if (index2 !== -1) {
        const targetItem = sidebarItems2[index2 + offset];
        if (!(targetItem == null ? void 0 : targetItem.link)) {
          return null;
        }
        return targetItem;
      }
      for (const item of sidebarItems2) {
        if (item.children) {
          const childResult = resolveFromSidebarItems(item.children, currentPath, offset);
          if (childResult) {
            return childResult;
          }
        }
      }
      return null;
    };
    const frontmatter = usePageFrontmatter();
    const sidebarItems = useSidebarItems();
    const route = vueRouter.useRoute();
    const prevNavLink = vue.computed(() => {
      const prevConfig = resolveFromFrontmatterConfig(frontmatter.value.prev);
      if (prevConfig !== false) {
        return prevConfig;
      }
      return resolveFromSidebarItems(sidebarItems.value, route.path, -1);
    });
    const nextNavLink = vue.computed(() => {
      const nextConfig = resolveFromFrontmatterConfig(frontmatter.value.next);
      if (nextConfig !== false) {
        return nextConfig;
      }
      return resolveFromSidebarItems(sidebarItems.value, route.path, 1);
    });
    return (_ctx, _push, _parent, _attrs) => {
      if (vue.unref(prevNavLink) || vue.unref(nextNavLink)) {
        _push(`<nav${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "page-nav" }, _attrs))}><p class="inner">`);
        if (vue.unref(prevNavLink)) {
          _push(`<span class="prev">`);
          _push(serverRenderer.ssrRenderComponent(_sfc_main$g, { item: vue.unref(prevNavLink) }, null, _parent));
          _push(`</span>`);
        } else {
          _push(`<!---->`);
        }
        if (vue.unref(nextNavLink)) {
          _push(`<span class="next">`);
          _push(serverRenderer.ssrRenderComponent(_sfc_main$g, { item: vue.unref(nextNavLink) }, null, _parent));
          _push(`</span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</p></nav>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/PageNav.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const _sfc_main$4 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Content = vue.resolveComponent("Content");
      _push(`<main${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "page" }, _attrs))}>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "top", {}, null, _push, _parent);
      _push(`<div class="theme-default-content">`);
      _push(serverRenderer.ssrRenderComponent(_component_Content, null, null, _parent));
      _push(`</div>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$6, null, null, _parent));
      _push(serverRenderer.ssrRenderComponent(_sfc_main$5, null, null, _parent));
      serverRenderer.ssrRenderSlot(_ctx.$slots, "bottom", {}, null, _push, _parent);
      _push(`</main>`);
    };
  }
});
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/Page.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const _sfc_main$3 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  props: {
    item: {
      type: Object,
      required: true
    },
    depth: {
      type: Number,
      required: false,
      default: 0
    }
  },
  setup(__props) {
    const props = __props;
    const { item, depth } = vue.toRefs(props);
    const route = vueRouter.useRoute();
    const router = vueRouter.useRouter();
    const isActive = vue.computed(() => isActiveSidebarItem(item.value, route));
    const itemClass = vue.computed(() => ({
      "sidebar-item": true,
      "sidebar-heading": depth.value === 0,
      "active": isActive.value,
      "collapsible": item.value.collapsible
    }));
    const isOpen = vue.ref(true);
    const onClick = vue.ref(void 0);
    if (item.value.collapsible) {
      isOpen.value = isActive.value;
      onClick.value = () => {
        isOpen.value = !isOpen.value;
      };
      router.afterEach(() => {
        isOpen.value = isActive.value;
      });
    }
    return (_ctx, _push, _parent, _attrs) => {
      var _a;
      const _component_SidebarItem = vue.resolveComponent("SidebarItem", true);
      _push(`<li${serverRenderer.ssrRenderAttrs(_attrs)}>`);
      if (vue.unref(item).link) {
        _push(serverRenderer.ssrRenderComponent(_sfc_main$g, {
          class: vue.unref(itemClass),
          item: vue.unref(item)
        }, null, _parent));
      } else {
        _push(`<p class="${serverRenderer.ssrRenderClass(vue.unref(itemClass))}">${serverRenderer.ssrInterpolate(vue.unref(item).text)} `);
        if (vue.unref(item).collapsible) {
          _push(`<span class="${serverRenderer.ssrRenderClass([isOpen.value ? "down" : "right", "arrow"])}"></span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</p>`);
      }
      if ((_a = vue.unref(item).children) == null ? void 0 : _a.length) {
        _push(serverRenderer.ssrRenderComponent(_sfc_main$c, null, {
          default: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<ul style="${serverRenderer.ssrRenderStyle(isOpen.value ? null : { display: "none" })}" class="sidebar-item-children"${_scopeId}><!--[-->`);
              serverRenderer.ssrRenderList(vue.unref(item).children, (child) => {
                _push2(serverRenderer.ssrRenderComponent(_component_SidebarItem, {
                  key: `${vue.unref(depth)}${child.text}${child.link}`,
                  item: child,
                  depth: vue.unref(depth) + 1
                }, null, _parent2, _scopeId));
              });
              _push2(`<!--]--></ul>`);
            } else {
              return [
                vue.withDirectives(vue.createVNode("ul", { class: "sidebar-item-children" }, [
                  (vue.openBlock(true), vue.createBlock(vue.Fragment, null, vue.renderList(vue.unref(item).children, (child) => {
                    return vue.openBlock(), vue.createBlock(_component_SidebarItem, {
                      key: `${vue.unref(depth)}${child.text}${child.link}`,
                      item: child,
                      depth: vue.unref(depth) + 1
                    }, null, 8, ["item", "depth"]);
                  }), 128))
                ], 512), [
                  [vue.vShow, isOpen.value]
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</li>`);
    };
  }
});
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/SidebarItem.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const _sfc_main$2 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const sidebarItems = useSidebarItems();
    return (_ctx, _push, _parent, _attrs) => {
      if (vue.unref(sidebarItems).length) {
        _push(`<ul${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "sidebar-items" }, _attrs))}><!--[-->`);
        serverRenderer.ssrRenderList(vue.unref(sidebarItems), (item) => {
          _push(serverRenderer.ssrRenderComponent(_sfc_main$3, {
            key: item.link || item.text,
            item
          }, null, _parent));
        });
        _push(`<!--]--></ul>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/SidebarItems.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const _sfc_main$1 = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<aside${serverRenderer.ssrRenderAttrs(vue.mergeProps({ class: "sidebar" }, _attrs))}>`);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$a, null, null, _parent));
      serverRenderer.ssrRenderSlot(_ctx.$slots, "top", {}, null, _push, _parent);
      _push(serverRenderer.ssrRenderComponent(_sfc_main$2, null, null, _parent));
      serverRenderer.ssrRenderSlot(_ctx.$slots, "bottom", {}, null, _push, _parent);
      _push(`</aside>`);
    };
  }
});
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/components/Sidebar.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const _sfc_main = /* @__PURE__ */ vue.defineComponent({
  __ssrInlineRender: true,
  setup(__props) {
    const page = usePageData();
    const frontmatter = usePageFrontmatter();
    const themeLocale = useThemeLocaleData();
    const shouldShowNavbar = vue.computed(() => frontmatter.value.navbar !== false && themeLocale.value.navbar !== false);
    const sidebarItems = useSidebarItems();
    const isSidebarOpen = vue.ref(false);
    const toggleSidebar = (to) => {
      isSidebarOpen.value = typeof to === "boolean" ? to : !isSidebarOpen.value;
    };
    const containerClass = vue.computed(() => [
      {
        "no-navbar": !shouldShowNavbar.value,
        "no-sidebar": !sidebarItems.value.length,
        "sidebar-open": isSidebarOpen.value
      },
      frontmatter.value.pageClass
    ]);
    let unregisterRouterHook;
    vue.onMounted(() => {
      const router = vueRouter.useRouter();
      unregisterRouterHook = router.afterEach(() => {
        toggleSidebar(false);
      });
    });
    vue.onUnmounted(() => {
      unregisterRouterHook();
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${serverRenderer.ssrRenderAttrs(vue.mergeProps({
        class: ["theme-container", vue.unref(containerClass)]
      }, _attrs))}>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "navbar", {}, () => {
        if (vue.unref(shouldShowNavbar)) {
          _push(serverRenderer.ssrRenderComponent(_sfc_main$7, null, {
            before: vue.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "navbar-before", {}, null, _push2, _parent2, _scopeId);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "navbar-before")
                ];
              }
            }),
            after: vue.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "navbar-after", {}, null, _push2, _parent2, _scopeId);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "navbar-after")
                ];
              }
            }),
            _: 3
          }, _parent));
        } else {
          _push(`<!---->`);
        }
      }, _push, _parent);
      _push(`<div class="sidebar-mask"></div>`);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "sidebar", {}, () => {
        _push(serverRenderer.ssrRenderComponent(_sfc_main$1, null, {
          top: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "sidebar-top", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "sidebar-top")
              ];
            }
          }),
          bottom: vue.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              serverRenderer.ssrRenderSlot(_ctx.$slots, "sidebar-bottom", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                vue.renderSlot(_ctx.$slots, "sidebar-bottom")
              ];
            }
          }),
          _: 3
        }, _parent));
      }, _push, _parent);
      serverRenderer.ssrRenderSlot(_ctx.$slots, "page", {}, () => {
        if (vue.unref(frontmatter).home) {
          _push(serverRenderer.ssrRenderComponent(_sfc_main$e, null, null, _parent));
        } else {
          _push(serverRenderer.ssrRenderComponent(_sfc_main$4, vue.mergeProps({
            key: vue.unref(page).path
          }, _attrs), {
            top: vue.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "page-top", {}, null, _push2, _parent2, _scopeId);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "page-top")
                ];
              }
            }),
            bottom: vue.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                serverRenderer.ssrRenderSlot(_ctx.$slots, "page-bottom", {}, null, _push2, _parent2, _scopeId);
              } else {
                return [
                  vue.renderSlot(_ctx.$slots, "page-bottom")
                ];
              }
            }),
            _: 3
          }, _parent));
        }
      }, _push, _parent);
      _push(`</div>`);
    };
  }
});
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = vue.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = new Set())).add("../../theme/lib/client/layouts/Layout.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
var Layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _sfc_main
});
exports.createVueApp = createVueApp;
